<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 4               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:07 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_global_other_4 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['ajaxPopUpNoPermission'] = array('msg');
$this->_funcHooks['displayBoardOffline'] = array('isGuest');
$this->_funcHooks['displayPopUpWindow'] = array('donotminifycss','cssImport','popupcssInline','popupmetaTags','popupjavascript','popuprss','popuprss','popupraw','popupdocumentHeadItems','popupheaditemtype','minifycss','csstominify','hasimportcss','popupcssinline','popupmetatags','popupminfiyrlhttpsp','popupminfiyrlhttpss','popupminfyjsrl','popupjsmodules','popuphttpsp','popuprl','popupjsmodules','popuphttpss','popuprl2','popupminifyjs','popupdocumenthead','popupbefriend','istm','istl','popupswfupload','popupfurl');
$this->_funcHooks['Error'] = array('haserrorcode','savedpost');
$this->_funcHooks['facebookPop'] = array('hasFbConnected');
$this->_funcHooks['generateTopicIcon'] = array('topicIsMoved','topicIsClosed','topicReadDot','topicUnreadDot','gotolatestwrap');
$this->_funcHooks['globalTemplateMinimal'] = array('fbcenabled','pagenumberintitle','isLargeTouch','isSmallTouch','mainpageContent','lastvisit','isfloat','sqldebuglink','closesqldebuglink','showdebuglevel');
$this->_funcHooks['inboxList'] = array('loopynotify','hasTopics');
$this->_funcHooks['likeMoreDialogue'] = array('hasVisibleEntries','hasAnonEntries');
$this->_funcHooks['likeSummaryContents'] = array('likeOnlyMembers');
$this->_funcHooks['notificationsList'] = array('loopynotify','hasnotifications');
$this->_funcHooks['questionAndAnswer'] = array('qadefault');
$this->_funcHooks['quickNavigationPanel'] = array('depth','important','innerAgain','hasTitle','linksisarray','outer');
$this->_funcHooks['quickNavigationWrapper'] = array('active','navTabs','isLargeTouch');
$this->_funcHooks['redirectTemplate'] = array('redirectcssImport','redirctcssInline','redirectjs','redirectrss','redirectrsd','redirectraw','redirectdocumentHeadItemsSub','redirectdocumentHeadItems','redirectfull','redirectcssimport','redirectcssinline','redirectdh','redirectmozfull','redirectlink');
$this->_funcHooks['repButtons'] = array('hasNoLikes','giveRepUp','giveRepDown','canGiveRep','pos','giveRepUp','giveRepDown','canGiveRep','hasNoRep','hasPosRep','hasNegRep','isNotLike','isLike','canRep','reputationBox');
$this->_funcHooks['socialSharePostStrip'] = array('canShareThis','services','canSave','canShare');
$this->_funcHooks['tagCloud'] = array('eachTag');
$this->_funcHooks['tagEntry'] = array('noClass','inSearch','inSearchSub','hasSearchSection');
$this->_funcHooks['tagPrefix'] = array('inSearch','inSearchSub','hasSearchSection');
$this->_funcHooks['tagTextEntryBox'] = array('isClosedField','prefixChecked','canPrefix');


}

/* -- ajaxPopUpNoPermission --*/
function ajaxPopUpNoPermission($msg='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['ajaxPopUpNoPermission'] ) )
{
$count_fe3fc53694a1f7315861c0961d58bfa4 = is_array($this->functionData['ajaxPopUpNoPermission']) ? count($this->functionData['ajaxPopUpNoPermission']) : 0;
$this->functionData['ajaxPopUpNoPermission'][$count_fe3fc53694a1f7315861c0961d58bfa4]['msg'] = $msg;
}
$IPBHTML .= "<h3>{$this->lang->words['ap_error']}</h3>
<div class='general_box'>
	<div>
		" . (($msg) ? ("
			$msg
		") : ("
			{$this->lang->words['ap_np_msg']}
		")) . "
	</div>
</div>";
return $IPBHTML;
}

/* -- captchaGD --*/
function captchaGD($captcha_unique_id) {
$IPBHTML = "";
$IPBHTML .= "<input type=\"hidden\" id=\"regid\" name=\"captcha_unique_id\" value=\"{$captcha_unique_id}\" />
<fieldset id='captcha' class='gd'>
	<ul class='ipsForm " . (($this->request['section'] == 'register' || $this->request['section'] == 'lostpass') ? ("ipsForm_horizontal") : ("ipsForm_vertical")) . "'>
		<li class='ipsField'>
			<label class='ipsField_title'>{$this->lang->words['glb_captcha_image']} <span class='ipsForm_required'>*</span></label>
			<div class='ipsField_content'>
				<p class='clearfix'>
					<img id='gd-antispam' class='antispam_img left' src='{$this->settings['base_url']}app=core&amp;module=global&amp;section=captcha&amp;do=showimage&amp;captcha_unique_id={$captcha_unique_id}' />
					<a href='#' id='gd-image-link' class='ipsButton_secondary left' title=\"{$this->lang->words['captcah_new']}\"><img src='{$this->settings['img_url']}/icon_refresh.png' alt=\"{$this->lang->words['captcah_new']}\" /></a>
				</p>
				<input type=\"text\" class='input_text' size=\"36\" maxlength=\"20\" value=\"\" name=\"captcha_string\" tabindex='0' id='captcha_string' />
			</div>
		</li>
	</ul>
</fieldset>
<script type='text/javascript'>
	ipb.global.initGD();
	$('captcha_string').defaultize( \"{$this->lang->words['captcha_string_enter']}\" );
</script>";
return $IPBHTML;
}

/* -- captchaRecaptcha --*/
function captchaRecaptcha($html="") {
$IPBHTML = "";
$IPBHTML .= "<fieldset id='captcha' class='recaptcha'>
	<ul class='ipsForm " . (($this->request['section'] == 'register' || $this->request['section'] == 'lostpass') ? ("ipsForm_horizontal") : ("ipsForm_vertical")) . "'>
		<li class='ipsField'>
			<label class='ipsField_title'>{$this->lang->words['glb_captcha_image']} <span class='ipsForm_required'>*</span></label>
			<div class='ipsField_content'>
				{$html}
			</div>
		</li>
	</ul>
</fieldset>";
return $IPBHTML;
}

/* -- displayBoardOffline --*/
function displayBoardOffline($message="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['displayBoardOffline'] ) )
{
$count_73c463715aa900ca971398251fb2abb1 = is_array($this->functionData['displayBoardOffline']) ? count($this->functionData['displayBoardOffline']) : 0;
$this->functionData['displayBoardOffline'][$count_73c463715aa900ca971398251fb2abb1]['message'] = $message;
}
$IPBHTML .= "<h1 class='ipsType_pagetitle'>" . sprintf( $this->lang->words['board_offline_desc'], $this->settings['board_name']) . "</h1>
<div class='ipsType_pagedesc'>{$message}</div>
<br /><br />
<p>
	" . ((!$this->memberData['member_id']) ? ("
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=login", "public",'' ), "", "" ) . "' title='{$this->lang->words['attempt_login']}' class='ipsButton'>{$this->lang->words['click_login']}</a>
	") : ("
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=login&amp;do=logout&amp;k={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['log_out']}' class='ipsButton_secondary'>{$this->lang->words['log_out']}</a>
	")) . "
</p>";
return $IPBHTML;
}

/* -- displayPopUpWindow --*/
function displayPopUpWindow($documentHeadItems, $css, $jsLoaderItems, $title="", $output="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['displayPopUpWindow'] ) )
{
$count_20811417fdc3dc6c4502a254fed149b7 = is_array($this->functionData['displayPopUpWindow']) ? count($this->functionData['displayPopUpWindow']) : 0;
$this->functionData['displayPopUpWindow'][$count_20811417fdc3dc6c4502a254fed149b7]['documentHeadItems'] = $documentHeadItems;
$this->functionData['displayPopUpWindow'][$count_20811417fdc3dc6c4502a254fed149b7]['css'] = $css;
$this->functionData['displayPopUpWindow'][$count_20811417fdc3dc6c4502a254fed149b7]['jsLoaderItems'] = $jsLoaderItems;
$this->functionData['displayPopUpWindow'][$count_20811417fdc3dc6c4502a254fed149b7]['title'] = $title;
$this->functionData['displayPopUpWindow'][$count_20811417fdc3dc6c4502a254fed149b7]['output'] = $output;
}

$this->minify = array();
$IPBHTML .= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> 
<html xml:lang=\"en\" lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\"> 
	<head>
		<!-- THIS TEMPLATE (displayPopUpWindow) IS DEPRICATED AND WILL BE REMOVED IN A FUTURE VERSION -->
		<meta http-equiv=\"content-type\" content=\"text/html; charset={$this->settings['gb_char_set']}\" />
		<title>{$title}</title>
		<link rel=\"shortcut icon\" href=\"favicon.ico\" />
		" . ((is_array( $css['import'] )) ? ("" . (($this->settings['use_minify']) ? ("") : ("")) . "
			".$this->__f__7c92a1180a8e0498fdd0491e1dbad1b5($documentHeadItems,$css,$jsLoaderItems,$title,$output)."			" . (($this->settings['use_minify'] AND count($this->minify)) ? ("
				<link rel=\"stylesheet\" type=\"text/css\" media='screen,print' href=\"{$this->settings['css_base_url']}min/index.php?ipbv={$this->registry->output->antiCacheHash}&amp;f=" . str_replace( $this->settings['css_base_url'], PUBLIC_DIRECTORY . '/', implode( ',', $this->minify ) ) . "\" />
			") : ("")) . "") : ("")) . "
		" . ((is_array( $css['inline'] ) AND count( $css['inline'] )) ? ("
			".$this->__f__388ee935f71ee682bbb9a4a1e0234d78($documentHeadItems,$css,$jsLoaderItems,$title,$output)."		") : ("")) . "
		<!--[if lte IE 7]>
			<link rel=\"stylesheet\" type=\"text/css\" title='Main' media=\"screen\" href=\"{$this->settings['public_dir']}style_css/{$this->registry->output->skin['_csscacheid']}/ipb_ie.css\" />
		<![endif]-->
		
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeRTL' ) ? $this->registry->getClass('output')->getTemplate('global')->includeRTL() : '' ) . "	
		" . ((is_array( $metaTags ) AND count( $metaTags )) ? ("
			".$this->__f__72e08d7a163f428713af729088226510($documentHeadItems,$css,$jsLoaderItems,$title,$output)."		") : ("")) . "
		<script type='text/javascript'>
			jsDebug		= " . intval($this->settings['_jsDebug']) . "; /* Must come before JS includes */
			USE_RTE		= 1;
			var inACP	= false;
			var isRTL	= false;
			var rtlIe	= '';
			var rtlFull	= '';
		</script>
		" . (($this->settings['use_minify']) ? ("" . (($this->settings['remote_load_js']) ? ("<script type='text/javascript' src='" . (($this->registry->output->isHTTPS) ? ("https") : ("http")) . "://ajax.googleapis.com/ajax/libs/prototype/1.7/prototype.js'></script>
				<script type='text/javascript' src='" . (($this->registry->output->isHTTPS) ? ("https") : ("http")) . "://ajax.googleapis.com/ajax/libs/scriptaculous/1.8/scriptaculous.js?load=effects,dragdrop,builder'></script>") : ("
				<script type='text/javascript' src='{$this->settings['public_dir']}min/index.php?g=js'></script>
			")) . "
			<script type='text/javascript' src='{$this->settings['public_dir']}min/index.php?f=" . PUBLIC_DIRECTORY . "/js/ipb.js," . PUBLIC_DIRECTORY . "/js/ips.quickpm.js" . ((count($jsLoaderItems) AND is_array($jsLoaderItems)) ? ("," . PUBLIC_DIRECTORY . "/js/ips." . implode('.js,' . PUBLIC_DIRECTORY . '/js/ips.', array_unique( array_keys( $jsLoaderItems ) ) ) . ".js") : ("")) . ",cache/lang_cache/{$this->lang->lang_id}/ipb.lang.js'></script>") : ("" . (($this->settings['remote_load_js']) ? ("<script type='text/javascript' src='" . (($this->registry->output->isHTTPS) ? ("https") : ("http")) . "://ajax.googleapis.com/ajax/libs/prototype/1.7/prototype.js'></script>") : ("
				<script type='text/javascript' src='{$this->settings['public_dir']}js/3rd_party/prototype.js'></script>
			")) . "
			<script type='text/javascript' src='{$this->settings['public_dir']}js/ipb.js?load=quickpm" . ((count($jsLoaderItems) AND is_array($jsLoaderItems)) ? ("," . implode(',', array_unique( array_keys( $jsLoaderItems ) ) ) . "") : ("")) . "'></script>
			
			" . (($this->settings['remote_load_js']) ? ("<script type='text/javascript' src='" . (($this->registry->output->isHTTPS) ? ("https") : ("http")) . "://ajax.googleapis.com/ajax/libs/scriptaculous/1.8/scriptaculous.js?load=effects,dragdrop,builder'></script>") : ("
				<script type='text/javascript' src='{$this->settings['public_dir']}js/3rd_party/scriptaculous/scriptaculous-cache.js'></script>
			")) . "
			<script type=\"text/javascript\" src='{$this->settings['cache_dir']}lang_cache/{$this->member->language_id}/ipb.lang.js'></script>")) . "
		" . ((count($documentHeadItems)) ? ("
			".$this->__f__39748ca04c824609d3ce508b4e8846ad($documentHeadItems,$css,$jsLoaderItems,$title,$output)."		") : ("")) . "
		
		<script type='text/javascript'>
		//<![CDATA[
			/* ---- URLs ---- */
			ipb.vars['base_url'] 			= '" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "", "public",'' ), "", "" ) . "';
			ipb.vars['board_url']			= '{$this->settings['board_url']}';
			ipb.vars['loading_img'] 		= '{$this->settings['img_url']}/loading.gif';
			ipb.vars['active_app']			= '{$this->registry->getCurrentApplication()}';
			ipb.vars['upload_url']			= '{$this->settings['upload_url']}';
			/* ---- Member ---- */
			ipb.vars['member_id']			= parseInt( {$this->memberData['member_id']} ),
			ipb.vars['is_supmod']			= parseInt( " . intval($this->memberData['g_is_supmod']) . " ),
			ipb.vars['is_admin']			= parseInt( {$this->memberData['g_access_cp']} ),
			ipb.vars['secure_hash'] 		= '{$this->member->form_hash}';
			ipb.vars['session_id']			= '{$this->member->session_id}';
			ipb.vars['can_befriend']		= " . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("true") : ("false")) . ";
			ipb.vars['auto_dst']			= parseInt( {$this->memberData['members_auto_dst']} );
			ipb.vars['dst_in_use']			= parseInt( {$this->memberData['dst_in_use']} );
			ipb.vars['is_touch']			= " . (($this->registry->output->isLargeTouchDevice()) ? ("'large';") : ("" . (($this->registry->output->isSmallTouchDevice()) ? ("'small';") : ("false;")) . "")) . "
			ipb.vars['member_group']		= " . json_encode( array( 'g_mem_info' => $this->memberData['g_mem_info'] ) ) . "
			/* ---- cookies ----- */
			ipb.vars['cookie_id'] 			= '{$this->settings['cookie_id']}';
			ipb.vars['cookie_domain'] 		= '{$this->settings['cookie_domain']}';
			ipb.vars['cookie_path']			= '{$this->settings['cookie_path']}';
			/* ---- Rate imgs ---- */
			ipb.vars['rate_img_on']			= '{$this->settings['img_url']}/bullet_star.png';
			ipb.vars['rate_img_off']		= '{$this->settings['img_url']}/bullet_star_off.png';
			ipb.vars['rate_img_rated']		= '{$this->settings['img_url']}/bullet_star_rated.png';
			/* ---- Uploads ---- */
			ipb.vars['swfupload_swf']		= '" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "js/3rd_party/swfupload/swfupload.swf", "public_dir",'true' ), "", "" ) . "';
			ipb.vars['swfupload_enabled']	= " . (($this->settings['uploadFormType']) ? ("true") : ("false")) . ";
			ipb.vars['use_swf_upload']		= ( '{$this->memberData['member_uploader']}' == 'flash' ) ? true : false;
			ipb.vars['swfupload_debug']		= false;
			/* ---- other ---- */
			ipb.vars['highlight_color']		= \"#ade57a\";
			ipb.vars['charset']				= \"{$this->settings['gb_char_set']}\";
			ipb.vars['use_rte']				= 1;
			ipb.vars['image_resize_force']  = " . intval($this->settings['resize_img_force']) . ";
			ipb.vars['seo_enabled']			= " . intval($this->settings['use_friendly_urls']) . ";
			" . (($this->settings['use_friendly_urls']) ? ("
			ipb.vars['seo_params']			= " . json_encode($this->registry->getClass('output')->seoTemplates['__data__']) . ";
			") : ("")) . "
			/* Templates/Language */
			ipb.templates['ajax_loading'] 	= \"<div id='ajax_loading'>\" + ipb.lang['loading'] + \"</div>\";
			ipb.templates['close_popup']	= \"<img src='{$this->settings['img_url']}/close_popup.png' alt='x' />\";
			ipb.templates['rss_shell']		= new Template(\"<ul id='rss_menu'>#{items}</ul>\");
			ipb.templates['rss_item']		= new Template(\"<li><a href='#{url}' title='#{title}'>#{title}</a></li>\");
			ipb.templates['resized_img']	= new Template(\"<span>{$this->lang->words['resized_image']}</span>\");
			" . (($this->memberData['member_id']) ? ("
				ipb.templates['m_add_friend']	= new Template(\"<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id=#{id}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a>\");
				ipb.templates['m_rem_friend']	= new Template(\"<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id=#{id}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_friend']}'>" . $this->registry->getClass('output')->getReplacement("remove_friend") . "</a>\");
			") : ("")) . "
			ipb.templates['autocomplete_wrap'] = new Template(\"<ul id='#{id}' class='ipb_autocomplete' style='width: 250px;'></ul>\");
			ipb.templates['autocomplete_item'] = new Template(\"<li id='#{id}' data-url='#{url}'><img src='#{img}' alt='' width='#{img_w}' height='#{img_h}' />&nbsp;&nbsp;#{itemvalue}</li>\");
			ipb.templates['page_jump']		= new Template(\"<div id='#{id}_wrap' class='ipbmenu_content'><h3 class='bar'>{$this->lang->words['global_page_jump']}</h3><input type='text' class='input_text' id='#{id}_input' size='8' /> <input type='submit' value='{$this->lang->words['jmp_go']}' class='input_submit add_folder' id='#{id}_submit' /></div>\");
			Loader.boot();
		//]]>
		</script>
	</head>
	<body id='ipboard_body' style='padding: 20px'>
		<div id='ipbwrapper'>
			{$output}
		</div>
	</body>
</html>";
return $IPBHTML;
}


function __f__7c92a1180a8e0498fdd0491e1dbad1b5($documentHeadItems, $css, $jsLoaderItems, $title="", $output="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $css['import'] as $data )
	{
		
if( $this->settings['use_minify'] AND ( ! $data['attributes'] OR stripos( $data['attributes'], 'screen' ) !== false ) )
					{
						$this->minify[] = "{$data['content']}";
					}

		$__iteratorCount++;
		$_ips___x_retval .= "
								" . ((!$this->settings['use_minify'] OR ( $data['attributes'] AND stripos( $data['attributes'], 'screen' ) === false )) ? ("
					<link rel=\"stylesheet\" type=\"text/css\" {$data['attributes']} href=\"{$data['content']}?ipbv={$this->registry->output->antiCacheHash}\" />
				") : ("")) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__388ee935f71ee682bbb9a4a1e0234d78($documentHeadItems, $css, $jsLoaderItems, $title="", $output="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $css['inline'] as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<style type=\"text/css\" {$data['attributes']}>
				/* Inline CSS */
				{$data['content']}
			</style>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__72e08d7a163f428713af729088226510($documentHeadItems, $css, $jsLoaderItems, $title="", $output="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $metaTags as $tag => $content )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<meta name=\"{$tag}\" content=\"$content\" />
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__e06ba1b62b5b64b096dfc80cba8b1210($documentHeadItems, $css, $jsLoaderItems, $title="", $output="",$type='',$idx='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $documentHeadItems[ $type ] as $idx => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . (($type == 'javascript') ? ("
						<script type=\"text/javascript\" src=\"{$data}\" charset=\"<% CHARSET %>\"></script>
					") : ("")) . "
					" . (($type == 'rss') ? ("
						<link rel=\"alternate feed\" type=\"application/rss+xml\" title=\"{$data['title']}\" href=\"{$data['url']}\" />
					") : ("")) . "
					" . (($type == 'rsd') ? ("
						<link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"{$data['title']}\" href=\"{$data['url']}\" />
					") : ("")) . "
					" . (($type == 'raw') ? ("
						{$data}
					") : ("")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__39748ca04c824609d3ce508b4e8846ad($documentHeadItems, $css, $jsLoaderItems, $title="", $output="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $documentHeadItems as $type => $idx )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				".$this->__f__e06ba1b62b5b64b096dfc80cba8b1210($documentHeadItems,$css,$jsLoaderItems,$title,$output,$type,$idx)."			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- Error --*/
function Error($message="",$code=0,$ad_email_one="",$ad_email_two="", $title="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['Error'] ) )
{
$count_75d8bc00c3a206fa96f97d9c2f563497 = is_array($this->functionData['Error']) ? count($this->functionData['Error']) : 0;
$this->functionData['Error'][$count_75d8bc00c3a206fa96f97d9c2f563497]['message'] = $message;
$this->functionData['Error'][$count_75d8bc00c3a206fa96f97d9c2f563497]['code'] = $code;
$this->functionData['Error'][$count_75d8bc00c3a206fa96f97d9c2f563497]['ad_email_one'] = $ad_email_one;
$this->functionData['Error'][$count_75d8bc00c3a206fa96f97d9c2f563497]['ad_email_two'] = $ad_email_two;
$this->functionData['Error'][$count_75d8bc00c3a206fa96f97d9c2f563497]['title'] = $title;
}

$pluginEditorHook = IPSLib::loadLibrary( IPS_ROOT_PATH . 'sources/classes/editor/composite.php', 'classes_editor_composite' );
	$editor = new $pluginEditorHook();
$IPBHTML .= "<script type=\"text/javascript\">
<!--
function contact_admin() {
  // Very basic spam bot stopper
  admin_email_one = '{$ad_email_one}';
  admin_email_two = '{$ad_email_two}';
  window.location = 'mailto:'+admin_email_one+'@'+admin_email_two+'?subject={$this->lang->words['mailto_erroronforums']}';  
}
//-->
</script>
<br />
<h1 class='ipsType_pagetitle'>{$title}</h1>
<br />
<div class='ipsBox'>
	<div class='ipsBox_container ipsPad'>
		<span class=\"right desc ipsType_smaller ipsPad_top\">" . (($code) ? ("[#{$code}] ") : ("")) . "</span>
		<p class='ipsType_sectiontitle'>
			{$message}
		</p>
		<br />
		<p>{$this->lang->words['er_useful_links']}</p>
		<ul class='ipsPad_top bullets'>
			" . ((! $this->memberData['member_id']) ? ("
				<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=login", "public",'' ), "", "" ) . "' title='{$this->lang->words['submit_li']}'>{$this->lang->words['click_login']}</a></li>
			") : ("")) . "
			<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&module=help", "public",'' ), "", "" ) . "\" rel=\"help\" title='{$this->lang->words['er_help_files']}'>{$this->lang->words['er_help_files']}</a></li>
			<li><a href=\"javascript:contact_admin();\" title='{$this->lang->words['er_contact_admin']}'>{$this->lang->words['er_contact_admin']}</a></li>
		</ul>
	</div>
</div>
" . (($_POST['Post']) ? ("
	<br />
	<br />
	<h2 class='ipsType_subtitle'>{$this->lang->words['err_title']}</h2><br />
	<div class='ipsBox'>
		<div class='ipsBox_container ipsPad'>
			{$this->lang->words['err_expl']}<br />
			<br />
			" . $editor->show('Post', array( 'editorName' => 'Post', 'type' => 'full', 'minimize' => 0, 'recover' => TRUE ), "")  . "
		</div>
	</div>
<br />
") : ("")) . "";
return $IPBHTML;
}

/* -- facebookDone --*/
function facebookDone($user) {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsForm_center'>
	<br />
	<strong>{$this->lang->words['facebook_post_ok']}</strong>
	<br />
	<br />
	<br />
	<br />
</div>";
return $IPBHTML;
}

/* -- facebookPop --*/
function facebookPop($user=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['facebookPop'] ) )
{
$count_a4606f29b7c0de7dcb1003900da6807c = is_array($this->functionData['facebookPop']) ? count($this->functionData['facebookPop']) : 0;
$this->functionData['facebookPop'][$count_a4606f29b7c0de7dcb1003900da6807c]['user'] = $user;
}
$IPBHTML .= "<h3>{$this->lang->words['share_via_facebook']}</h3>
<div class='fixed_inner'>
	<div class='ipsPad'><fb:like href=\"\" id=\"fbLikeButton\" layout=\"standard\" show_faces=\"false\" width=\"350\" height=\"45\" action=\"like\" colorscheme=\"light\" /></div>
	" . (($user['id']) ? ("
		<ul class='ipsList_withminiphoto' id=\"fParent\">
			<li class='clearfix ipsPad_half'>
				<img src='{$user['pic_square']}' class='left ipsUserPhoto ipsUserPhoto_small'/>
				<img src=\"{$this->settings['public_dir']}style_status/facebook.png\" class='left' style='margin-top: -2px; margin-left: -12px;'/>
				<div class='list_content' style='margin-left:58px' id='fWrap' >
					<textarea class='input_text' rows='3' cols='10' name='fContent' style='width: 97%;' id='fContent'></textarea>
					<div>
						<div class='right clear'>
							<input type='button' id='fSubmit' class='input_submit' value='{$this->lang->words['facebook_share']}' />
						</div>
						<div class='ipsType_smaller desc'>{$this->lang->words['share_fb_name']} {$user['first_name']} {$user['last_name']}</div>
					</div>
					
				</div>
			</li>
		</ul>
	") : ("
		<div class='ipsPad ipsForm_center'><a href=\"{$this->settings['_original_base_url']}/interface/facebook/index.php\"><img src=\"{$this->settings['img_url']}/facebook_login.png\" alt=\"\" /></a></div>
	")) . "
	<div id=\"fb-root\"></div>
	<script>
		window.fbAsyncInit = function() {
			FB.init({appId: '{$this->settings['fbc_appid']}', status: true, cookie: true, xfbml: true});
			if ( $('fParent') )
			{
				FB.Event.subscribe('edge.create', function(response) {
	 				new Effect.Fade( $('fParent'), { duration: 0.2 } );
				});
						
				FB.Event.subscribe('edge.remove', function(response) {
	 				new Effect.Appear( $('fParent'), { duration: 0.2 } );
				});
			}
		};
		(function() {
			var e = document.createElement('script'); e.async = true;
		    e.src = document.location.protocol + '//connect.facebook.net/{$this->settings['fb_locale']}/all.js';
			document.getElementById('fb-root').appendChild(e);
				    
			$('fbLikeButton').writeAttribute('href', $('ipsCanonical').readAttribute('href') );
			
			if ( $('fContent') )
			{
				$('fContent').defaultize('{$this->lang->words['fb_share_default']}');
			}
		}());
	</script>
</div>";
return $IPBHTML;
}

/* -- followUnsubscribe --*/
function followUnsubscribe($data, $meta) {
$IPBHTML = "";
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=like&amp;do=doUnsubscribe", "public",'' ), "", "" ) . "\" method=\"post\">
<input type='hidden' name='auth_key' value='{$this->member->form_hash}' />
<input type='hidden' name='like_rel_id' value='{$data[ $this->memberData['member_id'] ]['like_rel_id']}' />
<input type='hidden' name='like_area' value='{$data[ $this->memberData['member_id'] ]['like_area']}' />
<input type='hidden' name='like_app' value='{$data[ $this->memberData['member_id'] ]['like_app']}' />
<input type='hidden' name='like_id' value='{$data[ $this->memberData['member_id'] ]['like_id']}' />
<h3 class='maintitle'>{$this->lang->words['pg_unfollow_title']}</h3>
<div class='ipsBox'>
	<div class='ipsBox_container ipsPad_double ipsType_textblock'>
		" . sprintf( $this->lang->words['pg_unfollow_text'], $data[ $this->memberData['member_id'] ]['members_display_name'], $meta['like.url'], $meta['like.title'] ) . "
		<br />
		<br />
		<p>
			<input type=\"submit\" value=\"{$this->lang->words['pg_unfollow_confirm']}\" class='ipsButton'>
			{$this->lang->words['or']}
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=followed", "public",'' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel' tabindex='0'>{$this->lang->words['cancel']}</a>
		</p>
	</div>
</div>
</form>";
return $IPBHTML;
}

/* -- generateTopicIcon --*/
function generateTopicIcon($imgArray, $unreadUrl) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['generateTopicIcon'] ) )
{
$count_57041d60aad51eab90b7b49271c233c3 = is_array($this->functionData['generateTopicIcon']) ? count($this->functionData['generateTopicIcon']) : 0;
$this->functionData['generateTopicIcon'][$count_57041d60aad51eab90b7b49271c233c3]['imgArray'] = $imgArray;
$this->functionData['generateTopicIcon'][$count_57041d60aad51eab90b7b49271c233c3]['unreadUrl'] = $unreadUrl;
}
$IPBHTML .= "" . (($imgArray['is_moved']) ? ("
	<span title=\"{$this->lang->words['pm_moved']}\">" . $this->registry->getClass('output')->getReplacement("t_moved") . "</span>
") : ("")) . "
" . (($imgArray['is_closed']) ? ("
	<span title=\"{$this->lang->words['pm_locked']}\">" . $this->registry->getClass('output')->getReplacement("t_closed") . "</span>
") : ("")) . "
" . (($imgArray['show_dot'] && empty( $unreadUrl )) ? ("" . $this->registry->getClass('output')->getReplacement("t_read_dot") . "") : ("")) . "
" . ((! empty( $unreadUrl ) && ! $imgArray['is_moved']) ? ("<a href='{$unreadUrl}' title='{$this->lang->words['first_unread_post']}'>
	" . (($imgArray['show_dot']) ? ("
		" . $this->registry->getClass('output')->getReplacement("t_unread_dot") . "
	") : ("
		" . $this->registry->getClass('output')->getReplacement("t_unread") . "
	")) . "
	</a>") : ("")) . "";
return $IPBHTML;
}

/* -- globalTemplateMinimal --*/
function globalTemplateMinimal($html, $documentHeadItems, $css, $jsModules, $metaTags, array $header_items, $items=array(), $footer_items=array(), $stats=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['globalTemplateMinimal'] ) )
{
$count_c5962ee4990108246d9d4e07ae73a267 = is_array($this->functionData['globalTemplateMinimal']) ? count($this->functionData['globalTemplateMinimal']) : 0;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['html'] = $html;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['documentHeadItems'] = $documentHeadItems;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['css'] = $css;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['jsModules'] = $jsModules;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['metaTags'] = $metaTags;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['header_items'] = $header_items;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['items'] = $items;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['footer_items'] = $footer_items;
$this->functionData['globalTemplateMinimal'][$count_c5962ee4990108246d9d4e07ae73a267]['stats'] = $stats;
}
$IPBHTML .= "<!DOCTYPE html>
	<html xml:lang=\"en\" lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\"" . ((IPSLib::fbc_enabled() === TRUE) ? (" xmlns:fb=\"http://www.facebook.com/2008/fbml\"") : ("")) . ">
	<head>
		<meta http-equiv=\"content-type\" content=\"text/html; charset={$this->settings['gb_char_set']}\" />
		<title>{$header_items['title']}" . (($header_items['page']) ? (" {$this->lang->words['page_title_page']} {$header_items['page']}") : ("")) . "</title>
		<link rel=\"shortcut icon\" href='" . (($this->registry->output->isHTTPS) ? ("{$this->settings['board_url_https']}") : ("{$this->settings['board_url']}")) . "/favicon.ico' />
		<link rel=\"image_src\" href='{$this->settings['meta_imagesrc']}' />
		<script type='text/javascript'>
		//<![CDATA[
			jsDebug			= " . intval($this->settings['_jsDebug']) . "; /* Must come before JS includes */
			USE_RTE			= 1;
			DISABLE_AJAX	= parseInt({$this->settings['disable_text_ajax']}); /* Disables ajax requests where text is sent to the DB; helpful for charset issues */
			inACP			= false;
			var isRTL		= false;
			var rtlIe		= '';
			var rtlFull		= '';
		//]]>
		</script>
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeCSS' ) ? $this->registry->getClass('output')->getTemplate('global')->includeCSS($css) : '' ) . "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeMeta' ) ? $this->registry->getClass('output')->getTemplate('global')->includeMeta($metaTags) : '' ) . "
		<meta property=\"og:title\" content=\"" . IPSText::htmlspecialchars( str_replace( ' - ' . $this->settings['board_name'], '', $header_items['title'] ) ) . "\"/>
		<meta property=\"og:site_name\" content=\"" . IPSText::htmlspecialchars( $this->settings['board_name'] ) . "\"/>
		<meta property=\"og:image\" content=\"{$this->settings['meta_imagesrc']}\"/>
		" . (($this->registry->output->isLargeTouchDevice()) ? ("
		<meta name=\"viewport\" content=\"width=1024px; initial-scale=1.0; minimum-scale=1.0;\">
		") : ("")) . "
		" . (($this->registry->output->isSmallTouchDevice()) ? ("
		<meta name=\"viewport\" content=\"width=1024px\">
		") : ("")) . "
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeJS' ) ? $this->registry->getClass('output')->getTemplate('global')->includeJS($jsModules) : '' ) . "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeFeeds' ) ? $this->registry->getClass('output')->getTemplate('global')->includeFeeds($documentHeadItems) : '' ) . "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeRTL' ) ? $this->registry->getClass('output')->getTemplate('global')->includeRTL() : '' ) . "		
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeVars' ) ? $this->registry->getClass('output')->getTemplate('global')->includeVars($header_items) : '' ) . "
	</head>
	<body id='ipboard_body' class='minimal'>
		<p id='content_jump' class='hide'><a id='top'></a><a href='#j_content' title='{$this->lang->words['jump_to_content']}' accesskey='m'>{$this->lang->words['jump_to_content']}</a></p>
		<div id='ipbwrapper'>		
			<div id='content' class='clearfix'>
				{$items['adHeaderCode']}
				" . (($html) ? ("{$html}") : ("")) . "
				{$items['adFooterCode']}
			</div>
			<div id='footer_utilities' class='main_width clearfix clear'>
				{$footer_items['copyright']}
			</div>
			" . (($this->memberData['member_id'] and $this->settings['debug_level']) ? ("<div id='ipsDebug_footer'>
					<strong>{$this->lang->words['time_now']}</strong> {$footer_items['time']}
					" . (($this->memberData['member_id'] AND $this->memberData['last_visit']) ? ("<strong>{$this->lang->words['you_last_visit']}</strong> " . $this->registry->getClass('class_localization')->getDate($this->memberData['last_visit'],"short", 0) . "") : ("")) . "
					<strong>{$this->lang->words['stat_exec']}</strong> {$stats['ex_time']} " . ((is_float($stats['ex_time'])) ? ("{$this->lang->words['stats_sec']}") : ("")) . "
					<strong>{$this->lang->words['stat_load']}</strong> {$stats['server_load']}
					<strong>{$this->lang->words['stat_queries']}</strong> {$stats['queries']} " . ((IPS_SQL_DEBUG_MODE) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$this->settings['query_string_safe']}&amp;debug=1", "public",'' ), "", "" ) . "'>") : ("")) . "{$this->lang->words['stats_queries']}" . ((IPS_SQL_DEBUG_MODE) ? ("</a>") : ("")) . "
					<strong>{$this->lang->words['stat_gzip']}</strong> {$stats['gzip_status']}
				</div>") : ("")) . "
			{$stats['task']}
		</div>
		
		<!--DEBUG_STATS-->
	</body>
</html>";
return $IPBHTML;
}

/* -- inboxList --*/
function inboxList($topics) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['inboxList'] ) )
{
$count_5ecbfda888ca80321e2f9c36ad498073 = is_array($this->functionData['inboxList']) ? count($this->functionData['inboxList']) : 0;
$this->functionData['inboxList'][$count_5ecbfda888ca80321e2f9c36ad498073]['topics'] = $topics;
}
$IPBHTML .= "<div class=\"top\"></div>
<div class=\"body\">
<h4>{$this->lang->words['inbox_at_the_top']}<p class='ipsPad_half ipsType_smaller right' style=\"font-size: 11px;\"><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['compose_new']}'>Nuevo</a></p></h4>
<ul class='ipsList_withminiphoto'>
	" . ((count($topics)) ? ("
		".$this->__f__d7a9b389396a109738c2266984c3a616($topics)."	") : ("
		<li class='ipsPad_half ipsType_smaller'>{$this->lang->words['inbox_list_none']}</li>
	")) . "
	<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging", "public",'' ), "", "" ) . "' class='configure'>{$this->lang->words['inbox_list_view']}</a></li>
</ul>
</div>
<div class=\"bottom\"></div>";
return $IPBHTML;
}


function __f__d7a9b389396a109738c2266984c3a616($topics)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $topics as $topic )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<li class='" . (($topic['map_has_unread']) ? ("") : ("")) . " ipsType_small clearfix'>
			<img src='{$topic['_starterMemberData']['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$topic['_starterMemberData']['members_display_name']) . "\" class='ipsUserPhoto_mini left' />
			<div class='list_content'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=findMessage&amp;topicID={$topic['mt_id']}&amp;msgID=__firstUnread__", "public",'' ), "", "" ) . "'>
				" . (($topic['map_has_unread']) ? ("<strong>") : ("")) . "{$topic['mt_title']}" . (($topic['map_has_unread']) ? ("</strong>") : ("")) . "
				</a>
				<br />
				<span class='ipsType_smaller desc lighter'>" . $this->registry->getClass('class_localization')->getDate($topic['msg_date'],"short", 0) . "</span>
			</div>
		</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- inlineUploaderComplete --*/
function inlineUploaderComplete($json) {
$IPBHTML = "";
$IPBHTML .= "<html>
<head>
</head>
<body>
<script type='text/javascript'>
	parent.ipb.inlineUploader.complete( $json );
</script>
</body>
</html>";
return $IPBHTML;
}

/* -- likeMoreDialogue --*/
function likeMoreDialogue($data, $relId, $cache) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['likeMoreDialogue'] ) )
{
$count_a87cdc2b31f39e730b1932007af9a303 = is_array($this->functionData['likeMoreDialogue']) ? count($this->functionData['likeMoreDialogue']) : 0;
$this->functionData['likeMoreDialogue'][$count_a87cdc2b31f39e730b1932007af9a303]['data'] = $data;
$this->functionData['likeMoreDialogue'][$count_a87cdc2b31f39e730b1932007af9a303]['relId'] = $relId;
$this->functionData['likeMoreDialogue'][$count_a87cdc2b31f39e730b1932007af9a303]['cache'] = $cache;
}
$IPBHTML .= "<h3>{$this->lang->words['followed_by']}</h3>
<div class='likepop fixed_inner'>
	" . ((is_array($data) && count($data)) ? ("
		<ul class='ipsList_withminiphoto'>
			".$this->__f__3003d5e29affe136f57dddab680c8372($data,$relId,$cache)."		</ul>
	") : ("")) . "
	" . (($cache['anonCount']) ? ("<p class='desc ipsPad ipsForm_center'>
			(" . ((count( $data )) ? ("{$this->lang->words['fave_and']}") : ("")) . " " . sprintf( ($cache['anonCount'] > 1) ? $this->lang->words['follow_anon_count_p'] : $this->lang->words['follow_anon_count_s'], $cache['anonCount'] ) . ")
		</p>") : ("")) . "
</div>";
return $IPBHTML;
}


function __f__3003d5e29affe136f57dddab680c8372($data, $relId, $cache)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data as $mid => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<li class='clearfix ipsPad_half " . (($data['like_is_anon']) ? ("faded") : ("")) . "'>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$data['member_id']}", "public",'' ), "{$data['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'>
						<img src='{$data['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
					</a>
					<div class='list_content'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$data['member_id']}", "public",'' ), "{$data['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$data['members_display_name']}</strong></a>
						" . (($data['like_is_anon']) ? ("<em class='desc'>{$this->lang->words['followed_anonymously']}</em>") : ("")) . "
						<p class='desc'>
							" . IPSMember::makeNameFormatted( $data['g_title'], $data['g_id'] ) . "
						</p>
					</div>
				</li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- likeSetDialogue --*/
function likeSetDialogue($app, $area, $relid, $data) {
$IPBHTML = "";
$IPBHTML .= "<h3>" . $this->lang->words['like_ucfirst_' . $data['vernacular'] ] . "</h3>
<fieldset class='ipsPad ipsForm ipsForm_vertical'>
	<ul>
		<li class='ipsField ipsField_checkbox'>
			<input type=\"checkbox\" name=\"notify\" id=\"like_notify\" class=\"input_check\" value=\"1\" checked='checked' />
			<p class='ipsField_content'>
				<label for=\"like_notify\">{$this->lang->words['label_notify']}</label>
				<select name=\"freq\" id=\"like_freq\" class=\"input_select\">
					".$this->__f__b782a94f3091ad40ecf05aaf46299cdc($app,$area,$relid,$data)."				</select>
			</p>
		</li>
		<li class='ipsField ipsField_checkbox'>
			<input type=\"checkbox\" name=\"anon\" id=\"like_anon\" class=\"input_check\" value=\"1\" />
			<p class='ipsField_content'>
				<label for=\"like_anon\">{$this->lang->words['label_anon']}<br /><span class='desc lighter'>{$this->lang->words['label_anon_desc']}</span></label>
			</p>
		</li>
		<li class=\"submit ipsForm_center\">
			<input type=\"submit\" value=\"" . sprintf( $this->lang->words['set_fave_button'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "\" class=\"input_submit _fsubmit\" />
		</li>
</fieldset>";
return $IPBHTML;
}


function __f__b782a94f3091ad40ecf05aaf46299cdc($app, $area, $relid, $data)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['frequencies'] as $freq )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<option value=\"$freq\">{$this->lang->words[ 'freq_' . $freq ]}</option>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- likeSummary --*/
function likeSummary($data, $relId, $opts) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("like", "0" ) . "
<div class='ips_like' data-app=\"{$data['app']}\" data-area=\"{$data['area']}\" data-relid=\"{$relId}\" data-isfave=\"{$data['iLike']}\">
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'likeSummaryContents' ) ? $this->registry->getClass('output')->getTemplate('global_other')->likeSummaryContents($data, $relId, $opts) : '' ) . "
</div>
<script type=\"text/javascript\">
	var FAVE_TEMPLATE = new Template( \"<h3>" . sprintf( $this->lang->words['unset_fave_title'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "</h3><div><span class='desc'>" . sprintf( $this->lang->words['unset_fave_words'], $this->lang->words['like_un' . $data['vernacular'] ]) . "</span><br /><p style='text-align:right'><input type='button' value='" . sprintf( $this->lang->words['unset_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "' class='input_submit _funset' /></p></div>\");
</script>";
return $IPBHTML;
}

/* -- likeSummaryContents --*/
function likeSummaryContents($data, $relId, $opts=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['likeSummaryContents'] ) )
{
$count_9a82ebd5b44364c8325f65d6cbf9f1ef = is_array($this->functionData['likeSummaryContents']) ? count($this->functionData['likeSummaryContents']) : 0;
$this->functionData['likeSummaryContents'][$count_9a82ebd5b44364c8325f65d6cbf9f1ef]['data'] = $data;
$this->functionData['likeSummaryContents'][$count_9a82ebd5b44364c8325f65d6cbf9f1ef]['relId'] = $relId;
$this->functionData['likeSummaryContents'][$count_9a82ebd5b44364c8325f65d6cbf9f1ef]['opts'] = $opts;
}
$IPBHTML .= "" . (($data['formatted']) ? ("{$data['formatted']}") : ("&nbsp;")) . "
" . (($this->memberData['member_id']) ? ("<a href='#' title=\"" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['fave_tt_on'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['fave_tt_off'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "\" class='ftoggle " . (($data['iLike']) ? (" on") : ("")) . "" . (($opts['button-new-line']) ? (" _newline") : ("")) . "'>" . (($data['iLike']) ? ("" . sprintf( $this->lang->words['unset_fave_button'], $this->lang->words['like_ucfirst_un' . $data['vernacular'] ]) . "") : ("" . sprintf( $this->lang->words['set_fave_button'], $this->lang->words['like_ucfirst_' . $data['vernacular'] ]) . "")) . "</a>") : ("")) . "";
return $IPBHTML;
}

/* -- notificationsList --*/
function notificationsList($notifications) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['notificationsList'] ) )
{
$count_7cf50b6896493e73f3d7539d9e2bc523 = is_array($this->functionData['notificationsList']) ? count($this->functionData['notificationsList']) : 0;
$this->functionData['notificationsList'][$count_7cf50b6896493e73f3d7539d9e2bc523]['notifications'] = $notifications;
}
$IPBHTML .= "<div class=\"top\"></div>
<div class=\"body\">
	<h4>{$this->lang->words['notifications_at_the_top']}
		<p class='ipsPad_half ipsType_smaller right' style=\"font-size: 11px;\"><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=notifications", "public",'' ), "", "" ) . "' class='configure'>{$this->lang->words['generic_opts_link']}</a>
		</p>
	</h4>
	<ul class='ipsList_withminiphoto'>
		" . ((count($notifications)) ? ("
			".$this->__f__2b68348e0f9a556291ac6453d03536dc($notifications)."		") : ("
			<li class='desc'>{$this->lang->words['nonotifications_list']}</li>
		")) . "
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=notificationlog", "public",'' ), "", "" ) . "' class='configure'>{$this->lang->words['notifications_viewall']}</a></li>
	</ul>
</div>
<div class=\"bottom\"></div>";
return $IPBHTML;
}


function __f__2b68348e0f9a556291ac6453d03536dc($notifications)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $notifications as $notify )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='" . ((!$notify['notify_read']) ? ("") : ("")) . " ipsType_small clearfix'>
				<img src='{$notify['member']['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$notify['member']['members_display_name']) . "\" class='ipsUserPhoto_mini left' />
				<div class='list_content'>
					" . ((strpos( $notify['notify_title'], '<a href' ) === false) ? ("
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=viewNotification&amp;do=view&amp;view={$notify['notify_id']}", "public",'' ), "", "" ) . "'>
					") : ("")) . "
					" . ((!$notify['notify_read']) ? ("<strong>") : ("")) . "{$notify['notify_title']}" . ((!$notify['notify_read']) ? ("</strong>") : ("")) . "
					" . ((strpos( $notify['notify_title'], '<a href' ) === false) ? ("
						</a>
					") : ("")) . "
					<br />
					<span class='ipsType_smaller desc lighter timestamp'>" . $this->registry->getClass('class_localization')->getDate($notify['notify_sent'],"short", 0) . "</span>
				</div>
			</li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- notify --*/
function notify($row) {
$IPBHTML = "";
$IPBHTML .= "<div class=\"UIBeeper fixed_always hidden_elem\" id=\"BeeperBox\">
	<div class=\"UIBeeper_Full\">
		<div class=\"Beeps\" data-gt=\"{&quot;ref&quot;:&quot;beeper&quot;,&quot;jewel&quot;:&quot;notifications&quot;}\"><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=portal&amp;module=portal&amp;section=status&id={$row['log_reply_id']}", "public",'' ), "", "" ) . "\"><span class=\"icon-like\"></span><b>{$row['member']['members_display_name']}</b> le gusta tu publicación.</a></div>
	</div>
</div>";
return $IPBHTML;
}

/* -- notifyComment --*/
function notifyComment($row) {
$IPBHTML = "";
$IPBHTML .= "<div class=\"UIBeeper fixed_always hidden_elem\" id=\"BeeperBoxComment\">
	<div class=\"UIBeeper_Full\">
		<div class=\"Beeps\" data-gt=\"{&quot;ref&quot;:&quot;beeper&quot;,&quot;jewel&quot;:&quot;notifications&quot;}\"><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=portal&amp;module=portal&amp;section=status&id={$row['log_reply_id']}", "public",'' ), "", "" ) . "\"><span class=\"iconComments\"></span><b>{$row['member']['members_display_name']}</b> comento tu publicación.</a></div>
	</div>
</div>";
return $IPBHTML;
}

/* -- notifycopy --*/
function notifycopy($row) {
$IPBHTML = "";
$IPBHTML .= "<div class=\"UIBeeper fixed_always hidden_elem\" id=\"BeeperBox\">
	<div class=\"UIBeeper_Full\">
		<div class=\"Beeps\" data-gt=\"{&quot;ref&quot;:&quot;beeper&quot;,&quot;jewel&quot;:&quot;notifications&quot;}\"><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=portal&amp;module=portal&amp;section=status&id={$row['log_reply_id']}", "public",'' ), "", "" ) . "\"><span class=\"icon-like\"></span><b>{$row['member']['members_display_name']}</b> le gusta tu publicación.</a></div>
	</div>
</div>";
return $IPBHTML;
}

/* -- privacyPolicy --*/
function privacyPolicy($title, $text) {
$IPBHTML = "";
$IPBHTML .= "<h2 class='ipsType_pagetitle'>{$title}</h2>
<div class='row2 ipsPad' style='line-height: 1.6'>
	{$text}
</div>";
return $IPBHTML;
}

/* -- questionAndAnswer --*/
function questionAndAnswer($data) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['questionAndAnswer'] ) )
{
$count_483faa60e351022f51f6c6a4383f3588 = is_array($this->functionData['questionAndAnswer']) ? count($this->functionData['questionAndAnswer']) : 0;
$this->functionData['questionAndAnswer'][$count_483faa60e351022f51f6c6a4383f3588]['data'] = $data;
}
$IPBHTML .= "<fieldset id='q_n_a'>	
	<input type=\"hidden\" name=\"qanda_id\" value=\"{$data['qa_id']}\" />
	<ul class='ipsForm ipsForm_horizontal'>
		<li class='ipsField'>
			<label for='qna' class='ipsField_title'>{$this->lang->words['registration_question']} <span class='ipsForm_required'>*</span></label>
			<div class='ipsField_content'>
				<strong>{$data['qa_question']}</strong><br />
				<input type=\"text\" class='input_text' size=\"45\" maxlength=\"100\" value=\"" . (($this->request['qanda_id'] AND $this->request['qanda_id']==$data['qa_id']) ? ("{$this->request['qa_answer']}") : ("")) . "\" name=\"qa_answer\" id='qna' tabindex='0' /><br />
				<span class='desc lighter'>{$this->lang->words['qa_question_desc']}</span>
			</div>
		</li>
	</ul>
</fieldset>";
return $IPBHTML;
}

/* -- quickNavigationOffline --*/
function quickNavigationOffline($message) {
$IPBHTML = "";
$IPBHTML .= "<h3>{$this->lang->words['navigation_title']}</h3>
<div class='fixed_inner ipsBox'>
	<div class='message error'><strong>{$this->lang->words['board_offline_desc']}</strong><br /><br />{$message}</div>
</div>";
return $IPBHTML;
}

/* -- quickNavigationPanel --*/
function quickNavigationPanel($data=array(), $currentApp='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['quickNavigationPanel'] ) )
{
$count_c8971214a6deba65cbca024bd8096b00 = is_array($this->functionData['quickNavigationPanel']) ? count($this->functionData['quickNavigationPanel']) : 0;
$this->functionData['quickNavigationPanel'][$count_c8971214a6deba65cbca024bd8096b00]['data'] = $data;
$this->functionData['quickNavigationPanel'][$count_c8971214a6deba65cbca024bd8096b00]['currentApp'] = $currentApp;
}
$IPBHTML .= "<div>
	".$this->__f__d89a356a5489be694a4197ff20016046($data,$currentApp)."</div>";
return $IPBHTML;
}


function __f__4059bad25a135923101f0f5b6b70f2f0($data=array(), $currentApp='',$_data='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $_data['links'] as $link )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		 		<li>" . ((!empty($link['depth'])) ? ("" . str_repeat( '&nbsp;&nbsp;&nbsp;&nbsp;', $link['depth']) . "") : ("")) . "<a " . ((!empty($link['important'])) ? ("style=\"font-weight:bold\"") : ("")) . " href=\"{$link['url']}\">{$link['title']}</a></li>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__d89a356a5489be694a4197ff20016046($data=array(), $currentApp='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data as $_data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		" . ((! empty( $_data['title'] )) ? ("<div class='ipsPad row2'><strong>{$_data['title']}</strong></div>") : ("")) . "
		<ul class='block_list'>
		" . ((is_array($_data['links']) AND count($_data['links'])) ? ("
			".$this->__f__4059bad25a135923101f0f5b6b70f2f0($data,$currentApp,$_data)."		") : ("")) . "
		</ul>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- quickNavigationWrapper --*/
function quickNavigationWrapper($tabs=array(), $data=array(), $currentApp='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['quickNavigationWrapper'] ) )
{
$count_01ad97b413369db4d276559d30fcaecc = is_array($this->functionData['quickNavigationWrapper']) ? count($this->functionData['quickNavigationWrapper']) : 0;
$this->functionData['quickNavigationWrapper'][$count_01ad97b413369db4d276559d30fcaecc]['tabs'] = $tabs;
$this->functionData['quickNavigationWrapper'][$count_01ad97b413369db4d276559d30fcaecc]['data'] = $data;
$this->functionData['quickNavigationWrapper'][$count_01ad97b413369db4d276559d30fcaecc]['currentApp'] = $currentApp;
}
$IPBHTML .= "<h3>{$this->lang->words['navigation_title']}</h3>
<div class='fixed_inner ipsBox'>
	" . (($this->registry->output->isLargeTouchDevice()) ? ("
		<div class='message' style='margin-bottom: 5px;'>{$this->lang->words['scroll_tip']}</div>
	") : ("")) . "
	<div class='ipsVerticalTabbed ipsLayout ipsLayout_withleft ipsLayout_smallleft clearfix'>
		<div class='ipsVerticalTabbed_tabs ipsLayout_left'>		
			<ul>
				".$this->__f__85ba99c4bc3b3fd3c9c1317d6f75c8a2($tabs,$data,$currentApp)."			</ul>
		</div>
	
		<div class='ipsVerticalTabbed_content ipsLayout_content ipsBox_container' style='position: relative' id='ipsNav_content'>
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'quickNavigationPanel' ) ? $this->registry->getClass('output')->getTemplate('global_other')->quickNavigationPanel($data, $currentApp) : '' ) . "
		</div>
	</div>
</div>";
return $IPBHTML;
}


function __f__85ba99c4bc3b3fd3c9c1317d6f75c8a2($tabs=array(), $data=array(), $currentApp='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $tabs as $app => $title )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li " . (($app == $currentApp) ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=global&amp;section=navigation&amp;inapp={$app}", "public",'' ), "", "" ) . "' rel=\"ipsQuickNav\" data-app=\"{$app}\">{$title}</a></li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- redirectTemplate --*/
function redirectTemplate($documentHeadItems, $css, $jsLoaderItems, $text="",$url="", $full=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['redirectTemplate'] ) )
{
$count_02009fce317898d5b47fe676aa0c5013 = is_array($this->functionData['redirectTemplate']) ? count($this->functionData['redirectTemplate']) : 0;
$this->functionData['redirectTemplate'][$count_02009fce317898d5b47fe676aa0c5013]['documentHeadItems'] = $documentHeadItems;
$this->functionData['redirectTemplate'][$count_02009fce317898d5b47fe676aa0c5013]['css'] = $css;
$this->functionData['redirectTemplate'][$count_02009fce317898d5b47fe676aa0c5013]['jsLoaderItems'] = $jsLoaderItems;
$this->functionData['redirectTemplate'][$count_02009fce317898d5b47fe676aa0c5013]['text'] = $text;
$this->functionData['redirectTemplate'][$count_02009fce317898d5b47fe676aa0c5013]['url'] = $url;
$this->functionData['redirectTemplate'][$count_02009fce317898d5b47fe676aa0c5013]['full'] = $full;
}
$IPBHTML .= "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> 
<html xml:lang=\"en\" lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\"> 
	<head>
	    <meta http-equiv=\"content-type\" content=\"text/html; charset=<% CHARSET %>\" /> 
		<title>{$this->lang->words['stand_by']}</title>
		" . (($full==true) ? ("
			<meta http-equiv=\"refresh\" content=\"2; url=" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "$url", "none",'' ), "", "" ) . "\" />
		") : ("
			<meta http-equiv=\"refresh\" content=\"2; url=" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "$url", "public",'' ), "", "" ) . "\" />
		")) . "
		<link rel=\"shortcut icon\" href='" . (($this->registry->output->isHTTPS) ? ("{$this->settings['board_url_https']}") : ("{$this->settings['board_url']}")) . "/favicon.ico' />
		" . ((is_array( $css['import'] )) ? ("
			".$this->__f__8f8664a15994f4ae68f769698f88766d($documentHeadItems,$css,$jsLoaderItems,$text,$url,$full)."		") : ("")) . "
		" . ((is_array( $css['inline'] ) AND count( $css['inline'] )) ? ("
			".$this->__f__08967e90925f21dbbe897c9bcd71e384($documentHeadItems,$css,$jsLoaderItems,$text,$url,$full)."		") : ("")) . "
		<!--[if lte IE 7]>
			<link rel=\"stylesheet\" type=\"text/css\" title='Main' media=\"screen\" href=\"{$this->settings['public_dir']}style_css/{$this->registry->output->skin['_csscacheid']}/ipb_ie.css\" />
		<![endif]-->
		
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'includeRTL' ) ? $this->registry->getClass('output')->getTemplate('global')->includeRTL() : '' ) . "	
		<script type='text/javascript'>
			jsDebug		= 0; /* Must come before JS includes */
			var isRTL	= false;
			var rtlIe	= '';
			var rtlFull	= '';
		</script>
		" . ((count($documentHeadItems)) ? ("
			".$this->__f__8ae2e9887aec51b3b108d98202322d66($documentHeadItems,$css,$jsLoaderItems,$text,$url,$full)."		") : ("")) . "
		<!--/CSS-->
		<script type='text/javascript'>
		//<![CDATA[
		// Fix Mozilla bug: 209020
		if ( navigator.product == 'Gecko' )
		{
			navstring = navigator.userAgent.toLowerCase();
			geckonum  = navstring.replace( /.*gecko\\/(\\d+)/, \"$1\" );
			setTimeout(\"moz_redirect()\",1500);
		}
		function moz_redirect()
		{
			" . (($full==true) ? ("
				var url_bit     = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "$url", "none",'' ), "", "" ) . "\";
			") : ("
				var url_bit     = \"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "$url", "public",'' ), "", "" ) . "\";
			")) . "
			window.location = url_bit.replace( new RegExp( \"&amp;\", \"g\" ) , '&' );
		}
		//>
		</script>
	</head>
	<body  id='ipboard_body' class='redirector'>
		<div id='ipbredirectwrapper'>
			<p class='message'>
				<strong>{$text}</strong>
				<br /><br />
				{$this->lang->words['transfer_you']}
				<br />
				<span class='desc'>(<a href=\"" . (($full==true) ? ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$url}", "none",'' ), "", "" ) . "") : ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$url}", "public",'' ), "", "" ) . "")) . "\">{$this->lang->words['dont_wait']}</a>)</span>	
			</p>
		</div>
	</body>
</html>";
return $IPBHTML;
}


function __f__8f8664a15994f4ae68f769698f88766d($documentHeadItems, $css, $jsLoaderItems, $text="",$url="", $full=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $css['import'] as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<link rel=\"stylesheet\" type=\"text/css\" {$data['attributes']} href=\"{$data['content']}\">
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__08967e90925f21dbbe897c9bcd71e384($documentHeadItems, $css, $jsLoaderItems, $text="",$url="", $full=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $css['inline'] as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<style type=\"text/css\" {$data['attributes']}>
					/* Inline CSS */
					{$data['content']}
				</style>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__997ebd58fe3c01ea47dbbd68af8d0e56($documentHeadItems, $css, $jsLoaderItems, $text="",$url="", $full=false,$type='',$idx='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $documentHeadItems[ $type ] as $idx => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . (($type == 'javascript') ? ("
						<script type=\"text/javascript\" src=\"{$data}\" charset=\"<% CHARSET %>\"></script>
					") : ("")) . "
					" . (($type == 'rss') ? ("
						<link rel=\"alternate\" type=\"application/rss+xml\" title=\"{$data['title']}\" href=\"{$data['url']}\" />
					") : ("")) . "
					" . (($type == 'rsd') ? ("
						<link rel=\"EditURI\" type=\"application/rsd+xml\" title=\"{$data['title']}\" href=\"{$data['url']}\" />
					") : ("")) . "
					" . (($type == 'raw') ? ("
						$data
					") : ("")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__8ae2e9887aec51b3b108d98202322d66($documentHeadItems, $css, $jsLoaderItems, $text="",$url="", $full=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $documentHeadItems as $type => $idx )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				".$this->__f__997ebd58fe3c01ea47dbbd68af8d0e56($documentHeadItems,$css,$jsLoaderItems,$text,$url,$full,$type,$idx)."			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- repButtons --*/
function repButtons($member, $data=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['repButtons'] ) )
{
$count_59c93710a026ebb036d97fd00158a8db = is_array($this->functionData['repButtons']) ? count($this->functionData['repButtons']) : 0;
$this->functionData['repButtons'][$count_59c93710a026ebb036d97fd00158a8db]['member'] = $member;
$this->functionData['repButtons'][$count_59c93710a026ebb036d97fd00158a8db]['data'] = $data;
}

// Apps can set the key empty to disable, but this will allow all apps to use the popup to show who repped
	if( !isset($data['jsCallback']) )
	{
		$data['jsCallback']	= "ipb.global.repPopUp( this, {$data['primaryId']}, '{$data['app']}', '{$data['type']}' );";
	}
	$repClickable	= ( $this->memberData['gbw_view_reps'] AND $data['jsCallback'] ) ? 'onclick="' . $data['jsCallback'] . '"' : '';

$this->templateVars['repClickable'] = "";
$this->__default__templateVars['repClickable'] = "";
if ( $this->memberData['gbw_view_reps'] )
{
	$this->templateVars['repClickable'] = " clickable";
}
else {$this->templateVars['repClickable'] = $this->__default__templateVars['repClickable']; }
$IPBHTML .= "" . (($this->settings['reputation_enabled']) ? ("" . ((!( $this->settings['reputation_protected_groups'] && in_array( $member['member_group_id'], explode( ',', $this->settings['reputation_protected_groups'] ) ) ) and $this->memberData['member_id']) ? ("" . (($this->settings['reputation_point_types'] == 'like') ? ("<div class='ipsLikeBar right clearfix' id='{$data['domCountId']}'>
				<ul class='ipsList_inline'>
					" . ((!isset($data['hide_text']) OR !$data['hide_text']) ? ("<li id=\"{$data['domLikeStripId']}\" class='ipsLikeBar_info' " . ((!$data['likeFormatted']) ? ("style=\"display:none\"") : ("")) . ">
							{$data['likeFormatted']}
						</li>") : ("")) . "
					" . ((IPSMember::canGiveRep( $data, $member ) !== false) ? ("<li " . ((IPSMember::canRepUp( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
							<a class='ipsLikeButton ipsLikeButton_enabled rep_up' href='{$this->settings['base_url']}app=core&amp;module=global&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_up']}'>{$this->lang->words['like_this']}</a>
						</li>
						<li " . ((IPSMember::canRepDown( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
							<a class='ipsLikeButton ipsLikeButton_disabled rep_down' href='{$this->settings['base_url']}app=core&amp;module=global&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_down']}'>{$this->lang->words['unlike_this']}</a>
						</li>") : ("")) . "
				</ul>
			</div>") : ("<div class='rep_bar clearfix " . ((!$data['position'] || $data['position'] == 'right') ? ("right") : ("")) . "' id='{$data['domCountId']}'>
								<ul class='ipsList_inline'>
					" . ((IPSMember::canGiveRep( $data, $member ) !== false) ? ("<li " . ((IPSMember::canRepUp( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
							<a href='{$this->settings['base_url']}app=core&amp;module=global&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' class='rep_up' title='{$this->lang->words['reputation_up']}'>" . $this->registry->getClass('output')->getReplacement("rep_up") . "</a>
						</li>
						<li " . ((IPSMember::canRepDown( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
							<a href='{$this->settings['base_url']}app=core&amp;module=global&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' class='rep_down' title='{$this->lang->words['reputation_down']}'>" . $this->registry->getClass('output')->getReplacement("rep_down") . "</a>
						</li>") : ("")) . "
					" . (($this->settings['reputation_point_types'] != 'like') ? ("" . (($data['rep_points'] == 0) ? ("
							<li><span class='reputation zero rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
						") : ("")) . "
						" . (($data['rep_points'] > 0) ? ("
							<li><span class='reputation positive rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
						") : ("")) . "
						" . (($data['rep_points'] < 0) ? ("
							<li><span class='reputation negative rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
						") : ("")) . "
							" . intval($data['rep_points']) . "
							</span>
						</li>") : ("")) . "
				</ul>
			</div>")) . "") : ("")) . "") : ("")) . "
<script type='text/javascript'>
	ipb.global.registerReputation( '{$data['domCountId']}', { domLikeStripId: '{$data['domLikeStripId']}', app: '{$data['app']}', type: '{$data['type']}', typeid: '{$data['primaryId']}' }, parseInt('{$data['rep_points']}') );
</script>";
return $IPBHTML;
}

/* -- repMoreDialogue --*/
function repMoreDialogue($data, $relId) {
$IPBHTML = "";
$IPBHTML .= "<h3>{$this->lang->words['liked_by_title']}</h3>
<div class='likepop fixed_inner'>
	<ul class='ipsList_withminiphoto'>
		".$this->__f__2e85aebb3ff9f3761aa734b0ef61f998($data,$relId)."	</ul>
</div>";
return $IPBHTML;
}


function __f__2e85aebb3ff9f3761aa734b0ef61f998($data, $relId)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data as $mid => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='clearfix ipsPad_half " . (($data['like_is_anon']) ? ("faded") : ("")) . "'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$data['member_id']}", "public",'' ), "{$data['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'>
					<img src='{$data['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
				</a>
				<div class='list_content'>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$data['member_id']}", "public",'' ), "{$data['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$data['members_display_name']}</strong></a>
					<em class='desc'>{$this->lang->words['likeadded']} " . $this->registry->getClass('class_localization')->getDate($data['rep_date'],"short", 0) . "</em>
					<p class='desc'>
						" . IPSMember::makeNameFormatted( $data['g_title'], $data['g_id'] ) . "
					</p>
				</div>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- reputationPopup --*/
function reputationPopup($reps) {
$IPBHTML = "";
$IPBHTML .= "<div>
	<h3>{$this->lang->words['rep_given']}</h3>
	<div class='ipsPad' style='min-height: 60px'>
		" . ((empty($reps)) ? ("
			<em>{$this->lang->words['no_rep']}</em>
		") : ("".$this->__f__aa01de10a4082a34a194cfd8b52b1732($reps)."		")) . "
	</div>
</div>";
return $IPBHTML;
}


function __f__aa01de10a4082a34a194cfd8b52b1732($reps)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $reps as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				" . (($r['rep_rating'] > 0) ? ("
					" . $this->registry->getClass('output')->getReplacement("rep_up") . "
				") : ("
					" . $this->registry->getClass('output')->getReplacement("rep_down") . "
				")) . "
				 <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$r['member']['member_id']}", "public",'' ), "{$r['member']['members_seo_name']}", "showuser" ) . "'>{$r['member']['members_display_name']}</a><br />
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- socialSharePostStrip --*/
function socialSharePostStrip($id=null) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['socialSharePostStrip'] ) )
{
$count_63c19f43b7ecaff48dfe1d7e54fa6e1a = is_array($this->functionData['socialSharePostStrip']) ? count($this->functionData['socialSharePostStrip']) : 0;
$this->functionData['socialSharePostStrip'][$count_63c19f43b7ecaff48dfe1d7e54fa6e1a]['id'] = $id;
}

$prefs = IPSMember::getFromMemberCache( $this->memberData, 'postSocialPrefs' );
	$id    = ( $id === null ) ? '' : $id .= '_';
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("facebook", "0" ) . "" . (($this->settings['sm_autoshare'] && IPSMember::canSocialShare()) ? ("<div class='ipsBox_container ipsMargin_top ipsPad_top'>
	<ul class='ipsPad ipsForm_vertical ipsList_inline ipsType_small clearfix'>
		".$this->__f__e926ec71a77d35c14499bdc597f0d140($id)."		" . ((! $id) ? ("
			<li class='ipsField left' style='display: none' id='{$id}_save_share'>
				<a href='#' data-clicklaunch='saveSocialShareDefaults' class='ipsType_smaller'>{$this->lang->words['remember_share_prefs']}</a>
			</li>
		") : ("")) . "
	</ul>
</div>
	<script type=\"text/javascript\">
		ipb.delegate.register('._share_x_', function(e, elem){
			if( $('{$id}_save_share') && !$('{$id}_save_share').visible() ){
				new Effect.Appear( $('{$id}_save_share'), { duration: 0.3 } );
			}
		});
		ipb.delegate.register('#share_x_facebook', ipb.facebook.connectNow);
		ipb.facebook.load({$this->settings['fbc_appid']});
	</script>") : ("")) . "";
return $IPBHTML;
}


function __f__e926ec71a77d35c14499bdc597f0d140($id=null)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( array('facebook', 'twitter') as $service )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . ((IPSMember::canSocialShare( $service )) ? ("<li class='ipsField ipsField_checkbox left' style='margin-right: 40px'>
				<input type=\"checkbox\" name=\"{$id}share_x_{$service}\" class=\"input_check _share_x_\" value=\"yes\" id='{$id}share_x_{$service}' " . ((! empty( $_REQUEST['share_' . $service ] ) || ! empty( $prefs[$service] )) ? ("checked='checked'") : ("")) . " /> &nbsp;&nbsp;
				<span class='' data-tooltip='" . sprintf( $this->lang->words['gbl_post_to_x_tt'],UCFirst($service) ) . "'>
					<label for='{$id}share_x_{$service}'> <img src=\"{$this->settings['public_dir']}style_extra/sharelinks/{$service}.png\" style='vertical-align:top' alt='' /> &nbsp; " . sprintf( $this->lang->words['gbl_post_to_x'], UCFirst($service) ) . "</label>
				</span>
			</li>") : ("")) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tagCloud --*/
function tagCloud($tags) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['tagCloud'] ) )
{
$count_3a8262ec97a851fbcaf624d3fa84fdca = is_array($this->functionData['tagCloud']) ? count($this->functionData['tagCloud']) : 0;
$this->functionData['tagCloud'][$count_3a8262ec97a851fbcaf624d3fa84fdca]['tags'] = $tags;
}
$IPBHTML .= "<h3 class='maintitle'>Tags</h3>
<div class='ipsBox'>
	<div class='ipsBox_container ipsPad'>
		<ul class='ipsList_inline'>
		".$this->__f__b854600578deb0a8da4029a2529f6919($tags)."		</ul>
	</div>
</div>";
return $IPBHTML;
}


function __f__b854600578deb0a8da4029a2529f6919($tags)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $tags['tags'] as $id => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li><span class=\"{$data['className']}\">{$data['tagWithUrl']}</span></li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tagEntry --*/
function tagEntry($tag, $noClass=false, $app='all', $section='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['tagEntry'] ) )
{
$count_c9ca5743f5c33ad02f41df54aa3b17ff = is_array($this->functionData['tagEntry']) ? count($this->functionData['tagEntry']) : 0;
$this->functionData['tagEntry'][$count_c9ca5743f5c33ad02f41df54aa3b17ff]['tag'] = $tag;
$this->functionData['tagEntry'][$count_c9ca5743f5c33ad02f41df54aa3b17ff]['noClass'] = $noClass;
$this->functionData['tagEntry'][$count_c9ca5743f5c33ad02f41df54aa3b17ff]['app'] = $app;
$this->functionData['tagEntry'][$count_c9ca5743f5c33ad02f41df54aa3b17ff]['section'] = $section;
}
$IPBHTML .= "<a " . ((!$noClass) ? ("class='ipsTag'") : ("")) . " href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=search&amp;search_tags=" . IPSText::urlencode_furlSafe($tag) . "&amp;search_app=" . ((isset($this->request['search_app']) AND $this->request['search_app']) ? ("{$this->request['search_app']}") : ("{$app}")) . "" . (($section) ? ("&amp;search_app_filters[" . ((isset($this->request['search_app']) AND $this->request['search_app']) ? ("{$this->request['search_app']}") : ("{$app}")) . "][searchInKey]={$section}") : ("")) . "", "public",'' ), "false", "tags" ) . "\" data-tooltip=\"" . sprintf( $this->lang->words['find_more_tags'], $tag ) . "\"><span>{$tag}</span></a>";
return $IPBHTML;
}

/* -- tagPrefix --*/
function tagPrefix($tag, $app='', $section='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['tagPrefix'] ) )
{
$count_6dcc5e51afa61669f3c092fa9609af07 = is_array($this->functionData['tagPrefix']) ? count($this->functionData['tagPrefix']) : 0;
$this->functionData['tagPrefix'][$count_6dcc5e51afa61669f3c092fa9609af07]['tag'] = $tag;
$this->functionData['tagPrefix'][$count_6dcc5e51afa61669f3c092fa9609af07]['app'] = $app;
$this->functionData['tagPrefix'][$count_6dcc5e51afa61669f3c092fa9609af07]['section'] = $section;
}
$IPBHTML .= "<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=search&amp;search_tags=" . urlencode($tag) . "&amp;search_app=" . ((isset($this->request['search_app']) AND $this->request['search_app']) ? ("{$this->request['search_app']}") : ("{$app}")) . "" . (($section) ? ("&amp;search_app_filters[" . ((isset($this->request['search_app']) AND $this->request['search_app']) ? ("{$this->request['search_app']}") : ("{$app}")) . "][searchInKey]={$section}") : ("")) . "", "public",'' ), "false", "tags" ) . "\" class='ipsBadge ipsBadge_lightgrey' data-tooltip=\"" . sprintf( $this->lang->words['find_more_tags'], $tag ) . "\">{$tag}</a>";
return $IPBHTML;
}

/* -- tagsAsPopUp --*/
function tagsAsPopUp($tags) {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsBox'>
	<div class='ipsBox_container ipsPad'>
		{$tags['formatted']['parsedWithoutComma']}
	</div>
</div>";
return $IPBHTML;
}

/* -- tagTextEntryBox --*/
function tagTextEntryBox($tags, $options, $where) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_global_other', $this->_funcHooks['tagTextEntryBox'] ) )
{
$count_4f236671502bfa432e787958166d62f1 = is_array($this->functionData['tagTextEntryBox']) ? count($this->functionData['tagTextEntryBox']) : 0;
$this->functionData['tagTextEntryBox'][$count_4f236671502bfa432e787958166d62f1]['tags'] = $tags;
$this->functionData['tagTextEntryBox'][$count_4f236671502bfa432e787958166d62f1]['options'] = $options;
$this->functionData['tagTextEntryBox'][$count_4f236671502bfa432e787958166d62f1]['where'] = $where;
}

$options['lang']['tag_add_link']	= $this->lang->words['add_a_tag'];
	$options['lang']['tip_text']		= $this->lang->words['tag_tip'];
	$options['forceLowercase']			= $this->settings['tags_force_lower'];
	$options['existingTags']			= count($tags['tags']) ? $tags['tags'] : null;
	
	$_tmp = $options;
	
	/* Always return as UTF-8 */
	$jsonEncoded = IPSText::jsonEncodeForTemplate( $_tmp );
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("tags", "0" ) . "
<input type=\"text\" class=\"input_text\" size=\"50\" value=\"\" name=\"{$options['fieldId']}\" id=\"{$options['fieldId']}\" " . ((! $options['isOpenSystem']) ? ("readonly=\"readonly\"") : ("")) . " />
" . (($options['prefixesEnabled'] && !$this->memberData['gbw_disable_prefixes']) ? ("&nbsp;&nbsp;<span class=\"desc lighter\"><input type=\"checkbox\" value=\"1\" name=\"{$options['fieldId']}_prefix\" id=\"{$options['fieldId']}_prefix\" " . (($tags['formatted']['prefix'] OR $this->request[ $options['fieldId'] . '_prefix' ]) ? ("checked='checked'") : ("")) . " /> {$this->lang->words['firsttagprefix']}</span>") : ("")) . "
" . ((!$options['minTags'] && $options['maxTags']) ? ("
	<br /><span class='desc lighter'>" . sprintf( $this->lang->words['tags_max_no_min'], $options['maxTags'] ) . "</span>
") : ("")) . "
" . (($options['minTags'] && !$options['maxTags']) ? ("
	<br /><span class='desc lighter'>" . sprintf( $this->lang->words['tags_min_no_max'], $options['minTags'] ) . "</span>
") : ("")) . "
" . (($options['minTags'] && $options['maxTags']) ? ("
	<br /><span class='desc lighter'>" . sprintf( $this->lang->words['tags_max_and_min'], $options['minTags'], $options['maxTags'] ) . "</span>
") : ("")) . "<script type=\"text/javascript\">
	$( \"{$options['fieldId']}\" ).tagify( " . $jsonEncoded . " );
</script>";
return $IPBHTML;
}

/* -- twitterDone --*/
function twitterDone($user) {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsForm_center'>
	<br />
	<strong>{$this->lang->words['tweet_ok']}</strong>
	<br />
	<br />
	<p><a href=\"http://twitter.com/{$user['screen_name']}/status/{$user['status']['id']}\" target=\"_blank\">twitter.com/{$user['screen_name']}/status/{$user['status']['id']}</a></p>
</div>";
return $IPBHTML;
}

/* -- twitterPop --*/
function twitterPop($user) {
$IPBHTML = "";
$IPBHTML .= "<h3>{$this->lang->words['share_via_twitter']}</h3>
<div class='fixed_inner'>
	<ul class='ipsList_withminiphoto'>
		<li class='clearfix ipsPad_half'>
			<img src='{$user['profile_image_url']}' class='left ipsUserPhoto ipsUserPhoto_small'/>
			<img src=\"{$this->settings['public_dir']}style_status/twitter.png\" class='left' style='margin-top: -2px; margin-left: -12px;'/>
			<div class='list_content' style='margin-left:58px' id='tWrap' >
				<p class='ipsType_small desc'>{$user['screen_name']}</p>
				<textarea class='input_text' rows='3' cols='10' name='tContent' style='width: 97%;' id='tContent'></textarea>
				<div>
					<div class='right'><input type='button' id='tSubmit' class='input_submit' value='{$this->lang->words['twitter_share']}' /></div>
					<div class='ipsType_smaller desc'><span id='cLeft' style='font-weight:bold'>0</span> {$this->lang->words['twitter_chrs_left']}</div>
				</div>
			</div>
		</li>
	</ul>
</div>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>