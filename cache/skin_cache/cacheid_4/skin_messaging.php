<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 4               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:07 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_messaging_4 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['messengerDisabled'] = array('notByAdmin');
$this->_funcHooks['messengerTemplate'] = array('inlineError');
$this->_funcHooks['sendNewPersonalTopicForm'] = array('newtopicerrors','newTopicPreview','newTopicError','formReloadInvite','formReloadCopy','newTopicInvite','newTopicUploads');
$this->_funcHooks['sendReplyForm'] = array('replyerrors','replyForm','previewPm','formHeaderText','formErrors','attachmentForm','replyOptions');
$this->_funcHooks['showConversation'] = array('hasAuthorId','authorOnline','accessModCP','authorPrivateIp','authorIpAddress','viewSigs','quickReply','reportPm','canEdit','canDelete','replies','disablelightbox','canReplyEditor','allAlone');
$this->_funcHooks['showConversationForArchive'] = array('replies');
$this->_funcHooks['showFolder'] = array('folderLastPage','messagePages','hasStarterPhoto','folderNotifications','folderDrafts','folderNotifications','folderStarter','folderToMember','folderFixPlural','folderMultipleUsers','folderNew','folderPages','folderBannedIndicator','hasPosterPhoto','folderToMember','folderBannedUser','folderMessages','folderNotDrafts','folderMessages','folderMultiOptions','folderJumpHtml');
$this->_funcHooks['showSearchResults'] = array('folderNotifications','folderStarter','folderToMember','folderFixPlural','folderMultipleUsers','folderNew','folderBannedIndicator','folderBannedUser','messages','searchError','searchMessages');


}

/* -- messengerDisabled --*/
function messengerDisabled() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['messengerDisabled'] ) )
{
$count_bafe702e1862594f734728b1314b9046 = is_array($this->functionData['messengerDisabled']) ? count($this->functionData['messengerDisabled']) : 0;
}
$IPBHTML .= "<h3>{$this->lang->words['pm_disabled_title']}</h3>
<div class='ipsPad'>
	{$this->lang->words['your_pm_is_disabled']}
	" . (($this->memberData['members_disable_pm'] != 2) ? ("
	<p class='ipsForm_center'>
		<br />
		<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=enableMessenger&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\" class='ipsButton_secondary'>{$this->lang->words['pm_disabled_reactivate']}</a>
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "act=idx", "public",'' ), "true", "act=idx" ) . "' class='ipsButton_secondary'>{$this->lang->words['go_board_index']}</a>
		</p>
	") : ("")) . "
 </div>";
return $IPBHTML;
}

/* -- messengerTemplate --*/
function messengerTemplate($html, $jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['messengerTemplate'] ) )
{
$count_5c36a0d1f57c5291f92a478b2be84c88 = is_array($this->functionData['messengerTemplate']) ? count($this->functionData['messengerTemplate']) : 0;
$this->functionData['messengerTemplate'][$count_5c36a0d1f57c5291f92a478b2be84c88]['html'] = $html;
$this->functionData['messengerTemplate'][$count_5c36a0d1f57c5291f92a478b2be84c88]['jumpmenu'] = $jumpmenu;
$this->functionData['messengerTemplate'][$count_5c36a0d1f57c5291f92a478b2be84c88]['dirData'] = $dirData;
$this->functionData['messengerTemplate'][$count_5c36a0d1f57c5291f92a478b2be84c88]['totalData'] = $totalData;
$this->functionData['messengerTemplate'][$count_5c36a0d1f57c5291f92a478b2be84c88]['topicParticipants'] = $topicParticipants;
$this->functionData['messengerTemplate'][$count_5c36a0d1f57c5291f92a478b2be84c88]['inlineError'] = $inlineError;
$this->functionData['messengerTemplate'][$count_5c36a0d1f57c5291f92a478b2be84c88]['deletedTopic'] = $deletedTopic;
}
$IPBHTML .= "<div id='messenger_content'>
	" . (($inlineError) ? ("
	<div class='message error'>
		<h4>{$inlineError}</h4>
	</div>
	<br />
	") : ("")) . "
	{$html}
</div>
<!-- end -->
<div id='pmDisabled' style='display:none'>
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('messaging'), 'messengerDisabled' ) ? $this->registry->getClass('output')->getTemplate('messaging')->messengerDisabled() : '' ) . "
</div>
<br class='clear' />";
return $IPBHTML;
}

/* -- PMQuickForm --*/
function PMQuickForm($toMemberData) {
$IPBHTML = "";
$IPBHTML .= "<form id='pm_to_member_{$toMemberData['member_id']}'>
	<input type='hidden' name='toMemberID' value='{$toMemberData['member_id']}' />
	
	<fieldset class='row1'>
		<h3>{$this->lang->words['quick_send_to']} {$toMemberData['members_display_name']}</h3>
		<div id='pm_error_{$toMemberData['member_id']}'>
			<br />
			<p class='message error'></p>
		</div>
		<script type='text/javascript'>
			$('pm_error_{$toMemberData['member_id']}').hide();
		</script>
		<ul class='ipsForm ipsForm_vertical ipsPad'>
			<li class='ipsField'>
				<label for='pm_subject_{$toMemberData['member_id']}' class='ipsField_title'>{$this->lang->words['quick_subject']}</label>
				<p class='ipsField_content'>
					<input type='text' class='input_text' id='pm_subject_{$toMemberData['member_id']}' name='msg_title' size='50' tabindex='0' />
				</p>
			</li>
			<li class='ipsField'>
				<label for='pm_textarea_{$toMemberData['member_id']}' class='ipsField_title'>{$this->lang->words['quick_message']}</label>
				<p class='ipsField_content'>
					<textarea class='input_text' name='Post' tabindex='0' id='pm_textarea_{$toMemberData['member_id']}' cols='65' rows='8'></textarea>
				</p>
			</li>
		</ul>
	</fieldset>
	<fieldset class='submit'>
		<input type='submit' class='input_submit' name='send_msg' value='{$this->lang->words['quick_send_button']}' accesskey='s' tabindex='0' /> <input type='submit' class='input_submit alt use_full' name='use_full' value='{$this->lang->words['use_full_editor']}' tabindex='0' /> {$this->lang->words['or']} <a href='#' class='cancel' title='{$this->lang->words['cancel']}' id='pm_cancel_{$toMemberData['member_id']}' tabindex='0'>{$this->lang->words['cancel']}</a>
	</fieldset>
</form>";
return $IPBHTML;
}

/* -- sendNewPersonalTopicForm --*/
function sendNewPersonalTopicForm($displayData) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['sendNewPersonalTopicForm'] ) )
{
$count_3bcd12b9f0e336add8b225c216918bcb = is_array($this->functionData['sendNewPersonalTopicForm']) ? count($this->functionData['sendNewPersonalTopicForm']) : 0;
$this->functionData['sendNewPersonalTopicForm'][$count_3bcd12b9f0e336add8b225c216918bcb]['displayData'] = $displayData;
}
$IPBHTML .= "<div id='message_compose' class='post_form'>
	<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=send", "publicWithApp",'' ), "", "" ) . "\" method=\"post\" enctype='multipart/form-data'>
	
" . (($displayData['preview']) ? ("
	<h2 class='maintitle'>{$this->lang->words['pm_preview']}</h2>
	<div class='post_wrap' id='post_preview'>
		<div class='row2' style='padding:8px'>
			<div class='post entry-content'>{$displayData['preview']}</div>
		</div>
	</div>
	<br />
") : ("")) . "
<h2 class='maintitle'>{$this->lang->words['mess_new']}</h2>
" . ((is_array($displayData['errors']) AND count($displayData['errors'])) ? ("
<div class='message error'>
	<h4>{$this->lang->words['err_errors']}</h4>
	".$this->__f__d06839bdf1d9d57cacc3e8f998f13593($displayData)."	<p>{$this->lang->words['pme_none_sent']}</p>
</div>
") : ("")) . "
<div class='ipsBox'>
	<div class='ipsBox_container'>
		<fieldset>
			<h3 class='bar'>{$this->lang->words['pro_recips']}</h3>
			<ul>
				<li class='field'>
					<label for='entered_name'>{$this->lang->words['to_whom']}</label>
					<input type=\"text\" class='input_text' id='entered_name' name=\"entered_name\" size=\"30\" value=\"{$displayData['name']}\" tabindex=\"0\" />
				</li>
				" . ((intval($this->memberData['g_max_mass_pm'])) ? ("<li class='field'>
						<label for='more_members'>{$this->lang->words['other_recipients']}</label>
						<input type='text' size=\"50\" class='input_text' name='inviteUsers' value='{$displayData['inviteUsers']}' id='more_members' tabindex='0' />
						<span class='desc'>{$this->lang->words['youmay_add_to']} <strong>{$this->memberData['g_max_mass_pm']}</strong> {$this->lang->words['youmay_suffix']}</span>
					</li>
					<li class='field'>
						<label for='send_type'>{$this->lang->words['send_to_as']}</label>
						<select name='sendType' id='send_type' tabindex='0'>
							<option value='invite'" . (($this->request['sendType']=='invite') ? (" selected='selected'") : ("")) . ">{$this->lang->words['send__invite']}</option>
							<option value='copy'" . (($this->request['sendType']=='copy') ? (" selected='selected'") : ("")) . ">{$this->lang->words['send__copy']}</option>
						</select>
						<span class='desc'>
							<strong>{$this->lang->words['send__invite']}</strong> {$this->lang->words['invite__desc']}<br />
							<strong>{$this->lang->words['send__copy']}</strong> {$this->lang->words['copy__desc']}
						</span>
					</li>") : ("")) . "
			</ul>
		</fieldset>
		<fieldset>
			<h3 class='bar'>{$this->lang->words['pro_message']}</h3>
			<ul>
				<li class='field'>
					<label for='message_subject'>{$this->lang->words['message_subject_send']}</label>
					<input type=\"text\" name=\"msg_title\" id='message_subject' class='input_text' size=\"40\" tabindex=\"1\" maxlength=\"40\" value=\"{$displayData['title']}\" />
				</li>
				<li>
					{$displayData['editor']}
				</li>
			</ul>
		</fieldset>
		
		" . (($displayData['uploadData']['canUpload']) ? ("
		<fieldset class='attachments'>
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('post'), 'uploadForm' ) ? $this->registry->getClass('output')->getTemplate('post')->uploadForm($displayData['postKey'], 'msg', $displayData['uploadData']['attach_stats'], 0) : '' ) . "
		</fieldset>
		") : ("")) . "
		<input type='hidden' name='topicID' value=\"{$displayData['topicID']}\" />
		<input type='hidden' name=\"postKey\" value=\"{$displayData['postKey']}\" />
		<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
		<fieldset class='submit'>
			<input class='input_submit' name=\"dosubmit\" type=\"submit\" value=\"{$this->lang->words['submit_send']}\" tabindex=\"3\" accesskey=\"s\" />
			<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pm_pre_button']}\" tabindex=\"0\" name=\"preview\" />
			<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pms_send_later']}\" tabindex=\"0\" name=\"save\" />
			{$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging", "public",'' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel' tabindex='0'>{$this->lang->words['cancel']}</a>
		</fieldset>
	</div>
</div>
</form>
</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter() : '' ) . "
<br />";
return $IPBHTML;
}


function __f__d06839bdf1d9d57cacc3e8f998f13593($displayData)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $displayData['errors'] as $_error )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<p>{$_error}</p>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- sendReplyForm --*/
function sendReplyForm($displayData) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['sendReplyForm'] ) )
{
$count_e031d480f52501f5bb33ea9d266bf2ce = is_array($this->functionData['sendReplyForm']) ? count($this->functionData['sendReplyForm']) : 0;
$this->functionData['sendReplyForm'][$count_e031d480f52501f5bb33ea9d266bf2ce]['displayData'] = $displayData;
}
$IPBHTML .= "<div id='message_compose' class='post_form'>
	" . (($displayData['type'] == 'reply') ? ("
		<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=sendReply", "publicWithApp",'' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\">
	") : ("
		<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=sendEdit", "publicWithApp",'' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\">
	")) . "
		<input type=\"hidden\" name=\"msgID\" value=\"{$displayData['msgID']}\" />
	<input type='hidden' name='topicID' value=\"{$displayData['topicID']}\" />
	<input type='hidden' name=\"postKey\" value=\"{$displayData['postKey']}\" />
	<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
	{$data['upload']}	
" . (($displayData['preview']) ? ("
	<h2 class='maintitle'>{$this->lang->words['pm_preview']}</h2>
	<div class='post_wrap' id='post_preview'>
		<div class='row2' style='padding:8px'>
			<div class='post entry-content'>{$displayData['preview']}</div>
		</div>
	</div>
	<br />
") : ("")) . "
<h2 class='maintitle'>
	" . (($displayData['type'] == 'reply') ? ("
		{$this->lang->words['compose_reply']}
	") : ("
		{$this->lang->words['editing_message']}
	")) . "
</h2>
" . (($displayData['errors']) ? ("
<div class='message error'>
	<h4>{$this->lang->words['err_errors']}</h4>
	".$this->__f__106308d590052c16dba456e40161253d($displayData)."	<p>{$this->lang->words['pme_none_sent']}</p>
</div>
") : ("")) . "
<div class='ipsBox'>
	<div class='ipsBox_container'>
		<fieldset>
			<ul>
				<li>
					{$displayData['editor']}
				</li>
			</ul>
		</fieldset>
		
		" . (($displayData['uploadData']['canUpload']) ? ("
		<fieldset class='attachments'>
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('post'), 'uploadForm' ) ? $this->registry->getClass('output')->getTemplate('post')->uploadForm($displayData['postKey'], 'msg', $displayData['uploadData']['attach_stats'], $displayData['msgID'], 0) : '' ) . "
		</fieldset>
		") : ("")) . "
		
		<fieldset class='submit'>
			" . (($displayData['type'] == 'reply') ? ("
				<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['submit_send']}\" tabindex=\"3\" accesskey=\"s\" />
				<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pm_pre_button']}\" tabindex=\"0\" name=\"previewReply\" />
				{$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;do=showConversation&amp;topicID={$displayData['topicID']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel' tabindex='0'>{$this->lang->words['cancel']}</a>
			") : ("
				<input class='input_submit' type=\"submit\" value=\"{$this->lang->words['save_message_button']}\" tabindex=\"3\" accesskey=\"s\" />
				<input class='input_submit alt' type=\"submit\" value=\"{$this->lang->words['pm_pre_button']}\" tabindex=\"0\" name=\"previewReply\" />
				{$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$displayData['topicID']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['cancel']}' class='cancel' tabindex='0'>{$this->lang->words['cancel']}</a>
			")) . "
			
		</fieldset>
	</div>
</div>
</form>
</div>
<br />";
return $IPBHTML;
}


function __f__106308d590052c16dba456e40161253d($displayData)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $displayData['errors'] as $_error )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<p>{$_error}</p>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showConversation --*/
function showConversation($topic, $replies, $members, $jump="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['showConversation'] ) )
{
$count_0def9023017f98c7031147cd034b35da = is_array($this->functionData['showConversation']) ? count($this->functionData['showConversation']) : 0;
$this->functionData['showConversation'][$count_0def9023017f98c7031147cd034b35da]['topic'] = $topic;
$this->functionData['showConversation'][$count_0def9023017f98c7031147cd034b35da]['replies'] = $replies;
$this->functionData['showConversation'][$count_0def9023017f98c7031147cd034b35da]['members'] = $members;
$this->functionData['showConversation'][$count_0def9023017f98c7031147cd034b35da]['jump'] = $jump;
}

$pluginEditorHook = IPSLib::loadLibrary( IPS_ROOT_PATH . 'sources/classes/editor/composite.php', 'classes_editor_composite' );
	$editor = new $pluginEditorHook();
$IPBHTML .= "" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "
" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
<script type=\"text/javascript\">
//<![CDATA[
	ipb.topic.inSection = 'messenger';
//]]>
</script>
<div id='conversation'>
<div class='topic_controls clearfix'>
	{$topic['_pages']}
	<ul class='topic_buttons'>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['go_to_compose']}'>{$this->lang->words['compose_new']}</a></li>
 		<li class='important'><a id='pm_delete_t_{$topic['mt_id']}' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=deleteConversation&amp;topicID={$topic['mt_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "'>{$this->lang->words['option__delete']}</a></li>
	</ul>
	<script type='text/javascript'>
		$('pm_delete_t_{$topic['mt_id']}').observe('click', ipb.messenger.deletePM.bindAsEventListener( this, {$topic['mt_id']} ) );
	</script>
</div>
<h2 class='maintitle'>{$topic['mt_title']}</h2>
<div class='ipsBox'>
	<div class='ipsBox_container'>
		".$this->__f__02799deb7b94039798180c8988e0f578($topic,$replies,$members,$jump)."	</div>
</div>
<div class='topic_controls clear'>
	{$topic['_pages']}
	<ul class='topic_buttons'>
 		<li class='non_button'><a id='email_convo_{$this->request['topicID']}' data-tooltip='" . sprintf( $this->lang->words['msg_email_convo_text'], $this->memberData['email']) . "' href='#' class='email_convo'>{$this->lang->words['msg_email_convo']}</a></li>
	</ul>
</div>
" . ((! empty( $topic['_everyoneElseHasLeft'] )) ? ("
<div class='ipsBox'>
	<div class='ipsBox_container ipsPad'>
		<h1 class='ipsType_subtitle'>{$this->lang->words['msg_all_alone_title']}</h1>
		<p>{$this->lang->words['msg_all_alone_desc']}</p>
	</div>
</div>
") : ("" . (($topic['_canReply']) ? ("
	<div class='ipsBox'>
		<div class='ipsBox_container ipsPad'>
			<h1 class='ipsType_subtitle'>{$this->lang->words['pc_fast_reply']}</h1>
			<br />
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$this->memberData['member_id']}", "public",'' ), "{$this->memberData['members_seo_name']}", "showuser" ) . "\" title='{$this->lang->words['your_profile']}' class='ipsUserPhotoLink left'><img src='{$this->memberData['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$this->memberData['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' /></a>
			<div class='ipsBox_withphoto clearfix'>
				<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=sendReply&amp;topicID={$topic['mt_id']}", "public",'' ), "", "" ) . "' method='post'>
					<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
					<input type=\"hidden\" name=\"fast_reply_used\" value=\"1\" />
					<input type=\"hidden\" name=\"enableemo\" value=\"yes\" />
					<input type=\"hidden\" name=\"enablesig\" value=\"yes\" />
					" . $editor->show('msgContent', array( 'type' => 'full', 'minimize' => 1 ), "")  . "
					<br />
					<fieldset class='right'>
						<input type='submit' name=\"submit\" class='input_submit' value='{$this->lang->words['pc_post_button']}' tabindex='3' accesskey='s' />&nbsp;&nbsp;<input type='submit' name=\"previewReply\" class='input_submit alt' value='{$this->lang->words['pc_use_full_reply']}' />
					</fieldset>
				</form>
			</div>
		</div>
	</div>
	") : ("")) . "")) . "
</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter() : '' ) . "";
return $IPBHTML;
}


function __f__02799deb7b94039798180c8988e0f578($topic, $replies, $members, $jump="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $replies as $msg_id => $msg )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<a id='msg{$msg['msg_id']}'></a>
			<div class='post_block first hentry' id='post_id_{$msg['msg_id']}'>
				<div class='post_wrap'>
					" . (($members[ $msg['msg_author_id'] ]['member_id']) ? ("
						<h3 class='row2'>
					") : ("
						<h3 class='guest row2'>
					")) . "
							" . (($members[ $msg['msg_author_id'] ]['member_id']) ? ("
								<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($members[ $msg['msg_author_id'] ]) : '' ) . "</span>
							") : ("
								{$members[ $msg['msg_author_id'] ]['members_display_name']}
							")) . "
							" . (($msg['_ip_address'] != '') ? ("<span class='ip right ipsType_small'>({$this->lang->words['ip']}:
								" . (($members[ $msg['msg_author_id'] ]['g_access_cp']) ? ("
									<em>{$this->lang->words['ip_private']}</em>
								") : ("" . (($this->memberData['g_is_supmod']) ? ("<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;fromapp=members&amp;tab=iplookup&amp;ip={$msg['_ip_address']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['find_info_about_ip']}'>{$msg['_ip_address']}</a>") : ("{$msg['_ip_address']}")) . "")) . "
								)</span>") : ("")) . "
						</h3>
					<div class='author_info'>
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userInfoPane' ) ? $this->registry->getClass('output')->getTemplate('global')->userInfoPane($members[ $msg['msg_author_id'] ], $msg_id, array()) : '' ) . "
					</div>
					<div class='post_body'>
						<p class='posted_info'>{$this->lang->words['pc_sent']} " . $this->registry->getClass('class_localization')->getDate($msg['msg_date'],"long", 0) . "</p>
						<div class='post entry-content'>
							{$msg['msg_post']}
							{$msg['attachmentHtml']}
						</div>
						" . (($this->memberData['view_sigs'] AND $members[ $msg['msg_author_id'] ]['signature']) ? ("
							" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'signature_separator' ) ? $this->registry->getClass('output')->getTemplate('global')->signature_separator($members[ $msg['msg_author_id'] ]['signature'], $msg['msg_author_id'], IPSMember::isIgnorable( $members[ $msg['msg_author_id'] ]['member_group_id'], $members[ $msg['msg_author_id'] ]['mgroup_others'] )) : '' ) . "
						") : ("")) . "
						<ul class='post_controls clearfix clear'>
							" . (($topic['_canReply'] AND empty( $topic['_everyoneElseHasLeft'] )) ? ("
								<li>
									<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=replyForm&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}", "publicWithApp",'' ), "", "" ) . "\" title=\"{$this->lang->words['tt_reply_to_post']}\">{$this->lang->words['pc_reply']}</a>
								</li>
							") : ("")) . "
							" . (($topic['_canReport'] and $this->memberData['member_id']) ? ("
								<li class='report'>
									<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;rcom=messages&amp;topicID={$this->request['topicID']}&amp;st={$this->request['st']}&amp;msg={$msg['msg_id']}", "public",'' ), "", "" ) . "'>{$this->lang->words['pc_report']}</a>
								</li>
							") : ("")) . "
							" . (($msg['_canEdit'] === TRUE) ? ("
								<li class='post_edit' id='edit_post_{$msg['msg_id']}'>
									<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=editMessage&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['edit_this_post']}'>{$this->lang->words['pc_edit']}</a>
								</li>
							") : ("")) . "
							" . (($msg['_canDelete'] === TRUE && $msg['msg_is_first_post'] != 1) ? ("
								<li class='post_del' id='del_post_{$msg['msg_id']}'>
									<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=deleteReply&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['delete_this_post']}' class='delete_post'>{$this->lang->words['pc_delete']}</a>
								</li>
							") : ("")) . "
						</ul>
					</div>
				</div>
			</div>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showConversationForArchive --*/
function showConversationForArchive($topic, $replies, $members) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['showConversationForArchive'] ) )
{
$count_e2b0de5591cae9923265ed3ac26b1c0e = is_array($this->functionData['showConversationForArchive']) ? count($this->functionData['showConversationForArchive']) : 0;
$this->functionData['showConversationForArchive'][$count_e2b0de5591cae9923265ed3ac26b1c0e]['topic'] = $topic;
$this->functionData['showConversationForArchive'][$count_e2b0de5591cae9923265ed3ac26b1c0e]['replies'] = $replies;
$this->functionData['showConversationForArchive'][$count_e2b0de5591cae9923265ed3ac26b1c0e]['members'] = $members;
}

foreach( $members as $id => $member )
{
	$mems[] = $member['members_display_name'];
}
$memberNames = implode( $mems, ', ' );
$IPBHTML .= "<html>
	<head>
		<meta http-equiv=\"content-type\" content=\"text/html; charset={$this->settings['gb_char_set']}\" />
		<title>{$topic['mt_title']}</title>
		<style type=\"text/css\">
			* {
				font-family: Georgia, \"Times New Roman\", serif;
			}
			
			html #content {
				font-size: 10pt;
			}
			
			ol,ul { list-style:none; }
			
			ul.pagination {
				margin-left: -35px;
			}
			
			ul.pagination a,
			ul.pagination li.active, 
			ul.pagination li.pagejump,
			ul.pagination li.total {
				text-decoration: none;
				padding: 1px 4px 1px 0px;
				display: block;
			}
			
			ul.pagination li {
				font-size: 0.9em;	
				margin: 0 2px 0 2px;
				float: left;
			}
			
				ul.pagination li.total,
				ul.pagination li.active {
					background: none;
					border: 0;
					margin-left: 0px;
				}
			
				ul.pagination li.active {
					color: #000;
					font-size: 1em;
					font-weight: bold;
				}
				
				ul.pagination li.pagejump {
					display: none;
				}
			
			#admin_bar,
			#header,
			#footer_utilities,
			#utility_links,
			.post_mod,
			.author_info,
			.rep_bar,
			.post_controls,
			.top,
			#content_jump,
			.topic_buttons,
			.topic_options,
			h1,
			.post_id,
			h3 img,
			.ip,
			hr,
			.moderation_bar,
			.topic_jump,
			.topic_share,
			#fast_reply,
			#reputation_filter,
			.statistics,
			.rating,
			.message,
			#debug_wrapper,
			fieldset,
			.signature {
				display: none;
			}
			
			#breadcrumb {
				display: block !important;
			}
				#breadcrumb li {
					float: left;
				}
			
			.topic, .hfeed {
				clear: both;
			}
			
			.post_block {
				margin-bottom: 10pt;
				border-top: 2pt solid gray;
				line-height: 60%; 
				padding-top: 10px;
			}
			
			.posted_info {
				color: gray !important;
				font-size: 8pt !important;
				text-decoration: none !important;
				padding-bottom: 3px;
				float: right;
				margin-top: -30px;
			}
			
			span.main_topic_title {
				font-size: 1.7em;
				padding-left: 2px;
			}
			
			.post_block h3 {
				display: inline !important;
				margin: 0px 0px 10px !important;
				padding: 0px !important;
				float: left;
			}
			
			.post_block h3 a {
				color: black !important;
				text-decoration: none !important;
				font-style: normal !important;
			}
			
				.post_block .post_body a:after {
				    content: \" (\" attr(href) \") \";
				}
			
			.post_body {
				line-height: 100%;
				margin-top: 15px;
				clear: both;
				display: block;
				padding: 10px;
				border-top: 1pt solid #d3d3d3;
			}
			
			h1, h2, h3 {
				font-weight: bold;
			}
			
			#copyright {
				text-align: center;
				color: gray;
				font-size: 9pt;
			}
			
			a img {
				border: 0px;
			}
			
			abbr.published {
				text-decoration: none !important;
				border: 0px;
			}
		</style>
	</head>
	<body>
		<h2 class='maintitle'>{$topic['mt_title']}</h2>
		<em>
			{$this->lang->words['email_participants']} {$memberNames}
		</em>
		<br />
		<br />
		".$this->__f__dcfeb4620e5596c24011fd9814d5fe8f($topic,$replies,$members)."	</body>
</html>";
return $IPBHTML;
}


function __f__dcfeb4620e5596c24011fd9814d5fe8f($topic, $replies, $members)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $replies as $msg_id => $msg )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<div class='post_block first hentry'>
				<div class='post_wrap'>
					<h3>
						{$members[ $msg['msg_author_id'] ]['members_display_name']}
					</h3>
					<div class='post_body'>
						<p class='posted_info'>{$this->lang->words['pc_sent']} " . $this->registry->getClass('class_localization')->getDate($msg['msg_date'],"long", 0) . "</p>
						<div class='post entry-content'>
							{$msg['msg_post']}
						</div>
					</div>
					<ul class='post_controls'>
						<li>&nbsp;</li>
					</ul>
				</div>
			</div>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showFolder --*/
function showFolder($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['showFolder'] ) )
{
$count_9746e9d6dd6eb3dc83acb525e2c66ee9 = is_array($this->functionData['showFolder']) ? count($this->functionData['showFolder']) : 0;
$this->functionData['showFolder'][$count_9746e9d6dd6eb3dc83acb525e2c66ee9]['messages'] = $messages;
$this->functionData['showFolder'][$count_9746e9d6dd6eb3dc83acb525e2c66ee9]['dirname'] = $dirname;
$this->functionData['showFolder'][$count_9746e9d6dd6eb3dc83acb525e2c66ee9]['pages'] = $pages;
$this->functionData['showFolder'][$count_9746e9d6dd6eb3dc83acb525e2c66ee9]['currentFolderID'] = $currentFolderID;
$this->functionData['showFolder'][$count_9746e9d6dd6eb3dc83acb525e2c66ee9]['jumpFolderHTML'] = $jumpFolderHTML;
}

$this->templateVars['folder_all'] = "";
$this->__default__templateVars['folder_all'] = "";

if ( $this->request['folderFilter'] == 'all' OR ! $this->request['folderFilter'] )
{
	$this->templateVars['folder_all'] = "selected='selected'";
}
else {$this->templateVars['folder_all'] = $this->__default__templateVars['folder_all']; }

$this->templateVars['folder_in'] = "";
$this->__default__templateVars['folder_in'] = "";

if ( $this->request['folderFilter'] == 'in' )
{
	$this->templateVars['folder_in'] = "selected='selected'";
}
else {$this->templateVars['folder_in'] = $this->__default__templateVars['folder_in']; }

$this->templateVars['folder_sent'] = "";
$this->__default__templateVars['folder_sent'] = "";

if ( $this->request['folderFilter'] == 'sent' )
{
	$this->templateVars['folder_sent'] = "selected='selected'";
}
else {$this->templateVars['folder_sent'] = $this->__default__templateVars['folder_sent']; }
$IPBHTML .= "<script type='text/javascript'>
	ipb.messenger.curFolder = '{$currentFolderID}';
</script>
<div class='topic_controls'>
{$pages}
" . (($currentFolderID != 'drafts') ? ("
						") : ("")) . "
<ul class='topic_buttons'>
	<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['go_to_compose']}'>{$this->lang->words['compose_new']}</a></li>
</ul>
</div>
<div id='message_list'>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=multiFile&amp;cFolderID={$currentFolderID}", "public",'' ), "", "" ) . "\" id='msgFolderForm' method=\"post\">
		<input type=\"hidden\" name=\"sort\" value=\"{$this->request['sort']}\" />
		<input type=\"hidden\" name=\"st\" value=\"{$this->request['st']}\" />
		<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
		<div class='maintitle'>
			<span class='right'>
				<input type='checkbox' class='input_check' id='msg_checkall' value='1' /> &nbsp;
			</span>
			{$dirname}
		</div>
		<div class='ipsBox'>
			<div class='ipsBox_container'>
				<table class='ipb_table' id='message_table'>
					<tr class='header hide'>
						<th scope='col' class='col_m_status'>&nbsp;</th>
						<th scope='col' class='col_m_subject'>{$this->lang->words['col_topic']}</th>
						<th scope='col' class='col_m_replies short'>{$this->lang->words['col_replies']}</th>
						<th scope='col' class='col_m_date'>{$this->lang->words['col_last_message']}</th>
						<th scope='col' class='col_mod short'>&nbsp;</th>
					</tr>
					" . ((count( $messages )) ? ("
						".$this->__f__54738fdd985f7dde731f04379dd3f64a($messages,$dirname,$pages,$currentFolderID,$jumpFolderHTML)."					") : ("
						<tr>
							<td colspan='8' class='no_messages row1'>
								{$this->lang->words['folder_no_messages_row']}
							</td>
						</tr>
					")) . "
				</table>
			</div>
		</div>
		<div id='messenger_mod' class='moderation_bar rounded with_action right'>
			<select id='pm_multifile' name='method' class='input_select'>
				<optgroup label=\"{$this->lang->words['with_selected_opt']}\">
					<option value=\"delete\">{$this->lang->words['option__delete']}</option>
					" . (($currentFolderID != 'drafts') ? ("
						<option value=\"markread\">{$this->lang->words['option__markread']}</option>
						<option value=\"markunread\">{$this->lang->words['option__markunread']}</option>
						<option value=\"notifyon\">{$this->lang->words['option__turnon']}</option>
						<option value=\"notifyoff\">{$this->lang->words['option__turnoff']}</option>
					") : ("")) . "
				</optgroup>
				" . (($jumpFolderHTML AND $currentFolderID != 'drafts' AND $currentFolderID != 'new') ? ("
					<optgroup label=\"{$this->lang->words['move_to_opt']}\">
						{$jumpFolderHTML}
					</optgroup>
				") : ("")) . "
			</select>
			<input type=\"submit\" class='input_submit alt' id='folder_moderation' value=\"{$this->lang->words['jmp_go']}\" />
		</div>
	</form>
	<div id='messenger_filter' class='left ipsPad_half'>
		<form method='post' action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showFolder&amp;folderID={$currentFolderID}", "public",'' ), "", "" ) . "'>
			<label for='conversation_filter' class='desc'>{$this->lang->words['filter__show']} </label>
			<select id='conversation_filter' name='folderFilter' class='input_select'>
				<option value='' " . $this->templateVars["folder_all"] . ">{$this->lang->words['filter__all']}</option>
				<option value='in' " . $this->templateVars["folder_in"] . ">{$this->lang->words['filter__others']}</option>
				<option value='sent' " . $this->templateVars["folder_sent"] . ">{$this->lang->words['filters__i']}</option>
			</select>
			<input type='submit' class='input_submit alt' value='{$this->lang->words['filters__update']}' />
		</form>
	</div>
</div>
<br />
<div class='topic_controls clear clearfix'>
{$pages}
</div>";
return $IPBHTML;
}


function __f__3c2177739e1277b104ed308e18f648aa($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML,$id='',$msg='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $msg['pages'] as $page )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
												" . (($page['last']) ? ("
													<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}&amp;st={$page['st']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['goto_page']} {$page['page']}'>{$page['page']} {$this->lang->words['_rarr']}</a></li>
												") : ("
													<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}&amp;st={$page['st']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['goto_page']} {$page['page']}'>{$page['page']}</a></li>
												")) . "
										
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__54738fdd985f7dde731f04379dd3f64a($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $messages as $id => $msg )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
							<tr id='{$msg['mt_id']}' class='" . (($msg['map_has_unread']) ? ("unread") : ("")) . "'>
								<td class='col_m_photo altrow short'>
									" . (($msg['_starterMemberData']['member_id']) ? ("
										<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_starterMemberData']['member_id']}", "public",'' ), "{$msg['_starterMemberData']['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink'>
											<img src='{$msg['_starterMemberData']['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
										</a>
									") : ("
										" . IPSMember::buildProfilePhoto(0,'mini') . "
									")) . "
								</td>
								<td class='col_m_subject'>
									" . (($msg['mt_is_deleted'] OR $msg['map_user_banned']) ? ("
										<span class='ipsBadge ipsBadge_red'>
											{$this->lang->words['msg_deleted']}
										</span>
									") : ("")) . "
									<h4>
										" . (($msg['map_has_unread']) ? ("
											<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=findMessage&amp;topicID={$msg['mt_id']}&amp;msgID=__firstUnread__", "public",'' ), "", "" ) . "' title='{$this->lang->words['first_unread_reply']}'>" . $this->registry->getClass('output')->getReplacement("f_newpost") . "</a>
											<strong>
										") : ("")) . "
										<a href='" . (($currentFolderID == 'drafts') ? ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;topicID={$msg['mt_id']}", "public",'' ), "", "" ) . "") : ("" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}", "public",'' ), "", "" ) . "")) . "' title='{$this->lang->words['msg_view_conversation']}'>
										{$msg['mt_title']}
										</a>
										" . (($msg['map_has_unread']) ? ("</strong>") : ("")) . "
									</h4>
									" . (($msg['map_ignore_notification']) ? ("
										<span class='ipsBadge ipsBadge_lightgrey'>
											{$this->lang->words['msg_no_notify']}
										</span>
									") : ("")) . "
									<br />
									<span class='desc lighter blend_links'>
										{$this->lang->words['msg_startedby']}
										" . (($msg['_starterMemberData']['members_display_name']) ? ("
											" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($msg['_starterMemberData']) : '' ) . ",
										") : ("
											<span class='desc'>{$this->lang->words['deleted_user']},</span>
										")) . "
										<span class='desc lighter blend_links'>
											{$this->lang->words['msg_sentto']}
											" . (($msg['_toMemberData']['members_display_name']) ? ("
												" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($msg['_toMemberData']) : '' ) . "
											") : ("
												<span class='desc'>{$this->lang->words['deleted_user']}</span>
											")) . "
											" . (($msg['_otherInviteeCount'] > 0) ? ("" . (($msg['_otherInviteeCount'] > 1) ? ("
													<span title='" . implode( ', ', $msg['_invitedMemberNames'] ) . "'>({$this->lang->words['pc_and']} {$msg['_otherInviteeCount']} {$this->lang->words['pc_others']})</p>
												") : ("
													<span title='" . implode( ', ', $msg['_invitedMemberNames'] ) . "'>({$this->lang->words['pc_and']} {$msg['_otherInviteeCount']} {$this->lang->words['pc_other']})</p>
												")) . "") : ("")) . "
										</span>
										" . ((in_array( $currentFolderID, array( 'new' ) )) ? ("
											<p class='ipsType_small desc'>{$this->lang->words['folder_prefix']} {$msg['_folderName']}</p>
										") : ("")) . "
									</span>	
									" . ((is_array( $msg['pages'] ) AND count( $msg['pages'] )) ? ("
										<ul class='mini_pagination'>
										".$this->__f__3c2177739e1277b104ed308e18f648aa($messages,$dirname,$pages,$currentFolderID,$jumpFolderHTML,$id,$msg)."										</ul>
									") : ("")) . "
								</td>
								<td class='col_m_replies desc blend_links'>
									<ul>
										<li>" . (($msg['map_user_banned']) ? ("-") : ("" . sprintf( $this->lang->words['msg_xreplies'], intval( $msg['mt_replies'] ) ) . "")) . "</li>
									</ul>
								</td>
								<td class='col_f_post'>
									" . (($msg['_lastMsgAuthor']['member_id']) ? ("
										<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_lastMsgAuthor']['member_id']}", "public",'' ), "{$msg['_lastMsgAuthor']['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left'>
											<img src='{$msg['_lastMsgAuthor']['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
										</a>
									") : ("
										<span class='left'>" . IPSMember::buildProfilePhoto(0,'mini') . "</span>
									")) . "
									<ul class='last_post ipsType_small'>
										" . (($msg['map_user_banned']) ? ("
											<li><em>{$this->lang->words['info_not_available']}</em></li>
										") : ("<li>{$this->lang->words['pc_by']} " . (($msg['_lastMsgAuthor']['members_display_name']) ? ("" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($msg['_lastMsgAuthor']) : '' ) . "") : ("<span class='desc'>{$this->lang->words['deleted_user']}</span>")) . "</li>")) . "
										<li class='desc'>
											<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=findMessage&amp;topicID={$msg['mt_id']}&amp;msgID={$msg['mt_last_msg_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['goto_last_post']}'>" . $this->registry->getClass('class_localization')->getDate($msg['mt_last_post_time'],"DATE", 0) . "</a>
										</li>
									</ul>
								</td>
								<td class='col_m_mod short'>
									<input type='checkbox' class='input_check msg_check' name='msgid[{$msg['mt_id']}]' id='msg_check_{$msg['mt_id']}' />
								</td>
							</tr>
						
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showSearchResults --*/
function showSearchResults($messages, $pages, $error) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['showSearchResults'] ) )
{
$count_7221fa3616be60185e9bc90189460218 = is_array($this->functionData['showSearchResults']) ? count($this->functionData['showSearchResults']) : 0;
$this->functionData['showSearchResults'][$count_7221fa3616be60185e9bc90189460218]['messages'] = $messages;
$this->functionData['showSearchResults'][$count_7221fa3616be60185e9bc90189460218]['pages'] = $pages;
$this->functionData['showSearchResults'][$count_7221fa3616be60185e9bc90189460218]['error'] = $error;
}
$IPBHTML .= "<script type='text/javascript'>
//<![CDATA[
	ipb.messenger.curFolder = 'in';
//]]>
</script>
" . (($error) ? ("
	<p class='message error'>
		{$error}
	</p>
	<br />
") : ("")) . "
" . (($pages) ? ("
	<div class='topic_controls'>
	{$pages}
	</div>
	<br />
") : ("")) . "
<h2 class='maintitle clear'>{$this->lang->words['your_search_results']}</h2>
<div id='message_list'>
	<div class='ipsBox'>
		<div class='ipsBox_container'>
			<table class='ipb_table' id='message_table'>
				<tr class='header hide'>
					<th scope='col' class='col_m_photo'>&nbsp;</th>
					<th scope='col' class='col_m_subject'>{$this->lang->words['col_subject']}</th>
					<th scope='col' class='col_m_replies short'>{$this->lang->words['col_replies']}</th>
					<th scope='col' class='col_m_date'>{$this->lang->words['col_last_message']}</th>
				</tr>
		
				" . ((count( $messages )) ? ("
					".$this->__f__911ba0be361c1505428715bdb07522ae($messages,$pages,$error)."				") : ("
					<tr>
						<td colspan='5' class='no_messages row1'>
							{$this->lang->words['no_messages_row']}
						</td>
					</tr>
				")) . "
			</table>
		</div>
	</div>
</div>";
return $IPBHTML;
}


function __f__911ba0be361c1505428715bdb07522ae($messages, $pages, $error)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $messages as $id => $msg )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<tr id='{$msg['mt_id']}' class='" . (($msg['map_has_unread']) ? ("unread") : ("")) . "'>
							<td class='col_m_photo altrow short'>
								<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_starterMemberData']['member_id']}", "public",'' ), "{$msg['_starterMemberData']['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink'>
									<img src='{$msg['_starterMemberData']['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
								</a>
							</td>
							<td>
								" . (($msg['mt_is_deleted'] OR $msg['map_user_banned']) ? ("
									<span class='ipsBadge ipsBadge_red'>
										{$this->lang->words['msg_deleted']}
									</span>
								") : ("")) . "
								<h4><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}", "public",'' ), "", "" ) . "\">{$msg['mt_title']}</a></h4><br />
								<span class='desc lighter blend_links'>
									{$this->lang->words['msg_startedby']}
									" . (($msg['_starterMemberData']['members_display_name']) ? ("
										" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($msg['_starterMemberData']) : '' ) . "
									") : ("
										<span class='desc'>{$this->lang->words['deleted_user']}</span>
									")) . "
									<span class='desc lighter blend_links'>
										, {$this->lang->words['msg_sentto']}
										" . (($msg['_toMemberData']['members_display_name']) ? ("
											" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($msg['_toMemberData']) : '' ) . "
										") : ("
											<span class='desc'>{$this->lang->words['deleted_user']}</span>
										")) . "
										" . (($msg['_otherInviteeCount'] > 0) ? ("" . (($msg['_otherInviteeCount'] > 1) ? ("
												<span title='" . implode( ', ', $msg['_invitedMemberNames'] ) . "'>({$this->lang->words['pc_and']} {$msg['_otherInviteeCount']} {$this->lang->words['pc_others']})</p>
											") : ("
												<span title='" . implode( ', ', $msg['_invitedMemberNames'] ) . "'>({$this->lang->words['pc_and']} {$msg['_otherInviteeCount']} {$this->lang->words['pc_other']})</p>
											")) . "") : ("")) . "
									</span>
									" . ((in_array( $currentFolderID, array( 'new' ) )) ? ("
										<p class='ipsType_small desc'>{$this->lang->words['folder_prefix']} {$msg['_folderName']}</p>
									") : ("")) . "
								</span>
								<p class='ipsType_small desc'>{$this->lang->words['label_pc']} {$msg['_folderName']}</p>
							</td>
							<td class='col_m_replies desc blend_links'>
								<ul>
									<li>" . (($msg['map_user_banned']) ? ("-") : ("" . sprintf( $this->lang->words['msg_xreplies'], intval( $msg['mt_replies'] ) ) . "")) . "</li>
								</ul>
							</td>
							<td class='col_f_post'>
								<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_lastMsgAuthor']['member_id']}", "public",'' ), "{$msg['_lastMsgAuthor']['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left'>
									<img src='{$msg['_lastMsgAuthor']['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
								</a>
								<ul class='last_post ipsType_small'>
									" . (($msg['map_user_banned']) ? ("
										<li><em>{$this->lang->words['info_not_available']}</em></li>
									") : ("
										<li>{$this->lang->words['pc_by']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($msg['_lastMsgAuthor']) : '' ) . "</li>
									")) . "
									<li class='desc blend_links'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=findMessage&amp;topicID={$msg['mt_id']}&amp;msgID={$msg['mt_last_msg_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['goto_last_post']}'>" . $this->registry->getClass('class_localization')->getDate($msg['mt_last_post_time'],"DATE", 0) . "</a></li>
								</ul>
							</td>
						</tr>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>