<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 4               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:07 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_blog_cblocks_4 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['block_activeusers'] = array('hasactiveusers');
$this->_funcHooks['cblock_footer'] = array('inlineeditcustomcblock','exteditcustomcblock','isCustomBlock');
$this->_funcHooks['cblock_friends'] = array('recentLoop','anyfriends');
$this->_funcHooks['cblock_header'] = array('canRemoveBlock','canConfigureBlock','thisismyblog');
$this->_funcHooks['comments'] = array('linkPhotoStart','linkPhotoEnd','newcommentRecent','recentLoop','anyrecents');
$this->_funcHooks['latest_visitors'] = array('recentLoop','anyvisitors');
$this->_funcHooks['mini_cal_mini_wrap'] = array('minicalday');
$this->_funcHooks['recentEntries'] = array('newcommentRecent','recentLoop','anyrecents');


}

/* -- album_row --*/
function album_row($album="") {
$IPBHTML = "";
$IPBHTML .= "<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;album={$album['album_id']}", "public",'' ), "{$album['album_name_seo']}", "viewalbum" ) . "\">{$album['album_name']}</a><br />";
return $IPBHTML;
}

/* -- block_activeusers --*/
function block_activeusers($active=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['block_activeusers'] ) )
{
$count_0d4aeeed99c788250316aef6864e3f7c = is_array($this->functionData['block_activeusers']) ? count($this->functionData['block_activeusers']) : 0;
$this->functionData['block_activeusers'][$count_0d4aeeed99c788250316aef6864e3f7c]['active'] = $active;
}
$IPBHTML .= "<p class='statistics_brief'>" . sprintf( $this->lang->words['active_users_detail'], $active['stats']['members'], $active['stats']['guests'], $active['stats']['anon'] ) . "</p>
" . ((is_array( $active['names'] ) AND count( $active['names'] )) ? ("
	<br />
	<p>
		<span class='name'>" . implode( ",</span> <span class='name'>", $active['names'] ) . "</span>
	</p>
") : ("")) . "";
return $IPBHTML;
}

/* -- blog_cblocks --*/
function blog_cblocks($content, $position, $hidden) {
$IPBHTML = "";
$IPBHTML .= "";
return $IPBHTML;
}

/* -- categories --*/
function categories($blogid, $categories=array()) {
$IPBHTML = "";
$IPBHTML .= "" . ((count( $categories ) > 7) ? ("
<ul class='largeblock_rows categories'>
") : ("
<ul class='block_rows categories'>
")) . "" . ((is_array( $categories ) AND count( $categories )) ? ("".$this->__f__87cf94dcaba7678295d2898c882bcb8e($blogid,$categories)."	") : ("")) . "
</ul>";
return $IPBHTML;
}


function __f__87cf94dcaba7678295d2898c882bcb8e($blogid, $categories=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $categories as $cid => $cdata )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li>" . $this->registry->getClass('output')->getReplacement("blog_category") . " &nbsp; <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;blogid={$blogid}&amp;cat={$cid}", "public",'' ), "{$cdata['category_title_seo']}", "blogcatview" ) . "'>{$cdata['category_title']} (" . intval($cdata['count']) . ")</a></li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- cblock_footer --*/
function cblock_footer($cblock="",$auth_key="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['cblock_footer'] ) )
{
$count_aadbf831e251cb803295c44f5fa924dd = is_array($this->functionData['cblock_footer']) ? count($this->functionData['cblock_footer']) : 0;
$this->functionData['cblock_footer'][$count_aadbf831e251cb803295c44f5fa924dd]['cblock'] = $cblock;
$this->functionData['cblock_footer'][$count_aadbf831e251cb803295c44f5fa924dd]['auth_key'] = $auth_key;
}
$IPBHTML .= "</div>
	" . (($cblock['cblock_type']=='custom') ? ("" . (($this->settings['blog_inline_edit']) ? ("
			<br />
			<ul class='right'>
				<li class='ipsButton_secondary'>
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=post&amp;section=post&amp;do=editcblock&amp;blogid={$cblock['blog_id']}&amp;cbid={$cblock['cbcus_id']}&amp;inline=1", "public",'' ), "", "" ) . "\">{$this->lang->words['block_edit']}</a>
				</li>
				<li class='ipsButton_secondary important'>
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&module=post&section=mod&do=delcblock&blogid={$cblock['blog_id']}&cbid={$cblock['cblock_id']}&auth_key={$auth_key}", "public",'' ), "", "" ) . "\" class='delete_block'>{$this->lang->words['block_delete']}</a>
				</li>
			</ul>
			<br class='clear' />
		") : ("")) . "
		" . (($cblock['allow_edit'] && !$this->settings['blog_inline_edit']) ? ("
			<br />
			<ul class='right'>
				<li class='ipsButton_secondary'>
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=post&amp;section=post&amp;do=editcblock&amp;blogid={$cblock['blog_id']}&amp;cbid={$cblock['cbcus_id']}&amp;inline=1", "public",'' ), "", "" ) . "\">{$this->lang->words['block_edit']}</a>
				</li>
				<li class='ipsButton_secondary important'>
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&module=post&section=mod&do=delcblock&blogid={$cblock['blog_id']}&cbid={$cblock['cblock_id']}&auth_key={$auth_key}", "public",'' ), "", "" ) . "\" class='delete_block'>{$this->lang->words['block_delete']}</a>
				</li>
			</ul>
			<br class='clear' />
		") : ("")) . "") : ("")) . "
</div>";
return $IPBHTML;
}

/* -- cblock_friends --*/
function cblock_friends($friends=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['cblock_friends'] ) )
{
$count_856b91722d853af19b854bde9b1be180 = is_array($this->functionData['cblock_friends']) ? count($this->functionData['cblock_friends']) : 0;
$this->functionData['cblock_friends'][$count_856b91722d853af19b854bde9b1be180]['friends'] = $friends;
}

if ( ! isset( $this->registry->templateStriping['friendBlogs'] ) ) {
$this->registry->templateStriping['friendBlogs'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . ((is_array( $friends ) && count( $friends )) ? ("
	<ul class='ipsList_withminiphoto'>
				".$this->__f__43c5add6ecb15fad0d8408eafe4e3fad($friends)."	</ul>
") : ("
	<div class='no_messages'>{$this->lang->words['friends_no_blogs']}</div>
")) . "";
return $IPBHTML;
}


function __f__43c5add6ecb15fad0d8408eafe4e3fad($friends=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $friends as $fid => $friend )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='" .  IPSLib::next( $this->registry->templateStriping["friendBlogs"] ) . " ipsPad_half clearfix'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left ipsPad_half'>
					<img src='{$friend['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
				</a>
				<div class='list_content ipsPad_half'>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;blogid={$friend['blog_id']}", "public",'' ), "{$friend['blog_seo_name']}", "showblog" ) . "' title='{$friend['blog_name']}'><strong>{$friend['blog_name']}</strong></a>
					<div class='desc'>
						{$this->lang->words['by_ucfirst']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($friend) : '' ) . "
					</div>
				</div>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- cblock_header --*/
function cblock_header($cblock,$title="", $configable=0, $nopad=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['cblock_header'] ) )
{
$count_bbfe1aeb932c0429fd5be3967421bf64 = is_array($this->functionData['cblock_header']) ? count($this->functionData['cblock_header']) : 0;
$this->functionData['cblock_header'][$count_bbfe1aeb932c0429fd5be3967421bf64]['cblock'] = $cblock;
$this->functionData['cblock_header'][$count_bbfe1aeb932c0429fd5be3967421bf64]['title'] = $title;
$this->functionData['cblock_header'][$count_bbfe1aeb932c0429fd5be3967421bf64]['configable'] = $configable;
$this->functionData['cblock_header'][$count_bbfe1aeb932c0429fd5be3967421bf64]['nopad'] = $nopad;
}
$IPBHTML .= "<div id='cblock_{$cblock['cblock_id']}' class='general_box cblock cblock_drag'>
	" . (($this->registry->blogFunctions->blog['member_id'] == $this->memberData['member_id']) ? ("<h3 class='draggable'>
			" . (($this->settings['blog_inline_edit'] && $cblock['cblock_id'] > 0) ? ("" . (($this->settings['blog_allow_cblockchange']) ? ("
					<a href='#' class='close_link right' data-tooltip=\"{$this->lang->words['remove_cblock']}\"><img src='{$this->settings['img_url']}/cross.png' alt='x' /></a>
				") : ("")) . "
				" . (($configable) ? ("
					&nbsp;&nbsp;&nbsp;<a href='#' class='configure_link right' data-tooltip='{$this->lang->words['block_config']}'><img src='{$this->settings['img_url']}/cog.png' alt='{$this->lang->words['block_config']}' /></a>
				") : ("")) . "") : ("")) . "
			{$title}
		</h3>") : ("
		<h3>{$title}</h3>
	")) . "
	<div class='cblock_inner" . ((!$nopad) ? (" ipsPad") : ("")) . " row1'>";
return $IPBHTML;
}

/* -- comments --*/
function comments($comments=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['comments'] ) )
{
$count_599d166654340070128913c2706dae11 = is_array($this->functionData['comments']) ? count($this->functionData['comments']) : 0;
$this->functionData['comments'][$count_599d166654340070128913c2706dae11]['comments'] = $comments;
}

if ( ! isset( $this->registry->templateStriping['comments'] ) ) {
$this->registry->templateStriping['comments'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<ul class='ipsList_withminiphoto'>
	" . ((is_array( $comments ) && count( $comments )) ? ("
				".$this->__f__f60845ef3de9573a1c784aabad1c7e97($comments)."	") : ("
		<li class='row2'><div class='ipsPad'>{$this->lang->words['bucp_no_comments']}</div></li>
	")) . "
</ul>";
return $IPBHTML;
}


function __f__f60845ef3de9573a1c784aabad1c7e97($comments=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $comments as $cid => $comment )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='" .  IPSLib::next( $this->registry->templateStriping["comments"] ) . " clear ipsPad_half'>
				" . (($comment['member_id']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$comment['member_id']}", "public",'' ), "{$comment['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink ipsPad_half'>") : ("")) . "
					<img src='{$comment['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini left' />
				" . (($comment['member_id']) ? ("</a>") : ("")) . "
				<div class='list_content'>
					" . (($comment['newpost']) ? ("
						 <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;blogid={$comment['blog_id']}&amp;showentry={$comment['entry_id']}&amp;show=newcomment", "public",'' ), "{$comment['entry_name_seo']}", "showentry" ) . "\">" . $this->registry->getClass('output')->getReplacement("f_newpost") . "</a>
					") : ("")) . "
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;blogid={$comment['blog_id']}&amp;showentry={$comment['entry_id']}", "public",'' ), "{$comment['entry_name_seo']}", "showentry" ) . "#commentsStart\"><strong>{$comment['entry_name']}</strong></a>
					<div class='desc'>
						{$this->lang->words['by_ucfirst']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($comment) : '' ) . "
						<br />" . $this->registry->getClass('class_localization')->getDate($comment['comment_date'],"short", 0) . "
					</div>
				</div>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- config_digg --*/
function config_digg($config, $cblock) {
$IPBHTML = "";
$IPBHTML .= "<div class='short'>
	<label for='digg_user'>{$this->lang->words['digg_username']}: <input type=\"text\" id=\"digg_user\" name=\"digg_user\" value=\"{$config['digg_user']}\" class='input_text' /></label><br /><br />
	<input class=\"input_submit\" id='digg_config' type=\"button\" value=\"{$this->lang->words['save_settings_c']}\" />
	<script type='text/javascript'>
		$('digg_config').observe('click', ipb.blog.saveCblock.bindAsEventListener( this, {$cblock['cblock_id']}, [\"digg_user\"] ) );
	</script>
</div>";
return $IPBHTML;
}

/* -- config_google --*/
function config_google($config, $cblock) {
$IPBHTML = "";
$IPBHTML .= "<div class='short'>
	
	<label for='shareditems_id'>{$this->lang->words['google_id']}: <input type=\"text\" id=\"shareditems_id\" name=\"shareditems_id\" value=\"{$config['shareditems_id']}\" /></label><br /><br />
	<input class=\"input_submit\" id='google_config' type=\"button\" value=\"{$this->lang->words['save_settings_c']}\" />
	
	<script type='text/javascript'>
		$('google_config').observe('click', ipb.blog.saveCblock.bindAsEventListener( this, {$cblock['cblock_id']}, [\"shareditems_id\"] ) );
	</script>
	
</div>";
return $IPBHTML;
}

/* -- config_mybloglog --*/
function config_mybloglog($config, $cblock) {
$IPBHTML = "";
$IPBHTML .= "<div class='short'>
	<label for='mybloglog_id'>{$this->lang->words['google_id']}: <input type='text' id='mybloglog_id' name='mybloglog_id' value='{$config['mybloglog_id']}' /></label><br /><br />
	<input class='input_submit' id='mybloglog_config' type='button' value='{$this->lang->words['save_settings_c']}' />
	<script type='text/javascript'>
		$('mybloglog_config').observe('click', ipb.blog.saveCblock.bindAsEventListener( this, {$cblock['cblock_id']}, [\"mybloglog_id\"] ) );
	</script>		
</div>";
return $IPBHTML;
}

/* -- config_twitter --*/
function config_twitter($config, $cblock, $friend_sel) {
$IPBHTML = "";
$IPBHTML .= "<div class='short'>
	<strong>{$this->lang->words['account_settings_c']}</strong><br /><br />
	<label for='twitter_username'>{$this->lang->words['lastfm_username']}: <input type=\"text\" id=\"twitter_username\" name=\"twitter_username\" value=\"{$config['twitter_username']}\" class='input_text' /></label><br />
	<label for='twitter_id'>{$this->lang->words['google_id']}: <input type=\"text\" id=\"twitter_id\" name=\"twitter_id\" value=\"{$config['twitter_id']}\" class='input_text' /></label><br /><br />
	
	<strong>{$this->lang->words['lastfm_display']}</strong><br /><br />
	<select name='twitter_friends' id='twitter_friends'>
		<option value='1'{$friend_sel[0]}>{$this->lang->words['twitter_friends1']}</option>
		<option value='0'{$friend_sel[1]}>{$this->lang->words['twitter_friends2']}</option>
	</select>
	<br /><br />
	
	<input class=\"input_submit\" id='twitter_config' type=\"button\" value=\"{$this->lang->words['save_settings_c']}\" />
	
	<script type='text/javascript'>
		$('twitter_config').observe('click', ipb.blog.saveCblock.bindAsEventListener( this, {$cblock['cblock_id']}, [\"twitter_username\", \"twitter_id\", \"twitter_friends\"] ) );
	</script>
</div>";
return $IPBHTML;
}

/* -- config_visitors --*/
function config_visitors($config, $cblock) {
$IPBHTML = "";
$IPBHTML .= "<div class='short'>
	<label for='num_latest_visitors'>{$this->lang->words['visitor_how_many']}: <input type=\"text\" id=\"num_latest_visitors\" name=\"num_latest_visitors\" value=\"{$config['num_latest_visitors']}\" /></label><br /><br />
	<input class=\"input_submit\" id='visitors_config' type=\"button\" value=\"{$this->lang->words['save_settings_c']}\" />
	
	<script type='text/javascript'>
		$('visitors_config').observe('click', ipb.blog.saveCblock.bindAsEventListener( this, {$cblock['cblock_id']}, [\"num_latest_visitors\"] ) );
	</script>		
</div>";
return $IPBHTML;
}

/* -- get_my_search --*/
function get_my_search($blogid="") {
$IPBHTML = "";
$IPBHTML .= "<form method='post' action='{$this->settings['base_url']}app=core&amp;module=search&amp;do=quick_search' id='context_search'>
	<input type='hidden' name='search_app' value='blog:blog:{$blogid}' />	
	<div class='short'>
		<input type=\"text\" style=\"width:90%;\" name=\"search_term\"  onfocus=\"this.value=''\" value=\"{$this->lang->words['blog_enter_search']}\" /><br />
		<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['jmp_go']}\" />
	</div>
</form>";
return $IPBHTML;
}

/* -- latest_visitors --*/
function latest_visitors($visitors=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['latest_visitors'] ) )
{
$count_4ce1a12a9548a5db6ab99010af679fce = is_array($this->functionData['latest_visitors']) ? count($this->functionData['latest_visitors']) : 0;
$this->functionData['latest_visitors'][$count_4ce1a12a9548a5db6ab99010af679fce]['visitors'] = $visitors;
}

if ( ! isset( $this->registry->templateStriping['visitorRow'] ) ) {
$this->registry->templateStriping['visitorRow'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . ((is_array( $visitors ) && count( $visitors )) ? ("
	<ul class='ipsList_withminiphoto'>
				".$this->__f__6ffca5ae25d512c9b57014844e3155b1($visitors)."	</ul>
") : ("
	<div class='no_messages'>{$this->lang->words['blog_no_visitors']}</div>
")) . "";
return $IPBHTML;
}


function __f__6ffca5ae25d512c9b57014844e3155b1($visitors=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $visitors as $vid => $visitor )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='" .  IPSLib::next( $this->registry->templateStriping["visitorRow"] ) . " ipsPad_half clearfix'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$visitor['member_id']}", "public",'' ), "{$visitor['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left ipsPad_half'>
					<img src='{$visitor['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
				</a>
				<div class='list_content ipsPad_half'>
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($visitor) : '' ) . "
					<div class='desc'>
						" . $this->registry->getClass('class_localization')->getDate($visitor['visited_date'],"TINY", 0) . "
					</div>
				</div>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- mini_cal_blank_cell --*/
function mini_cal_blank_cell() {
$IPBHTML = "";
$IPBHTML .= "<td class=\"row1 altrow\">&nbsp;<!-- no content --></td>";
return $IPBHTML;
}

/* -- mini_cal_date_cell --*/
function mini_cal_date_cell($month_day="") {
$IPBHTML = "";
$IPBHTML .= "<td" . ((strstr($month_day, '<a href')) ? (" class='cellHasEntry'") : ("")) . ">$month_day</td>";
return $IPBHTML;
}

/* -- mini_cal_date_cell_today --*/
function mini_cal_date_cell_today($month_day="") {
$IPBHTML = "";
$IPBHTML .= "<td class=\"today\">
	<strong>{$month_day}</strong>
</td>";
return $IPBHTML;
}

/* -- mini_cal_day_bit --*/
function mini_cal_day_bit($day="") {
$IPBHTML = "";
$IPBHTML .= "<td width=\"14%\" class=\"subtitle\">$day</td>";
return $IPBHTML;
}

/* -- mini_cal_mini_wrap --*/
function mini_cal_mini_wrap($content="", $days) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['mini_cal_mini_wrap'] ) )
{
$count_b28c5c11a8d72ab09c2b3a0ea6c8a443 = is_array($this->functionData['mini_cal_mini_wrap']) ? count($this->functionData['mini_cal_mini_wrap']) : 0;
$this->functionData['mini_cal_mini_wrap'][$count_b28c5c11a8d72ab09c2b3a0ea6c8a443]['content'] = $content;
$this->functionData['mini_cal_mini_wrap'][$count_b28c5c11a8d72ab09c2b3a0ea6c8a443]['days'] = $days;
}
$IPBHTML .= "<table class='mini_cal row1'>
	<tr class='header'>
		".$this->__f__9878f9dee2da7e987cac815f9ddbf35d($content,$days)."	</tr>
	<tr>
		{$content}
	</tr>
</table>";
return $IPBHTML;
}


function __f__9878f9dee2da7e987cac815f9ddbf35d($content="", $days)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $days as $day )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<th class='row1 altrow cwd'>{$day}</th>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- mini_cal_new_row --*/
function mini_cal_new_row($week="") {
$IPBHTML = "";
$IPBHTML .= "</tr>
	<!-- NEW ROW-->
<tr>";
return $IPBHTML;
}

/* -- recentEntries --*/
function recentEntries($entries=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_cblocks', $this->_funcHooks['recentEntries'] ) )
{
$count_cb090a8e93aab5ce9961a417289e84c9 = is_array($this->functionData['recentEntries']) ? count($this->functionData['recentEntries']) : 0;
$this->functionData['recentEntries'][$count_cb090a8e93aab5ce9961a417289e84c9]['entries'] = $entries;
}

if ( ! isset( $this->registry->templateStriping['recententries'] ) ) {
$this->registry->templateStriping['recententries'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<ul class='ipsList_withminiphoto'>
	" . ((is_array( $entries ) && count( $entries )) ? ("
				".$this->__f__36d78c2f5efdefde92b0cbfde26c3b30($entries)."	") : ("
		<li class='row2'><div class='ipsPad'>{$this->lang->words['no_entry_matches']}</div></li>
	")) . "
</ul>";
return $IPBHTML;
}


function __f__36d78c2f5efdefde92b0cbfde26c3b30($entries=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $entries as $eid => $entry )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li class='" .  IPSLib::next( $this->registry->templateStriping["recententries"] ) . " clear ipsPad_half'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$entry['member_id']}", "public",'' ), "{$entry['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left ipsPad_half'>
					<img src='{$entry['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
				</a>
				<div class='list_content ipsPad_half'>
					" . (($entry['newpost']) ? ("
						 <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;blogid={$entry['blog_id']}&amp;showentry={$entry['entry_id']}&amp;show=newcomment", "public",'' ), "{$entry['entry_name_seo']}", "showentry" ) . "\">" . $this->registry->getClass('output')->getReplacement("f_newpost") . "</a>
					") : ("")) . "
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;blogid={$entry['blog_id']}&amp;showentry={$entry['entry_id']}", "public",'' ), "{$entry['entry_name_seo']}", "showentry" ) . "\">{$entry['entry_name']}</a>
					<div class='desc'>" . $this->registry->getClass('class_localization')->getDate($entry['entry_date'],"short2", 0) . "</div>
				</div>
			</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- show_cblock --*/
function show_cblock($cblock=array()) {
$IPBHTML = "";
$IPBHTML .= "{$cblock['cbcus']} " . (($cblock['cbcus_has_attach']) ? ("<!--IBF.ATTACHMENT_{$cblock['cbcus_id']}-->") : ("")) . "";
return $IPBHTML;
}

/* -- show_mypicture --*/
function show_mypicture($member=array(),$blog=array()) {
$IPBHTML = "";
$IPBHTML .= "<center>
	<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink ipsPad_half'>
		<img src='{$member['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_medium' />
	</a>
</center>";
return $IPBHTML;
}

/* -- show_random_album_image --*/
function show_random_album_image($image_link="") {
$IPBHTML = "";
$IPBHTML .= "<center>{$image_link}</center>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>