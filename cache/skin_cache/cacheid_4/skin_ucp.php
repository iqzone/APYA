<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 4               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:08 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_ucp_4 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['coreAttachments'] = array('attachmentThumbLocation','attachmentPost','attach','attachAlmostFull','hasAttachLimit','hasPagesTop','hasAttachments','attachmentMultiDelete','hasPagesBottom');
$this->_funcHooks['displayNameForm'] = array('dnameOkMessage','dnameFbUser');
$this->_funcHooks['emailPasswordChangeForm'] = array('hideMessageIfAdmin','emailIsAdmin','passFbUser','removeUser','removeUser2','removeUser3','removeUser4','emailIsNotAdmin');
$this->_funcHooks['field_entry'] = array('cfieldDesc','cfieldDesc');
$this->_funcHooks['membersFacebookConnect'] = array('fbShowStatus','fbSyncPic','fbSyncStatus','canUpdateStatus','fbSyncStatus','statusImportGroup','fbLastSync','pImgOA','pCheckOA','pImgE','pCheckE','pImgPS','pCheckPS','pImgRS','pCheckRS','fbPassword','fbDefaultEmail','fbMismatch');
$this->_funcHooks['membersIgnoredUsersForm'] = array('ignoreMemberTopics','ignoreMemberSigs','ignoreGlobal','ignoreMemberPms','ignoreUserchats','hasChatRow','members','canSee','topPagination','hasChat','hasChatNone','bottomPagination','hasChatRowCheckbox');
$this->_funcHooks['membersProfileForm'] = array('isOurTimezone','timezones','monthSelected','months','daySelected','days','yearSelected','years','canUploadPhoto','dstError','doAutoDst','doManualDst','doManualDst','showComments','yesModComments','showLastVisitors','showFriends','yesModFriends','friendsEnabled','changeMemberTitle','birthdayFields','showProfileInfo','requiredCfields','optionalCfields');
$this->_funcHooks['membersSignatureForm'] = array('hasSignatureLimits','disablelightbox');
$this->_funcHooks['membersTwitterConnect'] = array('tcHasPic','tcShowStatus','tcHasPic','tcLastSync','tcSyncPic','tcSyncStatus','tcSyncIStatus','statusImportGroup','tcSyncAboutMe','tcSyncBgImg','canBG','twitterPassword');
$this->_funcHooks['notificationsForm'] = array('hasconfignotify','hasconfigdisable','hasconfignotify','hasconfigdisable','hasconfignotify','hasconfigdisable','keyExists','groupKeys','isPrivateMsg','badConfig','isTopicsOrPosts','notifyGroupsList','isCoreNot','updateLastApp','newNotApp','hasconfignotify','hasconfigdisable','hasconfignotify','hasconfigdisable','hasconfignotify','hasconfigdisable','keyNotDone','notifyOther','allowAdminMails');
$this->_funcHooks['notificationsLog'] = array('hasReadNotify','hasReadNotify','categories','hasconfirm','hasnotifyerror','hasNotifications','hasNotifyForMod');
$this->_funcHooks['userCPTemplate'] = array('isSettings','isSettingsInactive','active_tab','tabs','tabsMenus_active','items','errors','has_max_upload','usercp_form','hasMoreThanOneTabClass','hasMoreThanOneTabSidebar','hasMoreThanOneTabClassContent','has_errors','didSave','submit_button','end_form');


}

/* -- coreAttachments --*/
function coreAttachments($info="",$pages="",$attachments) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['coreAttachments'] ) )
{
$count_4991d0699bc2e1bcb17f9b75e01ffffb = is_array($this->functionData['coreAttachments']) ? count($this->functionData['coreAttachments']) : 0;
$this->functionData['coreAttachments'][$count_4991d0699bc2e1bcb17f9b75e01ffffb]['info'] = $info;
$this->functionData['coreAttachments'][$count_4991d0699bc2e1bcb17f9b75e01ffffb]['pages'] = $pages;
$this->functionData['coreAttachments'][$count_4991d0699bc2e1bcb17f9b75e01ffffb]['attachments'] = $attachments;
}

if ( ! isset( $this->registry->templateStriping['attach'] ) ) {
$this->registry->templateStriping['attach'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<h3 class='ipsType_subtitle'>{$this->lang->words['m_attach']}</h3>
<br />
<div class='row1'>	
	" . (($info['has_limit'] == 1) ? ("<div id='space_allowance' class='general_box'>
			<p><strong>{$info['attach_space_used']}</strong></p>
			<p class='progress_bar " . (($info['full_percent'] > 80) ? ("limit") : ("")) . "' title='{$this->lang->words['ucp_attach_allowance']} {$info['full_percent']}% {$this->lang->words['ucp_full']}'>
				<span style='width: {$info['full_percent']}%'>{$info['full_percent']}%</span>
			</p>
			<p class='desc'>{$info['attach_space_count']}</p>
		</div>") : ("")) . "
	" . (($pages) ? ("
		<div class='topic_controls'>
			{$pages}
		</div>
		<br class='clear' />
	") : ("")) . "
	<!-- ATTACHMENTS TABLE -->
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=updateAttachments&amp;do=saveIt", "public",'' ), "", "" ) . "\" id=\"checkBoxForm\" method=\"post\">
	<table class='ipb_table' summary=\"{$this->lang->words['ucp_user_attach']}\">
		<tr class='header'>
				<th scope='col' style='width: 2%'>&nbsp;</th>
				<th scope='col' style='width: 35%'>{$this->lang->words['attach_title']}</th>
				<th scope='col' style='width: 7%'>{$this->lang->words['attach_hsize']}</th>
				<th scope='col' style='width: 27%'>{$this->lang->words['attach_topic']}</th>
				<th scope='col' class='short' style='width: 3%'><input class='input_check' id=\"checkAllAttachments\" type=\"checkbox\" value=\"{$this->lang->words['check_all']}\" /></th>
			</tr>
			" . ((count($attachments)) ? ("
								".$this->__f__559bbcadd424e0e554729105b9509ba9($info,$pages,$attachments)."			") : ("
				<tr>
					<td colspan=\"5\" class='no_messages'>{$this->lang->words['splash_noattach']}</td>
				</tr>
			")) . "
		</table>
		" . ((count($attachments)) ? ("
			<div class='moderation_bar rounded with_action clear' id='topic_mod'>
				<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
				<input type=\"submit\" value=\"{$this->lang->words['attach_delete']}\" class=\"input_submit alt\" />
			</div>
		") : ("")) . "
	</form>
</div>
" . (($pages) ? ("
	<div class='topic_controls'>
		{$pages}
	</div>
	<br class='clear' />
") : ("")) . "
<script type='text/javascript'>
	ipb.global.registerCheckAll( 'checkAllAttachments', 'checkall' );
</script>";
return $IPBHTML;
}


function __f__559bbcadd424e0e554729105b9509ba9($info="",$pages="",$attachments)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $attachments as $idx => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<tr id=\"a{$data['attach_id']}\" class='" .  IPSLib::next( $this->registry->templateStriping["attach"] ) . "'>
							<td class='short altrow'>
								" . (($data['attach_thumb_location']) ? ("
									<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=attach&amp;section=attach&amp;attach_rel_module={$data['_type']}&amp;attach_id={$data['attach_id']}", "public",'' ), "", "" ) . "\" title=\"{$data['attach_file']}\"><img src=\"{$this->settings['upload_url']}/{$data['attach_thumb_location']}\" width=\"30\" height=\"30\" alt='{$this->lang->words['attached_file']}' /></a>
								") : ("
									<img src=\"{$this->settings['mime_img']}/{$data['image']}\" alt=\"{$this->lang->words['attached_file']}\" />
								")) . "
							</td>
							<td>
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=attach&amp;section=attach&amp;attach_rel_module={$data['_type']}&amp;attach_id={$data['attach_id']}", "public",'' ), "", "" ) . "\" title=\"{$data['attach_file']}\">{$data['short_name']}</a><br />
								<span class=\"desc\">( {$this->lang->words['attach_hits']}: {$data['attach_hits']} )</span>
							</td>
							<td class='short altrow'>{$data['real_size']}</td>
							<td>
								" . (($data['attach_rel_id'] > 0 AND $data['attach_rel_module'] == 'post') ? ("
									<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}&amp;view=findpost&amp;p={$data['attach_rel_id']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['ucp_view_org']}'>{$data['title']}</a>
								") : ("
									{$data['title']}
								")) . "
								<br />
								<span class=\"desc\">{$data['attach_date']}</span>
							</td>
							<td class='altrow short'><input type=\"checkbox\" name=\"attach[{$data['attach_id']}]\" value=\"1\" class=\"input_check checkall\" /></td>
						</tr>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- displayNameForm --*/
function displayNameForm($form=array(),$error="",$okmessage="", $isFB=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['displayNameForm'] ) )
{
$count_0fde55b64b5bfae143e7d0a103b0a91a = is_array($this->functionData['displayNameForm']) ? count($this->functionData['displayNameForm']) : 0;
$this->functionData['displayNameForm'][$count_0fde55b64b5bfae143e7d0a103b0a91a]['form'] = $form;
$this->functionData['displayNameForm'][$count_0fde55b64b5bfae143e7d0a103b0a91a]['error'] = $error;
$this->functionData['displayNameForm'][$count_0fde55b64b5bfae143e7d0a103b0a91a]['okmessage'] = $okmessage;
$this->functionData['displayNameForm'][$count_0fde55b64b5bfae143e7d0a103b0a91a]['isFB'] = $isFB;
}
$IPBHTML .= "" . (($okmessage != "") ? ("
	<p class='message'>{$okmessage}</p>
") : ("")) . "
<fieldset class='row1'>
	<h3 class='ipsType_subtitle'>{$this->lang->words['dname_title']}</h3>
	<p class='ipsType_pagedesc'>{$form['_lang_string']}</p>
	<br />
	" . (($form['_noPerm']) ? ("
		<p class='message error'>{$form['_noPerm']}</p>
	") : ("<ul class='ipsForm ipsForm_horizontal'>
			<li class='ipsField'>
				<label for='displayName' class='ipsField_title'>{$this->lang->words['dname_choose']}</label>
				<p class='ipsField_content'>
					<input class='input_text' type=\"text\" maxlength='{$this->settings['max_user_name_length']}' name=\"displayName\" id=\"displayName\" value=\"{$this->request['displayName']}\" size='30' /><br />
					<span class='desc lighter'>{$this->lang->words['dname_choose2']}</span>
				</p>
			</li>
			" . ((!$isFB) ? ("
			<li class='ipsField'>
				<label for='displayPassword' class='ipsField_title'>{$this->lang->words['dname_password']}</label>
				<p class='ipsField_content'>
					<input class='input_text' type=\"password\" name=\"displayPassword\" id=\"displayPassword\" value=\"\" size='30' /> <br />
					<span class='desc lighter'>{$this->lang->words['dname_password2']}</span>
				</p>
			</li>
			") : ("")) . "
		</ul>")) . "
</fieldset>";
return $IPBHTML;
}

/* -- emailPasswordChangeForm --*/
function emailPasswordChangeForm($txt, $_message, $isFB=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['emailPasswordChangeForm'] ) )
{
$count_ce2c6b2e6088bf10deb3ed9f2c076f89 = is_array($this->functionData['emailPasswordChangeForm']) ? count($this->functionData['emailPasswordChangeForm']) : 0;
$this->functionData['emailPasswordChangeForm'][$count_ce2c6b2e6088bf10deb3ed9f2c076f89]['txt'] = $txt;
$this->functionData['emailPasswordChangeForm'][$count_ce2c6b2e6088bf10deb3ed9f2c076f89]['_message'] = $_message;
$this->functionData['emailPasswordChangeForm'][$count_ce2c6b2e6088bf10deb3ed9f2c076f89]['isFB'] = $isFB;
}
$IPBHTML .= "<script type=\"text/javascript\">
var msg = \"$_message\";
	if ( msg != \"\"){
		alert(msg);
	}
</script>
<fieldset class='row1'>
<h3 class='ipsType_subtitle'>{$this->lang->words['m_email_pass_change']}</h3>
" . ((!$this->memberData['g_access_cp']) ? ("<p class='ipsType_pagedesc'>{$this->lang->words['m_email_pass_change_desc']}</p>") : ("")) . "
</fieldset>
" . (($this->memberData['g_access_cp']) ? ("
	<p class='message unspecific'>
		{$this->lang->words['admin_emailpassword']}
	</p>
") : ("")) . "
" . ((!$this->memberData['g_access_cp']) ? ("<fieldset class='row1'>
		<h3 class='ipsType_subtitle'>{$this->lang->words['change_email_title']}</h3>
		<p class='ipsType_pagedesc'>
			{$txt}
		</p>
		<br />
		<ul class='ipsForm ipsForm_horizontal'>
			<li class='ipsField clearfix'>
				<span class='ipsField_title'>{$this->lang->words['ce_current']}</span>
				<div class='ipsField_content'>
					<strong style='line-height: 1.8'>{$this->memberData['email']}</strong>
				</div>
			</li>
			<li class='ipsField clearfix'>
				<label for='in_email_1' class='ipsField_title'>{$this->lang->words['ce_new_email']}</label>
				<p class='ipsField_content'>
					<input type=\"text\" size='30' name=\"in_email_1\" id='in_email_1' class='input_text' value=\"\" />
				</p>
			</li>
			<li class='ipsField clearfix'>
				<label for='in_email_2' class='ipsField_title'>{$this->lang->words['ce_new_email2']}</label>
				<p class='ipsField_content'>
					<input type=\"text\" size='30' name=\"in_email_2\" id='in_email_2' class='input_text' value=\"\" />
				</p>
			</li>
			" . ((!$isFB) ? ("
			<li class='ipsField clearfix'>
				<label for='password' class='ipsField_title'>{$this->lang->words['ec_passy']}</label>
				<p class='ipsField_content'>
					<input type=\"password\" size='30' id='password' class='input_text' name=\"password\" value=\"\" />
				</p>
			</li>
			") : ("")) . "
		</ul>
	</fieldset>
	<fieldset class='row1'>
		<h3 class='ipsType_subtitle'>{$this->lang->words['account_pass_title']}</h3>
		<p class='ipsType_pagedesc'>
			" . ((! $this->memberData['bw_local_password_set'] AND $this->memberData['members_created_remote']) ? ("
				{$this->lang->words['remote_pass_set']}
			") : ("
				{$this->lang->words['pass_change_text']}
			")) . "
		</p>
		<br />
		<ul class='ipsForm ipsForm_horizontal'>
			" . (($this->memberData['bw_local_password_set'] OR ! $this->memberData['members_created_remote']) ? ("
			<li class='ipsField'>
				<label for='current_pass' class='ipsField_title'>{$this->lang->words['account_pass_old']}</label>
				<p class='ipsField_content'>
					<input type=\"password\" name=\"current_pass\" value=\"\" id='current_pass' class='input_text' size='30' />
				</p>
			</li>
			") : ("")) . "
			<li class='ipsField'>
				<label for='new_pass_1' class='ipsField_title'>" . (($this->memberData['bw_local_password_set'] OR ! $this->memberData['members_created_remote']) ? ("{$this->lang->words['account_pass_new']}") : ("{$this->lang->words['enter_pass_remote1']}")) . "</label>
				<p class='ipsField_content'>
					<input type=\"password\" name=\"new_pass_1\" value=\"\" id='new_pass_1' class='input_text' size='30' />
				</p>
			</li>
			<li class='ipsField'>
				<label for='new_pass_2' class='ipsField_title'>" . (($this->memberData['bw_local_password_set'] OR ! $this->memberData['members_created_remote']) ? ("{$this->lang->words['account_pass_new2']}") : ("{$this->lang->words['enter_pass_remote2']}")) . "</label>
				<p class='ipsField_content'>
					<input type=\"password\" name=\"new_pass_2\" value=\"\" id='new_pass_2' class='input_text' size='30' />
				</p>
			</li>
		</ul>
	</fieldset>") : ("")) . "";
return $IPBHTML;
}

/* -- field_dropdown --*/
function field_dropdown($name="",$options="") {
$IPBHTML = "";
$IPBHTML .= "<select name=\"{$name}\" class='input_select'>
	{$options}
</select>";
return $IPBHTML;
}

/* -- field_entry --*/
function field_entry($title="",$desc="",$content="",$id="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['field_entry'] ) )
{
$count_6dfd221a697e3a29e08b61ab4d891286 = is_array($this->functionData['field_entry']) ? count($this->functionData['field_entry']) : 0;
$this->functionData['field_entry'][$count_6dfd221a697e3a29e08b61ab4d891286]['title'] = $title;
$this->functionData['field_entry'][$count_6dfd221a697e3a29e08b61ab4d891286]['desc'] = $desc;
$this->functionData['field_entry'][$count_6dfd221a697e3a29e08b61ab4d891286]['content'] = $content;
$this->functionData['field_entry'][$count_6dfd221a697e3a29e08b61ab4d891286]['id'] = $id;
}
$IPBHTML .= "<li class='custom'>
	<label for='field_{$id}' class='ipsSettings_fieldtitle'>{$title}</label>
	" . ((stristr($content, 'radio') || stristr($content, 'checkbox')) ? ("<p class='wrap'>{$content}</p>
		" . (($desc) ? ("<span class='desc'>{$desc}</span>") : ("")) . "") : ("{$content}
		" . (($desc) ? ("<br /><span class='desc'>{$desc}</span>") : ("")) . "")) . "
	
</li>";
return $IPBHTML;
}

/* -- field_textarea --*/
function field_textarea($name="",$value="") {
$IPBHTML = "";
$IPBHTML .= "<textarea cols=\"80\" rows=\"5\" wrap=\"soft\" name=\"$name\" class='input_text'>{$value}</textarea>";
return $IPBHTML;
}

/* -- field_textinput --*/
function field_textinput($name="",$value="") {
$IPBHTML = "";
$IPBHTML .= "<input type=\"text\" size=\"50\" name=\"{$name}\" value='{$value}' class='input_text' />";
return $IPBHTML;
}

/* -- membersFacebookConnect --*/
function membersFacebookConnect($fbuid, $fbUserData, $linkedMemberData, $perms) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['membersFacebookConnect'] ) )
{
$count_e2fb20026f17929abf6cf68008622ece = is_array($this->functionData['membersFacebookConnect']) ? count($this->functionData['membersFacebookConnect']) : 0;
$this->functionData['membersFacebookConnect'][$count_e2fb20026f17929abf6cf68008622ece]['fbuid'] = $fbuid;
$this->functionData['membersFacebookConnect'][$count_e2fb20026f17929abf6cf68008622ece]['fbUserData'] = $fbUserData;
$this->functionData['membersFacebookConnect'][$count_e2fb20026f17929abf6cf68008622ece]['linkedMemberData'] = $linkedMemberData;
$this->functionData['membersFacebookConnect'][$count_e2fb20026f17929abf6cf68008622ece]['perms'] = $perms;
}

if ( ! isset( $this->registry->templateStriping['usercp'] ) ) {
$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . (($fbuid AND $linkedMemberData['member_id'] AND $linkedMemberData['member_id'] != $this->memberData['member_id']) ? ("
	<!-- currently logged in FB user is linked to a different account -->
	<div class='message error'>
		<strong>{$this->lang->words['fb_connect_mismatch']}</strong>
		<p>{$this->lang->words['fb_connect_mismatch_desc']}</p>
	</div>
") : ("" . ((! $fbUserData['id']) ? ("
		<div id='fbUserBox'>
			<p class='message'>{$this->lang->words['fb_config']}</p>
			<br />
			<br />
			<a href=\"{$this->settings['_original_base_url']}/interface/facebook/index.php\"><img src=\"{$this->settings['img_url']}/facebook_login.png\" alt=\"\" /></a>
		</div>
	") : ("<div>
			<fieldset class='ipsPad_half row2'>
				<div class='left ipsUserPhoto' style='margin-right:4px;'>
					<img src=\"{$fbUserData['pic_square']}\" alt=\"\" />
				</div>
				<div class='desc'>
				{$this->lang->words['fb_logged_in_as']} <strong>{$fbUserData['name']}</strong>
				" . ((is_array($fbUserData['status']) AND $fbUserData['status']['message']) ? ("
					<br /><br />{$fbUserData['status']['message']}
				") : ("")) . "
				</div>
			</fieldset>
			<br />
			<fieldset class='row1'>
				<h3 class='ipsType_subtitle'>{$this->lang->words['fb_sync_options']}</h3>
				<ul>
					<li class='field checkbox'>
						<input class='input_check' type='checkbox' value='1' name='fbc_s_pic' value='1' " . (($this->memberData['fbc_s_pic'] > 0) ? ("checked='checked'") : ("")) . " id='fbc_s_pic' /><label for='fbc_s_pic'>{$this->lang->words['fb_sync_photo']}</label><br />
						<span class='desc lighter'>{$this->lang->words['fb_sync_photo_info']}</span>
					</li>
					" . (($this->memberData['can_updated_status']) ? ("<li class='field checkbox'>
						<input class='input_check' type='checkbox' value='1' name='fbc_s_status' value='1' " . (($this->memberData['fbc_s_status'] > 0) ? ("checked='checked'") : ("")) . " id='fbc_s_status' /><label for='fbc_s_status'>{$this->lang->words['fb_sync_status']}</label>
					</li>") : ("")) . "
					" . ((! $this->memberData['gbw_no_status_import']) ? ("<li class='field checkbox'>
						<input class='input_check' type='checkbox' value='1' name='fbc_si_status' value='1' " . (($this->memberData['fbc_si_status'] > 0) ? ("checked='checked'") : ("")) . " id='fbc_si_status' /><label for='fbc_si_status'>{$this->lang->words['fb_sync_status_in']}</label>
					</li>") : ("")) . "
				</ul>
				<p class='desc'>
					{$this->lang->words['fb_last_syncd']}
					" . (($this->memberData['fb_lastsync']) ? ("
						" . $this->registry->getClass('class_localization')->getDate($this->memberData['fb_lastsync'],"long", 0) . "
					") : ("
						{$this->lang->words['fb_never']}
					")) . "
				</p>
				<br />
				<p><input type='submit' class='input_submit alt' id='fbc_sync' value='{$this->lang->words['fb_sync_now']}' /></p>
			</fieldset>
			<br />
			<fieldset class='row1'>
				<h3 class='ipsType_subtitle'>{$this->lang->words['fbp_title']}</h3>
				<ul>
					<li class='field checkbox'>
						<img src=\"{$this->settings['img_url']}/" . (($perms['offline_access']) ? ("accept.png") : ("cross.png")) . "\" style='vertical-align:top' alt='' />&nbsp;{$this->lang->words['fbp_offline_access']}
						" . ((!$perms['offline_access']) ? ("&nbsp;(<fb:prompt-permission perms=\"offline_access\">{$this->lang->words['fbp_request']}</fb:prompt-permission>)") : ("")) . "
						<p class='desc' style='left:0px'>{$this->lang->words['fbp_offline_access_desc']}</p>
					</li>
					<li class='field checkbox'>
						<img src=\"{$this->settings['img_url']}/" . (($perms['email']) ? ("accept.png") : ("cross.png")) . "\" style='vertical-align:top' alt='' />&nbsp;{$this->lang->words['fbp_email_access']}
						" . ((!$perms['email']) ? ("&nbsp;(<fb:prompt-permission perms=\"email\">{$this->lang->words['fbp_request']}</fb:prompt-permission>)") : ("")) . "
						<p class='desc' style='left:0px'>{$this->lang->words['fbp_email_access_desc']}</p>
					</li>
					<li class='field checkbox'>
						<img src=\"{$this->settings['img_url']}/" . (($perms['publish_stream']) ? ("accept.png") : ("cross.png")) . "\" style='vertical-align:top' alt='' />&nbsp;{$this->lang->words['fbp_publish_stream']}
						" . ((!$perms['publish_stream']) ? ("&nbsp;(<fb:prompt-permission perms=\"publish_stream\">{$this->lang->words['fbp_request']}</fb:prompt-permission>)") : ("")) . "
						<p class='desc' style='left:0px'>{$this->lang->words['fbp_publish_stream_desc']}</p>
					</li>
					<li class='field checkbox'>
						<img src=\"{$this->settings['img_url']}/" . (($perms['read_stream']) ? ("accept.png") : ("cross.png")) . "\" style='vertical-align:top' alt='' />&nbsp;{$this->lang->words['fbp_read_stream']}
						" . ((!$perms['read_stream']) ? ("&nbsp;(<fb:prompt-permission perms=\"read_stream\">{$this->lang->words['fbp_request']}</fb:prompt-permission>)") : ("")) . "
						<p class='desc' style='left:0px'>{$this->lang->words['fbp_read_stream_desc']}</p>
					</li>
				</ul>
			</fieldset>
			<fieldset class='row1'>
				" . ((! $this->memberData['bw_local_password_set'] AND $this->memberData['members_created_remote']) ? ("
					<div class='message'>
						<strong>{$this->lang->words['remote_no_password']}</strong>
						<p>{$this->lang->words['remote_no_password_1']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=email", "public",'' ), "", "" ) . "'>{$this->lang->words['remote_no_password_2']}</a>
						</p>
					</div>
					<br />
				") : ("")) . "
				<h3 class='ipsType_subtitle'>{$this->lang->words['fb_disassociate']}</h3>
				<p class='desc'>{$this->lang->words['fb_disassociate_desc']}</p>
				" . ((strstr( $this->memberData['email'], '@proxymail.facebook.com' )) ? ("
					<div class='message'>
						<strong>{$this->lang->words['fb_using_email']}</strong>
						<p>{$this->lang->words['fb_disassociate_info_1']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=email", "public",'' ), "", "" ) . "'>{$this->lang->words['fb_disassociate_info_2']}</a> {$this->lang->words['fb_disassociate_info_3']}
						</p>
					</div>
					<br />
				") : ("")) . "
				<br />
				<p><input type='button' class='input_submit alt' id='fbc_remove' value='{$this->lang->words['fb_disassociate_now']}' /></p>
				<br />
			</fieldset>
		</div>
		<script type=\"text/javascript\">
		$('fbc_remove').observe( 'click', usercp_remove );
		function usercp_remove(){
			window.location = ipb.vars['base_url'] + 'app=core&module=usercp&tab=core&area=facebookRemove&do=custom&secure_key=' + ipb.vars['secure_hash'];
		}
		</script>")) . "")) . "";
return $IPBHTML;
}

/* -- membersIgnoredUsersForm --*/
function membersIgnoredUsersForm($members, $pagination) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['membersIgnoredUsersForm'] ) )
{
$count_f982ce5d7c39c2f5c500024497434494 = is_array($this->functionData['membersIgnoredUsersForm']) ? count($this->functionData['membersIgnoredUsersForm']) : 0;
$this->functionData['membersIgnoredUsersForm'][$count_f982ce5d7c39c2f5c500024497434494]['members'] = $members;
$this->functionData['membersIgnoredUsersForm'][$count_f982ce5d7c39c2f5c500024497434494]['pagination'] = $pagination;
}

if ( ! isset( $this->registry->templateStriping['members'] ) ) {
$this->registry->templateStriping['members'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<script type='text/javascript'>
//<![CDATA[
	ipb.templates['autocomplete_wrap'] = new Template(\"<ul id='#{id}' class='ipbmenu_content' style='width: 250px;'></ul>\");
	ipb.templates['autocomplete_item'] = new Template(\"<li id='#{id}'><img src='#{img}' alt='' width='#{img_w}' height='#{img_h}' />&nbsp;&nbsp;#{itemvalue}</li>\");
//]]>
</script>
<!--<h2 class='ipsType_subtitle'>{$this->lang->words['ucp_global_prefs']}</h2>-->
<div class='ipsPad'>
	<input type='checkbox' name='donot_view_sigs' id='donot_view_sigs' value='1' " . ((! $this->memberData['view_sigs']) ? ("checked='checked'") : ("")) . " />
	<label class='desc' for='donot_view_sigs'>{$this->lang->words['ucp_global_prefs_desc']}</label>
</div>
<br />
<h2 class='ipsType_subtitle'>{$this->lang->words['mi5_title']}</h2>
<br />
" . (($pagination) ? ("
	{$pagination}
	<br class='clear' />
	<br />
") : ("")) . "
<table class='ipb_table' summary=\"{$this->lang->words['ucp_ignored_users']}\">
	<tr class='header'>
		<th scope='col' width=\"30%\">{$this->lang->words['mi5_name']}</th>
		<th scope='col' width=\"30%\">{$this->lang->words['mi5_group']}</th>
		<th scope='col' class='short'>{$this->lang->words['ucp_ignore_posts']}</th>
		<th scope='col' class='short'>{$this->lang->words['ucp_ignore_sigs']}</th>
		<th scope='col' class='short'>{$this->lang->words['ucp_ignore_msgs']}</th>
		" . ((IPSLib::appIsInstalled('ipchat')) ? ("<th scope='col' class='short'>{$this->lang->words['ucp_ignore_chats']}</th>") : ("")) . "
		<th scope='col' class='short'>&nbsp;</th>
	</tr>
		" . ((count( $members )) ? ("".$this->__f__012bf16c6fec2d3e18a604cc379a678f($members,$pagination)."	") : ("<tr>
			<td colspan='" . ((IPSLib::appIsInstalled('ipchat')) ? ("7") : ("6")) . "' class='no_messages desc'>{$this->lang->words['no_ignored_users']}</td>
		</tr>")) . "
</table>
" . (($pagination) ? ("
	<br />
	{$pagination}
	<br class='clear' />
") : ("")) . "
<br />
<div class='row2 ipsPad'>
	<h3 class='ipsType_subtitle' style='margin-bottom: 15px'>{$this->lang->words['mi5_addem']}</h3>
	<input type=\"text\" class='input_text' size='40' name=\"newbox_1\" id=\"newbox_1\" value=\"{$this->request['newbox_1']}\" />
	 &nbsp;&nbsp;<strong>{$this->lang->words['ucp_add_prefix']}</strong>&nbsp;
	<input type='checkbox' class='input_check' name='ignore_topics' id='ignore_topics' value='1' />
	<label class='desc' for='ignore_topics'>{$this->lang->words['ucp_ignore_posts']}</label>
	&nbsp;&nbsp;
	<input type='checkbox' class='input_check' name='ignore_signatures' id='ignore_signatures' value='1' />
	<label class='desc' for='ignore_signatures'>{$this->lang->words['ucp_ignore_sigs']}</label>
	&nbsp;&nbsp;
	<input type='checkbox' class='input_check' name='ignore_messages' id='ignore_messages' value='1' />
	<label class='desc' for='ignore_messages'>{$this->lang->words['ucp_ignore_pc']}</label>
	" . ((IPSLib::appIsInstalled('ipchat')) ? ("
		&nbsp;&nbsp;
		<input type='checkbox' class='input_check' name='ignore_chats' id='ignore_chats' value='1' />
		<label class='desc' for='ignore_chats'>{$this->lang->words['ucp_ignore_chats']}</label>
	") : ("")) . "
</div>
<script type=\"text/javascript\">
	$('newbox_1').defaultize( \"{$this->lang->words['ucp_members_name']}\" );
	
	ipb.delegate.register('.delete_ignored', confirmIgnoredDelete);
	
	var confirmIgnoredDelete = function(e, elem){
		if( !confirm(\"{$this->lang->words['ignore_del_areusure']}\") ){
			Event.stop(e);
		}
	};
	
	document.observe(\"dom:loaded\", function(){
		var url = ipb.vars['base_url'] + 'app=core&module=ajax&section=findnames&do=get-member-names&secure_key=' + ipb.vars['secure_hash'] + '&name=';
		new ipb.Autocomplete( $('newbox_1'), { multibox: false, url: url, templates: { wrap: ipb.templates['autocomplete_wrap'], item: ipb.templates['autocomplete_item'] } } );
	});
</script>";
return $IPBHTML;
}


function __f__012bf16c6fec2d3e18a604cc379a678f($members, $pagination)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $members as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["members"] ) . "'>
				<td>
					<img src='{$member['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_mini left' style='margin-right: 5px' />
					<strong>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</strong><br />
					<span class='desc lighter'>{$this->lang->words['m_joined']} " . $this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0) . "</span>
				</td>
				<td>{$member['g_title']}</td>
				<td class='short'>
					" . (($member['ignoreData']['ignore_topics'] == 1) ? ("
						<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=topics", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:red'>{$this->lang->words['ucp_hide_disallow']}</span></a>
					") : ("
						<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=topics", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:green'>{$this->lang->words['ucp_hide_allow']}</span></a>
					")) . "
				</td>
				<td class='short'>
					" . ((! $this->memberData['view_sigs']) ? ("
						<span class='desc'>{$this->lang->words['ucp_ignore_sigs_glb']}</span>
					") : ("" . (($member['ignoreData']['ignore_signatures'] == 1) ? ("
							<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=signatures", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:red'>{$this->lang->words['ucp_hide_disallow']}</span></a>
						") : ("
							<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=signatures", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:green'>{$this->lang->words['ucp_hide_allow']}</span></a>
						")) . "")) . "
				</td>
				<td class='short'>
					" . (($member['ignoreData']['ignore_messages'] == 1) ? ("
						<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=messages", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:red'>{$this->lang->words['ucp_hide_disallow_msg']}</span></a>
					") : ("
						<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=messages", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:green'>{$this->lang->words['ucp_hide_allow_msg']}</span></a>
					")) . "
				</td>
				" . ((IPSLib::appIsInstalled('ipchat')) ? ("<td class='short'>
						" . (($member['ignoreData']['ignore_chats'] == 1) ? ("
							<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=chats", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:red'>{$this->lang->words['ucp_hide_disallow_msg']}</span></a>
						") : ("
							<a class='ipsButton_secondary' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=toggleIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}&amp;field=chats", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['click_toggle']}\"><span style='color:green'>{$this->lang->words['ucp_hide_allow_msg']}</span></a>
						")) . "
					</td>") : ("")) . "
				<td class='short'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=removeIgnoredUser&amp;do=saveIt&amp;id={$member['member_id']}", "public",'' ), "", "" ) . "\" class='ipsButton_secondary' class='delete_ignored'>{$this->lang->words['mi5_remove']}</a></td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- membersProfileCustomize --*/
function membersProfileCustomize($options, $input, $errors) {
$IPBHTML = "";
$IPBHTML .= "<script type='text/javascript' src='{$this->settings['public_dir']}js/3rd_party/colorpicker/jscolor.js'></script>
<h3 class='ipsType_subtitle ipsSettings_pagetitle'>{$this->lang->words['ucp_cust_bg']}</h3>
<p class='ipsType_pagedesc'>{$this->lang->words['ucp_customize_msg']}</p>
<br />
" . (($input['_preview']) ? ("<fieldset class='ipsSettings_section'>
		<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['ucp_cust_bg_preview']}</h3>
		<div>
			<div style='width:98%; height: 100px; background-image:url(\"{$input['_preview']}\");" . ((!$options['bg_tile']) ? ("background-repeat:no-repeat") : ("")) . "'>&nbsp;</div>
		</div>
	</fieldset>") : ("")) . "
<fieldset class='ipsSettings_section'>
	<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['ucp_cust_remove_t']}</h3>
	<div>
		<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=customize&amp;do=save&amp;secure_hash={$this->member->form_hash}&amp;bg_nix=1", "public",'' ), "", "" ) . "\" class=\"ipsButton_secondary\">{$this->lang->words['ucp_cust_remove']}</a>
	</div>
</fieldset>
" . (($this->memberData['gbw_allow_url_bgimage'] OR $this->memberData['gbw_allow_upload_bgimage']) ? ("<fieldset class='ipsSettings_section'>
		<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['ucp_cust_bg_title']}</h3>
		<div>
			<ul>
				" . (($this->memberData['gbw_allow_url_bgimage']) ? ("
					<li>
						<label for='bg_img' class='ipsSettings_fieldtitle'>{$this->lang->words['ucp_cust_bg_image']}</label>
						<input type=\"text\" name=\"bg_url\" id='bg_url' class='input_text' size='50' value=\"{$input['bg_url']}\" /><br />
						<p class='desc lighter'>{$this->lang->words['ucp_cust_bg_image_img_d']}</p>
					</li>
				") : ("")) . "" . (($this->memberData['gbw_allow_upload_bgimage']) ? ("
					<li>
						<label for='bg_img' class='ipsSettings_fieldtitle'>{$this->lang->words['ucp_cust_bg_image_upl']}</label>
						<input type=\"file\" name=\"bg_upload\" id='bg_upload' value=\"\" size=\"70\" /><br />
						<p class='desc lighter'>" . sprintf($this->lang->words['ucp_cust_bg_image_upl_d'], intval($this->memberData['g_max_bgimg_upload']) ? intval($this->memberData['g_max_bgimg_upload']) : $this->lang->words['pf__unlimited'] ) . "</p>
					</li>
				") : ("")) . "
			</ul>
		</div>
	</fieldset>
	<fieldset class='ipsSettings_section'>
		<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['background_options']}</h3>
		<div>
			<ul>
				" . (($this->memberData['gbw_allow_url_bgimage'] OR $this->memberData['gbw_allow_upload_bgimage']) ? ("<li>
						<input type=\"checkbox\" name=\"bg_tile\" id='bg_tile' class='input_check' value=\"1\" " . (($input['bg_tile']) ? ("checked='checked'") : ("")) . "/> &nbsp;<label for='bg_tile'>{$this->lang->words['ucp_cust_bg_tile']}</label>
					</li>") : ("")) . "
				<li>
					<label for='bg_color' class='ipsSettings_fieldtitle'>{$this->lang->words['ucp_cust_bg_color']} </label>
					#<input type=\"text\" name=\"bg_color\" id='bg_color' class='input_text color' size='10' value=\"{$input['bg_color']}\" />
					<p class=\"desc lighter\">{$this->lang->words['ucp_cust_bg_color_d']}</p>
				</li>
			</ul>
		</div>
	</fieldset>") : ("")) . "";
return $IPBHTML;
}

/* -- membersProfileForm --*/
function membersProfileForm($custom_fields='',$group_titles='',$day='',$mon='',$year='', $amEditor='', $times=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['membersProfileForm'] ) )
{
$count_d1f2932ba2086e1aee44fb3821596a3c = is_array($this->functionData['membersProfileForm']) ? count($this->functionData['membersProfileForm']) : 0;
$this->functionData['membersProfileForm'][$count_d1f2932ba2086e1aee44fb3821596a3c]['custom_fields'] = $custom_fields;
$this->functionData['membersProfileForm'][$count_d1f2932ba2086e1aee44fb3821596a3c]['group_titles'] = $group_titles;
$this->functionData['membersProfileForm'][$count_d1f2932ba2086e1aee44fb3821596a3c]['day'] = $day;
$this->functionData['membersProfileForm'][$count_d1f2932ba2086e1aee44fb3821596a3c]['mon'] = $mon;
$this->functionData['membersProfileForm'][$count_d1f2932ba2086e1aee44fb3821596a3c]['year'] = $year;
$this->functionData['membersProfileForm'][$count_d1f2932ba2086e1aee44fb3821596a3c]['amEditor'] = $amEditor;
$this->functionData['membersProfileForm'][$count_d1f2932ba2086e1aee44fb3821596a3c]['times'] = $times;
}
$IPBHTML .= "<h2 class='ipsType_subtitle ipsSettings_pagetitle'>{$this->lang->words['general_account_settings']}</h2>
<div class='ipsSettings'>
	" . ((IPSMember::canUploadPhoto( $this->memberData )) ? ("
		<fieldset class='ipsSettings_section'>
			<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['ucp_photo_title']}</h3>
			<div>
				<a data-clicklaunch=\"launchPhotoEditor\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=photo", "public",'' ), "", "" ) . "\" class='ipsButton_secondary'>{$this->lang->words['ucp_photo_change']}</a>
			</div>
		</fieldset>
	") : ("")) . "
	
	<fieldset class='ipsSettings_section'>
		<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['settings_time']}</h3>
		<div>
			<ul class='ipsForm ipsForm_horizontal'>
				<li class='ipsField'>
					<label for='timezone'>{$this->lang->words['ucp_timzeone']}</label>
					<select name='timeZone' id='timezone' class='input_select'>
					".$this->__f__1d128cfe54da0cf011e9c5472a79b504($custom_fields,$group_titles,$day,$mon,$year,$amEditor,$times)."					</select><br />
					<span class='desc lighter'>{$this->lang->words['settings_time_txt2']} " . $this->registry->getClass('class_localization')->getDate('{custom:now}',"LONG", 1) . "</span>
				</li>
				" . (($this->settings['time_dst_auto_correction']) ? ("<li>
						" . (($this->request['dsterror'] == 1) ? ("
							{$this->lang->words['dst_error']}
						") : ("")) . "
						<input type='checkbox' class='input_check' id='dst' name=\"dstCheck\" onclick='toggle_dst()' value=\"1\"" . (($this->memberData['members_auto_dst']) ? (" checked=\"checked\"") : ("")) . "/> &nbsp;<label for='dst'>{$this->lang->words['dst_correction_title']}</label>
					</li>
					<li id='dst-manual'>
						<input type='checkbox' class='input_check' id='dstManual' name=\"dstOption\" value=\"1\"" . (($this->memberData['dst_in_use']) ? (" checked=\"checked\"") : ("")) . "/> &nbsp;<label for='dstManual'>{$this->lang->words['ucp_dst_now']}</label>
					</li>") : ("<li>
						<input type='checkbox' class='input_check' id='dstManual' name=\"dstOption\" value=\"1\"" . (($this->memberData['dst_in_use']) ? (" checked=\"checked\"") : ("")) . "/> &nbsp;<label for='dstManual'>{$this->lang->words['ucp_dst_now']}</label><br />
						<span class='desc lighter'>{$this->lang->words['ucp_dst_effect']}</span>
					</li>")) . "
			</ul>
		</div>
	</fieldset>

	<fieldset class='ipsSettings_section'>
		<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['ucp_comments']}</h3>
		<div>
			<ul>
				<li>
					<input class='input_check' type='checkbox' value='1' name='pp_setting_count_comments' value='1' " . (($this->memberData['pp_setting_count_comments'] > 0) ? ("checked='checked'") : ("")) . " id='comments_enable' /> &nbsp;<label for='comments_enable'>{$this->lang->words['ucp_enable_comments']}</label>
				</li>
				<!-- proposing removal -->
				<li id='approve_comments'>
					<input class='input_check' type='checkbox' value='1'  name='pp_setting_moderate_comments' id='pp_setting_moderate_comments' " . (($this->memberData['pp_setting_moderate_comments']) ? ("checked=\"checked\"") : ("")) . " /> &nbsp;<label for='pp_setting_moderate_comments'>{$this->lang->words['op_dd_enabled']}</label>
				</li>
				<li>
					<input class='input_check' type='checkbox' value='1' name='pp_setting_count_visitors' value='1' " . (($this->memberData['pp_setting_count_visitors'] > 0) ? ("checked='checked'") : ("")) . " id='pp_latest_visitors' /> &nbsp;<label for='pp_latest_visitors'>{$this->lang->words['ucp_show_x_latest']}</label>
				</li>
			</ul>
		</div>
	</fieldset>
	" . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("<fieldset class='ipsSettings_section'>
			<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['ucp_friends']}</h3>
			<div>
				<ul>
					<li>
						<input class='input_check' type='checkbox' value='1' name='pp_setting_count_friends' value='1' " . (($this->memberData['pp_setting_count_friends'] > 0) ? ("checked='checked'") : ("")) . " id='friends_enable' /> &nbsp;<label for='friends_enable'>{$this->lang->words['ucp_show_friends_profile']}</label>
					</li>
					<li>
						<input class='input_check' type='checkbox' value='1' name='pp_setting_moderate_friends' id='pp_setting_moderate_friends' " . (($this->memberData['pp_setting_moderate_friends']) ? ("checked=\"checked\"") : ("")) . " /> &nbsp;<label for='pp_setting_moderate_friends'>{$this->lang->words['ucp_friend_approve']}</label>
					</li>
				</ul>
			</div>
		</fieldset>") : ("")) . "
	" . ((($day && $mon && $year) || ($this->settings['post_titlechange'] && ($this->memberData['posts'] >= $this->settings['post_titlechange']))) ? ("<fieldset class='ipsSettings_section'>
			<h3 class='ipsSettings_sectiontitle'>{$this->lang->words['profile_information']}</h3>
			<div>
				<ul>
					<li><a href='#' class='ipsButton_secondary' id='edit_aboutme'>{$this->lang->words['edit_my_about_me']}</a></li>
				</ul>
				" . (($this->settings['post_titlechange'] && ($this->memberData['posts'] >= $this->settings['post_titlechange'])) ? ("
					<br />
					<ul>
						<li>
							<label for='member_title' class='ipsSettings_fieldtitle'>{$this->lang->words['member_title']}</label>
							<input type='text' class='input_text' size='40' id='member_title' name='member_title' value='{$this->memberData['title']}' />
							<br />
							<span class='desc'>{$this->lang->words['member_title_desc']}</span>
						</li>
					</ul>
				") : ("")) . "
				" . (($day AND $mon AND $year) ? ("
					<br />
					<ul>
						<li>
							<label for='birthday' class='ipsSettings_fieldtitle'>{$this->lang->words['ucp_birthday_select']}</label>
							<select name=\"month\">&nbsp;
								".$this->__f__81dc07a0126175cfb3ba70bd98900bf6($custom_fields,$group_titles,$day,$mon,$year,$amEditor,$times)."							</select>			
							<select name=\"day\">&nbsp;
								".$this->__f__a336784d33589a78331ff8d6ae476b1e($custom_fields,$group_titles,$day,$mon,$year,$amEditor,$times)."							</select> 
							<select name=\"year\">&nbsp;
								".$this->__f__e7cf4745aea6cd37b772b049c6c70572($custom_fields,$group_titles,$day,$mon,$year,$amEditor,$times)."							</select> <br />
							<span class='desc'>{$this->lang->words['ucp_birthday_optional']}</span>
						</li>
					</ul>
				") : ("")) . "
			</div>
		</fieldset>") : ("")) . "
	
	" . ((count( $custom_fields )) ? ("".$this->__f__93ffb5e1b87d2eaeba9db2fea3ca434c($custom_fields,$group_titles,$day,$mon,$year,$amEditor,$times)."	") : ("")) . "
	
	<div id='aboutme_editor' style='display: none'>
		<h3>{$this->lang->words['cp_edit_aboutme']}</h3>
		<div>
			{$amEditor}
		</div>
		<div class='ipsForm_submit' style='margin-top: 0;'>
			<a href='#' id='close_aboutme_editor' class='ipsButton'>{$this->lang->words['finish_aboutme_edit']}</a>
		</div>
	</div>
	" . (($required_output) ? ("
		<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
			<h3>{$this->lang->words['ucp_required_info']}</h3>
			<ul>
				{$required_output}
			</ul>
		</fieldset>
	") : ("")) . "
	" . (($optional_output) ? ("
		<fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
			<h3>{$this->lang->words['ucp_other_info']}</h3>
			<ul>
				{$optional_output}
			</ul>
		</fieldset>
	") : ("")) . "
</div>
<script type=\"text/javascript\">
//<![CDATA[
function toggle_dst()
{
	if ( $( 'dst' ) )
	{
		if ( $( 'dst' ).checked ){
			$( 'dst-manual' ).style.display = 'none';
		} else {
			$( 'dst-manual' ).style.display = 'block';
		}
	}
}
toggle_dst();
//]]>
</script>";
return $IPBHTML;
}


function __f__1d128cfe54da0cf011e9c5472a79b504($custom_fields='',$group_titles='',$day='',$mon='',$year='', $amEditor='', $times=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $times as $off => $words )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<option value='{$off}' " . (($off == $this->memberData['time_offset']) ? (" selected=\"selected\"") : ("")) . ">{$words}</option>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__81dc07a0126175cfb3ba70bd98900bf6($custom_fields='',$group_titles='',$day='',$mon='',$year='', $amEditor='', $times=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $mon as $m )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
									<option value='{$m[0]}'" . (($m[0] == $this->memberData['bday_month']) ? (" selected=\"selected\"") : ("")) . ">{$m[1]}</option>
								
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__a336784d33589a78331ff8d6ae476b1e($custom_fields='',$group_titles='',$day='',$mon='',$year='', $amEditor='', $times=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $day as $d )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
									<option value='{$d[0]}'" . (($d[0] == $this->memberData['bday_day']) ? (" selected=\"selected\"") : ("")) . ">{$d[1]}</option>
								
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__e7cf4745aea6cd37b772b049c6c70572($custom_fields='',$group_titles='',$day='',$mon='',$year='', $amEditor='', $times=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $year as $y )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
									<option value='{$y[0]}'" . (($y[0] == $this->memberData['bday_year']) ? (" selected=\"selected\"") : ("")) . ">{$y[1]}</option>
								
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__1b98449e2b4b9eaf57e7525867500876($custom_fields='',$group_titles='',$day='',$mon='',$year='', $amEditor='', $times=array(),$cgroup='',$cfields='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $cfields as $fid => $cfield )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								{$cfield['field']}
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__93ffb5e1b87d2eaeba9db2fea3ca434c($custom_fields='',$group_titles='',$day='',$mon='',$year='', $amEditor='', $times=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $custom_fields as $cgroup => $cfields )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . ((count( $cfields )) ? ("
				<fieldset class='ipsSettings_section'>
					<h3 class='ipsSettings_sectiontitle'>{$group_titles[ $cgroup ]}</h3>
					<div>
						<ul>
							".$this->__f__1b98449e2b4b9eaf57e7525867500876($custom_fields,$group_titles,$day,$mon,$year,$amEditor,$times,$cgroup,$cfields)."						</ul>
					</div>
				</fieldset>
			") : ("")) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- membersSignatureForm --*/
function membersSignatureForm($editor_html="",$sig_restrictions=array(),$signature='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['membersSignatureForm'] ) )
{
$count_278d344ae0ff4fce33a7f3eafefb5eb3 = is_array($this->functionData['membersSignatureForm']) ? count($this->functionData['membersSignatureForm']) : 0;
$this->functionData['membersSignatureForm'][$count_278d344ae0ff4fce33a7f3eafefb5eb3]['editor_html'] = $editor_html;
$this->functionData['membersSignatureForm'][$count_278d344ae0ff4fce33a7f3eafefb5eb3]['sig_restrictions'] = $sig_restrictions;
$this->functionData['membersSignatureForm'][$count_278d344ae0ff4fce33a7f3eafefb5eb3]['signature'] = $signature;
}

if ( ! isset( $this->registry->templateStriping['usercp'] ) ) {
$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<h3 class='ipsType_subtitle'>{$this->lang->words['cp_current_sig']}</h3>
<div class='row1 signature'>{$signature}</div>
<br />
<input type='hidden' name='removeattachid' value='0' /><fieldset class='" .  IPSLib::next( $this->registry->templateStriping["usercp"] ) . "'>
	<h3 class='ipsType_subtitle'>{$this->lang->words['cp_edit_sig']}</h3>
	" . (($this->memberData['g_signature_limits']) ? ("<div class='ipsType_pagedesc'>
			{$this->lang->words['sig_restrictions_contain']}<br />
			<ul class='ipsList_inline' style='display: inline'>
				" . (($sig_restrictions[1] !== '') ? ("
					<li>&bull; " . sprintf( $this->lang->words['sig_max_imagesr'], $sig_restrictions[1] ) . "</li>
				") : ("
					<li>&bull; {$this->lang->words['sig_max_imagesr_nl']}</li>
				")) . "" . (($sig_restrictions[2] !== '' || $sig_restrictions[3] !== '') ? ("
					<li>&bull; " . sprintf( $this->lang->words['sig_max_imgsize'], $sig_restrictions[2], $sig_restrictions[3] ) . "</li>
				") : ("
					<li>&bull; {$this->lang->words['sig_max_imgsize_nl']}</li>
				")) . "" . (($sig_restrictions[4] !== '') ? ("
					<li>&bull; " . sprintf( $this->lang->words['sig_max_urls'], $sig_restrictions[4] ) . "</li>
				") : ("
					<li>&bull; {$this->lang->words['sig_max_urls_nl']}</li>
				")) . "" . (($sig_restrictions[5] !== '') ? ("
					<li>&bull; " . sprintf( $this->lang->words['sig_max_lines'], $sig_restrictions[5] ) . "</li>
				") : ("
					<li>&bull; {$this->lang->words['sig_max_lines_nl']}</li>
				")) . "
			</ul>
		</div><br />") : ("")) . "
	<div>
		{$editor_html}
	</div>
</fieldset>
" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "";
return $IPBHTML;
}

/* -- membersSignatureFormError --*/
function membersSignatureFormError($form) {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='row1'>
	<h3>{$this->lang->words['cp_edit_sig']}</h3>
	<br />
	" . (($form['_noPerm']) ? ("
		<p class='message error'>{$form['_noPerm']}</p>
	") : ("")) . "
</fieldset>";
return $IPBHTML;
}

/* -- membersTwitterConnect --*/
function membersTwitterConnect($isConnected, $twitterUser=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['membersTwitterConnect'] ) )
{
$count_c7c3e794c92eb373bbeeded96b575cd1 = is_array($this->functionData['membersTwitterConnect']) ? count($this->functionData['membersTwitterConnect']) : 0;
$this->functionData['membersTwitterConnect'][$count_c7c3e794c92eb373bbeeded96b575cd1]['isConnected'] = $isConnected;
$this->functionData['membersTwitterConnect'][$count_c7c3e794c92eb373bbeeded96b575cd1]['twitterUser'] = $twitterUser;
}

if ( ! isset( $this->registry->templateStriping['usercp'] ) ) {
$this->registry->templateStriping['usercp'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . ((! $isConnected) ? ("
<div>
	<p class='message'>{$this->lang->words['twitter_config']}</p>
	<br />
	<br />
	<a href=\"{$this->settings['_original_base_url']}/interface/twitter/index.php\"><img src=\"{$this->settings['img_url']}/twitter_connect.png\" alt=\"\" /></a>
	<br />
</div>
") : ("<div>
	<div class='ipsPad row2 clearfix'>
		" . (($twitterUser['profile_image_url']) ? ("	
			<img src=\"{$twitterUser['profile_image_url']}\" alt='' class='left ipsUserPhoto ipsUserPhoto_medium' />
			<div class='ipsBox_withphoto'>
		") : ("")) . "
		<h2 class='ipsType_subtitle'>
			{$this->lang->words['tc_logged_in_as']} <strong>{$twitterUser['screen_name']}</strong> ({$twitterUser['name']})
		</h2>
		" . ((is_array($twitterUser['status']) AND $twitterUser['status']['text']) ? ("
			<p class='desc'>{$twitterUser['status']['text']}</p>
		") : ("")) . "
		" . (($twitterUser['profile_image_url']) ? ("
			</div>
		") : ("")) . "
	</div>
	
	<br />
	<div class='right row2 ipsPad clearfix' style='width: 250px'>
		<span class='ipsType_smaller'>
			{$this->lang->words['tc_last_syncd']}
			" . (($this->memberData['tc_lastsync']) ? ("
				" . $this->registry->getClass('class_localization')->getDate($this->memberData['tc_lastsync'],"long", 0) . "
			") : ("
				{$this->lang->words['fb_never']}
			")) . "
		</span>
		<br /><br />
		<input type='submit' class='ipsButton_secondary' id='tc_sync' value='{$this->lang->words['fb_sync_now']}' />
		<br /><br />
		<input type='button' class='ipsButton_secondary' id='tc_remove_start' value='{$this->lang->words['tc_disassociate']}' />
		
		<div id='tc_remove_popup' style='display: none'>
			<h3>{$this->lang->words['tc_disassociate']}</h3>
			<div class='ipsPad'>
				<p>{$this->lang->words['twitter_revoke']}</p>
				<p class='desc'>{$this->lang->words['tc_disassociate_desc']}</p>
				<br />
				<input type='button' class='ipsButton' id='tc_remove' value='{$this->lang->words['tc_disassociate_now']}' />
			</div>
		</div>
	</div>
	<div>
		<h2 class='ipsType_subtitle'>{$this->lang->words['tc_sync_options']}</h2>
		<p class='desc'>{$this->lang->words['tc_sync_options_desc']}</p>
		<ul class='ipsForm ipsForm_vertical ipsPad'>
			<li class='ipsField ipsField_checkbox'>
				<input class='input_check' type='checkbox' value='1' name='tc_s_pic' value='1' " . (($this->memberData['tc_s_pic'] > 0) ? ("checked='checked'") : ("")) . " id='tc_s_pic' />
				<p class='ipsField_content'>
					<label for='tc_s_pic'>{$this->lang->words['tc_sync_photo']}</label><br />
					<span class='desc lighter'>{$this->lang->words['tc_sync_photo_info']}</span>
				</p>
			</li>
			<li class='ipsField ipsField_checkbox'>
				<input class='input_check' type='checkbox' value='1' name='tc_s_status' value='1' " . (($this->memberData['tc_s_status'] > 0) ? ("checked='checked'") : ("")) . " id='tc_s_status' />
				<p class='ipsField_content'>
					<label for='tc_s_status'>{$this->lang->words['tc_sync_status_out']}</label>
				</p>
			</li>
			" . ((! $this->memberData['gbw_no_status_import']) ? ("<li class='ipsField ipsField_checkbox'>
				<input class='input_check' type='checkbox' value='1' name='tc_si_status' value='1' " . (($this->memberData['tc_si_status'] > 0) ? ("checked='checked'") : ("")) . " id='tc_si_status' />
				<p class='ipsField_content'>
					<label for='tc_si_status'>{$this->lang->words['tc_sync_status_in']}</label>
				</p>
			</li>") : ("")) . "
			<li class='ipsField ipsField_checkbox'>
				<input class='input_check' type='checkbox' value='1' name='tc_s_aboutme' value='1' " . (($this->memberData['tc_s_aboutme'] > 0) ? ("checked='checked'") : ("")) . " id='tc_s_aboutme' />
				<p class='ipsField_content'>
					<label for='tc_s_aboutme'>{$this->lang->words['tc_sync_aboutme']}</label>
				</p>
			</li>
			" . (($this->memberData['gbw_allow_customization'] AND ! $this->memberData['bw_disable_customization']) ? ("<li class='ipsField ipsField_checkbox'>
					<input class='input_check' type='checkbox' value='1' name='tc_s_bgimg' value='1' " . (($this->memberData['tc_s_bgimg'] > 0) ? ("checked='checked'") : ("")) . " id='tc_s_bgimg' />
					<p class='ipsField_content'>
						<label for='tc_s_bgimg'>{$this->lang->words['tc_sync_bgimg']}</label>
					</p>
				</li>") : ("")) . "
		</ul>
	</div>
	
	" . ((! $this->memberData['bw_local_password_set'] AND $this->memberData['members_created_remote']) ? ("
		<div class='message'>
			<strong>{$this->lang->words['remote_no_password']}</strong>
			<p>{$this->lang->words['remote_no_password_1']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=email", "public",'' ), "", "" ) . "'>{$this->lang->words['remote_no_password_2']}</a>
			</p>
		</div>
		<br />
	") : ("")) . "
	
</div>
<script type=\"text/javascript\">
	$('tc_remove').observe( 'click', usercp_remove );
	function usercp_remove(){
		window.location = ipb.vars['base_url'] + 'app=core&module=usercp&tab=core&area=twitterRemove&do=custom&secure_key=' + ipb.vars['secure_hash'];
	}
	
	$('tc_remove_start').on('click', function(e){
		new ipb.Popup( 'sign_in_popup', {	type: 'pane',
											initial: $('tc_remove_popup').show(),
											hideAtStart: false,
											hideClose: false,
											modal: true,
											w: '600px' } );
	});
</script>")) . "";
return $IPBHTML;
}

/* -- notificationsForm --*/
function notificationsForm($config, $emailData) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['notificationsForm'] ) )
{
$count_d6b970cfbecf09e37895cafed85b7e34 = is_array($this->functionData['notificationsForm']) ? count($this->functionData['notificationsForm']) : 0;
$this->functionData['notificationsForm'][$count_d6b970cfbecf09e37895cafed85b7e34]['config'] = $config;
$this->functionData['notificationsForm'][$count_d6b970cfbecf09e37895cafed85b7e34]['emailData'] = $emailData;
}

$this->notifyGroups = array(
			'topics_posts' => array( 'followed_topics', 'followed_forums', 'followed_topics_digest', 'followed_forums_digest', 'post_quoted', 'new_likes' ),
			'status_updates' => array( 'reply_your_status', 'reply_any_status', 'friend_status_update' ),
			'profiles_friends' => array( 'profile_comment', 'profile_comment_pending', 'friend_request', 'friend_request_pending', 'friend_request_approve' ),
			'private_msgs' => array( 'new_private_message', 'reply_private_message', 'invite_private_message' )
		);
		
		$this->_config = $config;
		
		$this->_colCount = IPSMember::canReceiveMobileNotifications() ? 4 : 3;
		
		$this->_lastApp	= '';
$IPBHTML .= "<h3 class='ipsType_subtitle'>{$this->lang->words['board_prefs']}</h3>
<fieldset class='row1'>
	<h3>{$this->lang->words['privacy_settings']}</h3>
	<ul>
		<li class='field checkbox'>
			<input type='checkbox' class='input_check' id='admin_updates' name='admin_send' value='1'" . (($this->memberData['allow_admin_mails']) ? (" checked=\"checked\"") : ("")) . "/> <label for='admin_updates'>{$this->lang->words['admin_send']}</label><br />
			<span class='desc lighter'>{$this->lang->words['admin_send_desc']} {$time}</span>
		</li>
	</ul>
</fieldset>
<fieldset class='row1'>
	<span class='desc'><strong>{$this->lang->words['notifications_info_acp']}</strong></span>
		<table class='ipb_table notification_table'>
		<tr>
			<th>&nbsp;</th>
			<th style='width: 15%' class='short'><span class='notify_icon inline'>&nbsp;</span> {$this->lang->words['notify_type_inline']}</th>
			<th style='width: 15%' class='short'><span class='notify_icon email'>&nbsp;</span> {$this->lang->words['notify_type_email']}</th>
			" . ((IPSMember::canReceiveMobileNotifications()) ? ("
			<th style='width: 15%' class='short'><span class='notify_icon mobile'>&nbsp;</span> {$this->lang->words['notify_type_mobile']}</th>
			") : ("")) . "
		</tr>
		".$this->__f__66e5c7f83ac67962a9b88fc4f0b64d41($config,$emailData)."		".$this->__f__288abce8ed213b37e958034360474a23($config,$emailData)."	</table>
</fieldset>";
return $IPBHTML;
}


function __f__2545c54e2629250b2412c4686b86c370($config, $emailData,$groupKey='',$group='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $group as $key )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				" . (($this->_config[ $key ]) ? ("<tr>
						<td class='notify_title desc'>{$this->lang->words['notify__' . $key]}</td>
						<td class='short'>
							<span class='notify_icon inline' title='{$this->lang->words['notify_type_inline']}'>&nbsp;</span>
							" . (($groupKey == 'private_msgs') ? ("
								<input type='checkbox' class='input_check' name='' checked='checked' disabled='disabled' /> <span class='ipsBadge ipsBadge_lightgrey ipsType_smaller' data-tooltip='{$this->lang->words['nots_pm_whatthef']}'>{$this->lang->words['nots_pm_list']}</span>
							") : ("" . ((isset( $this->_config[$key]['options']['inline'] ) && $groupKey != 'private_msgs') ? ("<input type='checkbox' class='input_check' id='inline_{$key}' name=\"config_{$key}[]\" value=\"inline\"" . ((is_array($this->_config[$key]['defaults']) AND in_array('inline',$this->_config[$key]['defaults'])) ? (" checked=\"checked\"") : ("")) . " " . (($this->_config[$key]['disabled']) ? (" disabled=\"disabled\"") : ("")) . " />") : ("
									<input type='checkbox' class='input_check' name='' disabled='disabled' />
								")) . "")) . "
						</td>
						<td class='short'>
							<span class='notify_icon email' title='{$this->lang->words['notify_type_email']}'>&nbsp;</span>
							" . ((isset( $this->_config[$key]['options']['email'] )) ? ("<input type='checkbox' class='input_check' id='email_{$key}' name=\"config_{$key}[]\" value=\"email\"" . ((is_array($this->_config[$key]['defaults']) AND in_array('email',$this->_config[$key]['defaults'])) ? (" checked=\"checked\"") : ("")) . " " . (($this->_config[$key]['disabled']) ? (" disabled=\"disabled\"") : ("")) . " />") : ("
								<input type='checkbox' class='input_check' name='' disabled='disabled' />
							")) . "
						</td>
						" . ((IPSMember::canReceiveMobileNotifications()) ? ("<td class='short'>
							<span class='notify_icon mobile' title='{$this->lang->words['notify_type_mobile']}'>&nbsp;</span>
							" . ((isset( $this->_config[$key]['options']['mobile'] )) ? ("<input type='checkbox' class='input_check' id='mobile_{$key}' name=\"config_{$key}[]\" value=\"mobile\"" . ((is_array($this->_config[$key]['defaults']) AND in_array('mobile',$this->_config[$key]['defaults'])) ? (" checked=\"checked\"") : ("")) . " " . (($this->_config[$key]['disabled']) ? (" disabled=\"disabled\"") : ("")) . " />") : ("
								<input type='checkbox' class='input_check' name='' disabled='disabled' />
							")) . "
						</td>") : ("")) . "
					</tr>
					" . (($this->_config[$key]['_done'] = 1) ? ("") : ("")) . "") : ("")) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__66e5c7f83ac67962a9b88fc4f0b64d41($config, $emailData)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->notifyGroups as $groupKey => $group )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class='row2'>
				<td colspan='{$this->_colCount}'>
					<h3>{$this->lang->words[ 'notifytitle_' . $groupKey ]}</h3>
					" . (($groupKey == 'private_msgs') ? ("<p class='ipsPad_half checkbox ipsType_smaller desc '>
							<input type='checkbox' class='input_check' id='show_notification_popup' name='show_notification_popup' value='1' " . (($this->memberData['_cache']['show_notification_popup']) ? ("checked='checked'") : ("")) . " /> <label for='show_notification_popup' />{$this->lang->words['show_notification_popup']}</label><br />
						</p>") : ("")) . "
					" . (($groupKey == 'topics_posts') ? ("<p class='ipsPad_half checkbox ipsType_smaller desc '>
							<input class='input_check' type=\"checkbox\" id='auto_track' name=\"auto_track\" value=\"1\" {$emailData['auto_track']} /> <label for='auto_track' />{$this->lang->words['auto_track']}</label>
							<select name=\"trackchoice\" id='track_choice' class='input_select'>
								<option value=\"none\" {$emailData['trackOption']['none']}>{$this->lang->words['like_notify_freq_none']}</option>
								<option value=\"immediate\" {$emailData['trackOption']['immediate']}>{$this->lang->words['like_notify_freq_immediate']}</option>
								<option value=\"offline\" {$emailData['trackOption']['offline']}>{$this->lang->words['like_notify_freq_offline']}</option>
								<option value=\"daily\" {$emailData['trackOption']['daily']}>{$this->lang->words['like_notify_freq_daily']}</option>
								<option value=\"weekly\" {$emailData['trackOption']['weekly']}>{$this->lang->words['like_notify_freq_weekly']}</option>
							</select>
							" . (($emailData['auto_track'] AND $emailData['trackOption']['none']) ? ("
								<br />{$this->lang->words['auto_but_no_email']}
							") : ("")) . "
						</p>") : ("")) . "
				</td>
			</tr>
			".$this->__f__2545c54e2629250b2412c4686b86c370($config,$emailData,$groupKey,$group)."							
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__288abce8ed213b37e958034360474a23($config, $emailData)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->_config as $key => $_config )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . ((!isset( $_config['_done'] ) && $_config['_done'] != 1) ? ("" . (($this->_lastApp != $_config['app']) ? ("<tr class='row2'>
						<td colspan='{$this->_colCount}'>
							<h3>" . (($_config['app'] == 'core') ? ("{$this->lang->words['notifytitle_other']}") : ("" . IPSLib::getAppTitle( $_config['app'] ) . "")) . "</h3>
						</td>
					</tr>
					" . (($this->_lastApp = $_config['app']) ? ("") : ("")) . "") : ("")) . "
				<tr>
					<td class='notify_title desc'>{$this->lang->words['notify__' . $_config['key'] ]}</h3></td>
					<td class='short'>
						<span class='notify_icon inline' title='{$this->lang->words['notify_type_inline']}'>&nbsp;</span>
						" . ((isset( $_config['options']['inline'] )) ? ("<input type='checkbox' class='input_check' id='inline_{$key}' name=\"config_{$key}[]\" value=\"inline\"" . ((is_array($_config['defaults']) AND in_array('inline',$_config['defaults'])) ? (" checked=\"checked\"") : ("")) . " " . (($_config['disabled']) ? (" disabled=\"disabled\"") : ("")) . " />") : ("
							<input type='checkbox' class='input_check' name='' disabled='disabled' />
						")) . "
					</td>
					<td class='short'>
						<span class='notify_icon email' title='{$this->lang->words['notify_type_email']}'>&nbsp;</span>
						" . ((isset( $_config['options']['email'] )) ? ("<input type='checkbox' class='input_check' id='email_{$key}' name=\"config_{$key}[]\" value=\"email\"" . ((is_array($_config['defaults']) AND in_array('email',$_config['defaults'])) ? (" checked=\"checked\"") : ("")) . " " . (($_config['disabled']) ? (" disabled=\"disabled\"") : ("")) . " />") : ("
							<input type='checkbox' class='input_check' name='' disabled='disabled' />
						")) . "
					</td>
					" . ((IPSMember::canReceiveMobileNotifications()) ? ("<td class='short'>
						<span class='notify_icon mobile' title='{$this->lang->words['notify_type_mobile']}'>&nbsp;</span>
						" . ((isset( $_config['options']['mobile'] )) ? ("<input type='checkbox' class='input_check' id='mobile_{$key}' name=\"config_{$key}[]\" value=\"mobile\"" . ((is_array($this->_config[$key]['defaults']) AND in_array('mobile',$this->_config[$key]['defaults'])) ? (" checked=\"checked\"") : ("")) . " " . (($this->_config[$key]['disabled']) ? (" disabled=\"disabled\"") : ("")) . " />") : ("
							<input type='checkbox' class='input_check' name='' disabled='disabled' />
						")) . "
					</td>") : ("")) . "
				</tr>") : ("")) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- notificationsLog --*/
function notificationsLog($notifications, $error='', $pages='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['notificationsLog'] ) )
{
$count_a87ed71119d78ed42683cc1015067fac = is_array($this->functionData['notificationsLog']) ? count($this->functionData['notificationsLog']) : 0;
$this->functionData['notificationsLog'][$count_a87ed71119d78ed42683cc1015067fac]['notifications'] = $notifications;
$this->functionData['notificationsLog'][$count_a87ed71119d78ed42683cc1015067fac]['error'] = $error;
$this->functionData['notificationsLog'][$count_a87ed71119d78ed42683cc1015067fac]['pages'] = $pages;
}

if ( ! isset( $this->registry->templateStriping['notify'] ) ) {
$this->registry->templateStriping['notify'] = array( FALSE, "row2","row1");
}
$IPBHTML .= "" . (($error) ? ("
<p class='message error'>
	{$error}
</p>
") : ("" . (($this->request['confirm']) ? ("
	<p class='message'>
		{$this->lang->words['notify_rem_suc']}
	</p>
	") : ("")) . "")) . "
<div id='notificationlog'>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=removeNotifications&amp;do=remove", "public",'' ), "", "" ) . "\" id=\"checkBoxForm\" method=\"post\">
	<input type=\"hidden\" name=\"secure_key\" value=\"{$this->member->form_hash}\" />
	" . ((is_array( $notifications ) AND count( $notifications )) ? ("
		<div class='right ipsPad'>
			<input id=\"checkAllNotifications\" type=\"checkbox\" value=\"{$this->lang->words['check_all']}\" />
		</div>
		<h2 class='ipsType_subtitle'>{$this->lang->words['arch_notifications_head']}</h2>
		<br />
		<table class='ipb_table' summary=\"{$this->lang->words['notifications_table_head']}\">
			<tr class='header hide'>
				<th scope='col' width=\"5%\">&nbsp;</th>
				<th scope='col' width=\"70%\">{$this->lang->words['th_notification']}</th>
				<th scope='col' width=\"25%\">{$this->lang->words['th_sent']}</th>
				<th scope='col' align=\"center\" width=\"5%\" class='short'>&nbsp;</th>
			</tr>
						".$this->__f__0c8e4cbab0148d0f92b105a71fc2d6c6($notifications,$error,$pages)."		</table>
		<script type='text/javascript'>
			ipb.global.registerCheckAll('checkAllNotifications', 'checkall');
		</script>
	") : ("
		<p class='no_messages'>{$this->lang->words['notifications_none']}</p>
	")) . "
	" . ((count($notifications)) ? ("
		<br />
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;area=markNotification&amp;do=mark&amp;mark=all", "public",'' ), "", "" ) . "' id='ack_pm_notification' class='input_submit left'>{$this->lang->words['notificationlog_mar']}</a>
		<div class='moderation_bar rounded with_action'>
			<input type=\"submit\" class=\"input_submit alt\" value=\"{$this->lang->words['ndel_selected']}\" />
		</div>
		<br />
		<div class='topic_controls'>
			{$pages}
		</div>
	") : ("")) . "
</form>
</div>";
return $IPBHTML;
}


function __f__0c8e4cbab0148d0f92b105a71fc2d6c6($notifications, $error='', $pages='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $notifications as $notification )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<tr class='" .  IPSLib::next( $this->registry->templateStriping["notify"] ) . " " . ((!$notification['notify_read']) ? ("unread") : ("")) . "'>
					<td class=\"col_n_icon altrow short\">" . (($notification['notify_read']) ? ("" . $this->registry->getClass('output')->getReplacement("t_read_dot") . "") : ("" . $this->registry->getClass('output')->getReplacement("t_unread_dot") . "")) . "</td>
					<td class='col_n_photo short'>
						" . (($notification['member']['member_id']) ? ("
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$notification['member']['member_id']}", "public",'' ), "{$notification['member']['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink'>
								<img src='{$notification['member']['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
							</a>
						") : ("
							" . IPSMember::buildNoPhoto(0, 'mini' ) . "
						")) . "
					</td>
					<td>
						<h4>" . ((strpos( $notification['notify_title'], '<a href' ) === false) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=viewNotification&amp;do=view&amp;view={$notification['notify_id']}", "public",'' ), "", "" ) . "'>") : ("")) . "
						{$notification['notify_title']}
						" . ((strpos( $notification['notify_title'], '<a href' ) === false) ? ("</a>") : ("")) . "
						</h4>
					</td>
					<td class=\"col_n_date desc\"><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=viewNotification&amp;do=view&amp;view={$notification['notify_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_notification_logentry']}'>{$this->lang->words['th_sent']} " . $this->registry->getClass('class_localization')->getDate($notification['notify_sent'],"long", 0) . "</a></td>
					<td class=\"short col_n_mod\"><input class='input_check checkall' type=\"checkbox\" name=\"notifications[]\" value=\"{$notification['notify_id']}\" /></td>
				</tr>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showNotification --*/
function showNotification($notification) {
$IPBHTML = "";
$IPBHTML .= "<fieldset class='ipsPad row2'>
	<h2>{$notification['notify_title']}</h2>
	<ul>
		<li class='field'>
			{$this->lang->words['notifyview_date']}
			<em>" . $this->registry->getClass('class_localization')->getDate($notification['notify_sent'],"long", 0) . "</em>
		</li>
	</ul>
</fieldset>
<fieldset class='ipsPad row1'>
	<ul>
		<li class='field'>
			{$notification['notify_text']}
		</li>
	</ul>
</fieldset>
<fieldset class='ipsPad row2'>
	<ul>
		<li class='field short'>
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;area=notificationlog", "public",'' ), "", "" ) . "' class='input_submit'>{$this->lang->words['goback']}</a>	
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab=core&amp;area=removeNotifications&amp;do=remove&amp;secure_key={$this->member->form_hash}&amp;notifications[]={$notification['notify_id']}", "public",'' ), "", "" ) . "' class='input_submit delete'>{$this->lang->words['deletenotification']}</a>
		</li>
	</ul>
</fieldset>";
return $IPBHTML;
}

/* -- userCPTemplate --*/
function userCPTemplate($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_ucp', $this->_funcHooks['userCPTemplate'] ) )
{
$count_d7766fe8f9884eb7429f304742bd2e78 = is_array($this->functionData['userCPTemplate']) ? count($this->functionData['userCPTemplate']) : 0;
$this->functionData['userCPTemplate'][$count_d7766fe8f9884eb7429f304742bd2e78]['current_tab'] = $current_tab;
$this->functionData['userCPTemplate'][$count_d7766fe8f9884eb7429f304742bd2e78]['html'] = $html;
$this->functionData['userCPTemplate'][$count_d7766fe8f9884eb7429f304742bd2e78]['tabs'] = $tabs;
$this->functionData['userCPTemplate'][$count_d7766fe8f9884eb7429f304742bd2e78]['current_area'] = $current_area;
$this->functionData['userCPTemplate'][$count_d7766fe8f9884eb7429f304742bd2e78]['errors'] = $errors;
$this->functionData['userCPTemplate'][$count_d7766fe8f9884eb7429f304742bd2e78]['hide_form'] = $hide_form;
$this->functionData['userCPTemplate'][$count_d7766fe8f9884eb7429f304742bd2e78]['maxUpload'] = $maxUpload;
}

$hasMoreTabs = (is_array($tabs[ $current_tab ]['_menu']) && count($tabs[ $current_tab ]['_menu']) > 1) ? true : false;
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("ucp", "0" ) . "" . (($hide_form == 0) ? ("" . (($maxUpload) ? ("
		<form method='post' enctype=\"multipart/form-data\" action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}", "public",'' ), "", "" ) . "' id='userCPForm'>
	") : ("
		<form method='post' action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}", "public",'' ), "", "" ) . "' id='userCPForm'>
	")) . "") : ("")) . "
	<fieldset>
		<input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"{$maxUpload}\" />
		<input type='hidden' name='do' value='save' />
		<input type='hidden' name='secure_hash' value='{$this->member->form_hash}' />
		<input type='hidden' name='s' value='{$this->request['s']}' />
	</fieldset>
<h1 class='ipsType_pagetitle'>{$this->lang->words['ucp_title']}</h1>
<br />
" . ((count($tabs) > 1) ? ("
	<div class='maintitle ipsFilterbar clearfix'>
		<ul class='ipsList_inline'>
			".$this->__f__9355416d3db1d0ff32e7e947f58039c5($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."		</ul>
	</div>
") : ("")) . "
<div class='ipsBox'>
	<div class='ipsLayout" . (($hasMoreTabs) ? (" ipsLayout_withleft ipsLayout_smallleft ipsVerticalTabbed") : ("")) . " clearfix usercp_body'>
		" . (($hasMoreTabs) ? ("
			<div class='ipsVerticalTabbed_tabs ipsLayout_left' id='usercp_tabs'>
				<ul>
					".$this->__f__6f814ed5d1458d5f412d33e5b2c3bf31($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."				</ul>
			</div>
		") : ("")) . "
		<div class='" . (($hasMoreTabs) ? ("ipsVerticalTabbed_content ") : ("")) . "ipsLayout_content ipsBox_container' id='usercp_content'>
			<div class='ipsPad'>
				" . ((is_array( $errors ) AND count( $errors )) ? ("
					<p class='message error'>
						".$this->__f__7b8f052fe8e7418e2ac1d3809e1a8803($current_tab,$html,$tabs,$current_area,$errors,$hide_form,$maxUpload)."					</p>
					<br />
				") : ("")) . "
				" . (($this->request['saved'] == 1) ? ("
					<p class='message'>{$this->lang->words['ucp__settings_saved']}</p>
					<br />
				") : ("")) . "
				{$html}
		
				" . (($hide_form == 0) ? ("
				<fieldset class='submit'>
					<input type='submit' class='input_submit' name='submitForm' value='{$this->lang->words['ucp__save_changes']}' /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=usercp&amp;tab={$current_tab}&amp;area={$current_area}", "public",'' ), "", "" ) . "' title='{$this->lang->words['cancel_edit']}' class='cancel'>{$this->lang->words['cancel']}</a>
				</fieldset>
				") : ("")) . "
			</div>
		</div>
	</div>
</div>
" . (($hide_form == 0) ? ("
</form>
") : ("")) . "";
return $IPBHTML;
}


function __f__9355416d3db1d0ff32e7e947f58039c5($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $tabs as $tab_app => $tab )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				" . (($tab_app == $current_tab) ? ("<li class='active'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$tab_app}", "publicWithApp",'' ), "", "" ) . "\" title=\"" . (($tab_app=='core') ? ("{$this->lang->words['settings_for_coretab']}") : ("" . sprintf( $this->lang->words['settings_for_ucp'], $tab['_name'] ) . "")) . "\">{$tab['_name']}</a></li>") : ("<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$tab_app}", "publicWithApp",'' ), "", "" ) . "\" title=\"" . (($tab_app=='core') ? ("{$this->lang->words['settings_for_coretab']}") : ("" . sprintf( $this->lang->words['settings_for_ucp'], $tab['_name'] ) . "")) . "\">{$tab['_name']}</a></li>")) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__6f814ed5d1458d5f412d33e5b2c3bf31($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $tabs[ $current_tab ]['_menu'] as $idx => $item )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . (($item['area'] == $current_area OR $item['active']) ? ("
							<li class='active'><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$current_tab}&amp;{$item['url']}", "publicWithApp",'' ), "", "" ) . "\">{$item['title']}</a></li>
						") : ("
							<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=usercp&amp;tab={$current_tab}&amp;{$item['url']}", "publicWithApp",'' ), "", "" ) . "\">{$item['title']}</a></li>
						")) . "
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__7b8f052fe8e7418e2ac1d3809e1a8803($current_tab, $html, $tabs, $current_area, $errors=array(), $hide_form=0, $maxUpload=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $errors as $error )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
							{$error}<br />
						
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>