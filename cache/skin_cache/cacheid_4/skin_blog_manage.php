<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 4               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:07 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_blog_manage_4 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['create2'] = array('createerror','allowLinkedBlog','allowHostedBlog');
$this->_funcHooks['listCategories'] = array('isCategorized','managecategories');
$this->_funcHooks['manageComments'] = array('canModerateBlogCheck','recentLoop','hasPaginationTop','canModerateBlogStart','canModerateBlogEnd','hasComments','hasPaginationBottom');
$this->_funcHooks['manageDashboard'] = array('isExternal','blogNotEditor','blogNotEditorSettings','blogNotEditorRest','blogs','canModerateBlogCheck','recentLoop','blogcancreate','dasherror','canModerateBlogStart','canModerateBlogEnd','hasComments');
$this->_funcHooks['rssImportForm'] = array('settingserror');
$this->_funcHooks['settingsForm'] = array('viewlevelloop','isCreating','hasError','alloweditors','allowprivateclub','islocal','isremote','localhiddensetting','allowcreate','allowguests','allowguestcomments','disablecomments','trackcomments','allowrss','rssallowed','ping_services','allowtrackbacks','approvetrackbacks','selectskin','listview','groupperdate','grouppermonth','xmlrpcenabled');


}

/* -- create1 --*/
function create1($error) {
$IPBHTML = "";
$IPBHTML .= "" . ( method_exists( $this->registry->getClass('output')->getTemplate('blog_manage'), 'createSteps' ) ? $this->registry->getClass('output')->getTemplate('blog_manage')->createSteps(1) : '' ) . "
<br />
<h1 class='ipsType_pagetitle'>{$this->lang->words['ucp_create_blog']}</h1>
<br />
" . (($error) ? ("
	<p class='message error'>{$error}</p>
	<br />
") : ("")) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=dashboard&amp;act=create&amp;stage=2", "public",'' ), "false", "createblog" ) . "\" method=\"post\">
	<input type='hidden' name='form_hash' value='{$this->member->form_hash}' />
	<div class=''>
		<div class='ipsBox_container ipsPad'>
			{$this->lang->words['blog_terms']}
		</div>
		<br />
		<div class='ipsBox_container ipsPad'>
			<input type='checkbox' id='agree_cbox' class='input_check' name='agree_to_terms' value='1' />
			<label for='agree_cbox' class='clickable'>{$this->lang->words['blog_terms_agree']}</label>
		</div>
	</div>
	<fieldset class='submit'>
		<input type='submit' value='{$this->lang->words['blog_create_next']}' class='input_submit' />
	</fieldset>
</form>";
return $IPBHTML;
}

/* -- create2 --*/
function create2($blog=array(),$errors='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_manage', $this->_funcHooks['create2'] ) )
{
$count_7acc5a27f906fc03e4e4ee8e0a60748e = is_array($this->functionData['create2']) ? count($this->functionData['create2']) : 0;
$this->functionData['create2'][$count_7acc5a27f906fc03e4e4ee8e0a60748e]['blog'] = $blog;
$this->functionData['create2'][$count_7acc5a27f906fc03e4e4ee8e0a60748e]['errors'] = $errors;
}
$IPBHTML .= "" . ( method_exists( $this->registry->getClass('output')->getTemplate('blog_manage'), 'createSteps' ) ? $this->registry->getClass('output')->getTemplate('blog_manage')->createSteps(2) : '' ) . "
<br />
<h1 class='ipsType_pagetitle'>{$this->lang->words['ucp_create_blog']}</h1>
<br />
" . (($errors) ? ("
	<div class='message error'>
		{$errors}
	</div>
	<br />
") : ("")) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=dashboard&amp;act=create&amp;stage=3", "public",'' ), "false", "createblog" ) . "\" method=\"post\">
	<div class=''>
		<input type='hidden' name='agree_to_terms' value='1' />
		<input type='hidden' name='form_hash' value='{$this->member->form_hash}' />
		<div class='ipsBox_container ipsPad'>
			<ul class='ipsForm ipsForm_vertical'>
				<li class='ipsField " .  IPSLib::next( $this->registry->templateStriping["createForm"] ) . "'>
					<label class='ipsField_title'>{$this->lang->words['blog_name']} <span class='ipsForm_required'>*</span></label>
					<p class='ipsField_content'><input type='text' size='32' maxlength='128' name='blog_name' id='blog_name' value='{$blog['blog_name']}' class='input_text' /></p>
				</li>
				<li class='ipsField " .  IPSLib::next( $this->registry->templateStriping["createForm"] ) . "'>
					<span class='ipsField_title'>{$this->lang->words['blog_desc']}</span>
					<p class='ipsField_content'><input type='text' size='32' maxlength='250' name='blog_desc' id='blog_name' value='{$blog['blog_desc']}' class='input_text' /></p>
				</li>
				<li class='ipsField ipsField_select " .  IPSLib::next( $this->registry->templateStriping["createForm"] ) . "'>
					<label class='ipsField_title'>{$this->lang->words['blog_type']} <span class='ipsForm_required'>*</span></label>
					<p class='ipsField_content'>
						<select class='input_select' name='blog_type' id='blog_type'>
							" . (($this->memberData['g_blog_allowlocal']) ? ("<option value='local' {$blog['type_local']}>{$this->lang->words['blog_local']}</option>") : ("")) . "
							" . (($this->memberData['g_blog_allowcreate']) ? ("<option value='external' {$blog['type_external']}>{$this->lang->words['blog_external']}</option>") : ("")) . "
						</select>
					</p>
				</li>
			</ul>
		</div>
	</div>
	<fieldset class='submit'>
		<input type='submit' value=\"{$this->lang->words['blog_create_next']}\" class='input_submit' />
	</fieldset>
</form>";
return $IPBHTML;
}

/* -- createSteps --*/
function createSteps($active=1) {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsSteps clearfix'>
	<ul>
		<li class='" . (($active > 1) ? ("ipsSteps_done") : ("" . (($active == 1) ? ("ipsSteps_active") : ("")) . "")) . "'>
	       <strong class='ipsSteps_title'>" . sprintf( $this->lang->words['step'], 1 ) . "</strong>
	       <span class='ipsSteps_desc'>{$this->lang->words['blog_terms_titles']}</span>
	       <span class='ipsSteps_arrow'>&nbsp;</span>
		</li>
		<li class='" . (($active > 2) ? ("ipsSteps_done") : ("" . (($active == 2) ? ("ipsSteps_active") : ("")) . "")) . "'>
	       <strong class='ipsSteps_title'>" . sprintf( $this->lang->words['step'], 2 ) . "</strong>
	       <span class='ipsSteps_desc'>{$this->lang->words['blog_name']}</span>
	       <span class='ipsSteps_arrow'>&nbsp;</span>
		</li>
		<li class='" . (($active > 3) ? ("ipsSteps_done") : ("" . (($active == 3) ? ("ipsSteps_active") : ("")) . "")) . "'>
	       <strong class='ipsSteps_title'>" . sprintf( $this->lang->words['step'], 3 ) . "</strong>
	       <span class='ipsSteps_desc'>{$this->lang->words['_blog_settings']}</span>
	       <span class='ipsSteps_arrow'>&nbsp;</span>
		</li>
	</ul>
</div>";
return $IPBHTML;
}

/* -- listCategories --*/
function listCategories($blog=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_manage', $this->_funcHooks['listCategories'] ) )
{
$count_a9e19f0dd4eb62a51401e49217e40fd3 = is_array($this->functionData['listCategories']) ? count($this->functionData['listCategories']) : 0;
$this->functionData['listCategories'][$count_a9e19f0dd4eb62a51401e49217e40fd3]['blog'] = $blog;
}

if ( ! isset( $this->registry->templateStriping['categories'] ) ) {
$this->registry->templateStriping['categories'] = array( FALSE, "row2","row1");
}
$IPBHTML .= "<h1 class='ipsType_pagetitle left'>{$this->lang->words['blog_ucp_cats_manage']}</h1>
<ul class='topic_buttons right'>
	<li><a href='#' id='addCategory'>{$this->lang->words['form_add_cat']}</a></li>
</ul>
<br class='clear' />
<br />
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=categories&amp;act=manage&amp;blogid={$blog['blog_id']}", "public",'' ), "false", "manageblog" ) . "\" method=\"post\">
	<input type=\"hidden\" name=\"form_hash\" value=\"{$this->member->form_hash}\" />
	<h3 class='maintitle'>{$this->lang->words['blog_categories']}</h3>
	<table class=\"ipb_table\">
		<tr class=\"header\">
			<th>{$this->lang->words['blog_category']}</th>
			<th class='col_f_starter short'>{$this->lang->words['entries_fn']}</th>
			<th class='col_mod'></th>
		</tr>
				".$this->__f__35cd3f27ba1f35a7ba0bad72fd4a1927($blog)."	</table>
	<div class='bar altbar moderation_bar with_action'>
		<input type='submit' value='{$this->lang->words['com_delete']}' class=\"input_submit\" />
	</div>
</form>
<div id='addCategory_popup' style='display:none'>
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&module=manage&section=categories&act=add&blogid={$blog['blog_id']}", "public",'' ), "false", "manageblog" ) . "\" method=\"post\">
		<h3>{$this->lang->words['form_add_cat']}</h3>
		<div class=\"ipsBox ipsPad\" style='text-align:center'>
			<input class='input_text' type=\"text\" name=\"title\" size=\"35\" maxlength=\"32\" />
		</div>
		<fieldset class='submit'>
			<input type='submit' value='{$this->lang->words['blog_add']}' class='input_submit' />
		</fieldset>
	</form>
</div>
<script type='text/javascript'>
	$('addCategory').on('click', function(e){
		Event.stop(e);
		new ipb.Popup( 'see_all', {
						type: 'pane',
						initial: $('addCategory_popup').show(),
						hideAtStart: false,
						stem: false,
						hideClose: false,
						w: '350px',
						h: 300
					} );
	});
</script>";
return $IPBHTML;
}


function __f__35cd3f27ba1f35a7ba0bad72fd4a1927($blog=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $blog['_categories'] as $id => $category )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class=\"" .  IPSLib::next( $this->registry->templateStriping["categories"] ) . "\">
				<td><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&blogid={$blog['blog_id']}&cat={$id}", "public",'' ), "{$category['category_title_seo']}", "blogcatview" ) . "\">{$category['category_title']}</a></td>
				<td class='short'>{$category['count']}</td>
				<td>" . ((!empty($id)) ? ("<input type=\"checkbox\" name=\"categories[{$id}]\" />") : ("<input type='checkbox' disabled='disabled' />")) . "</td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- manageComments --*/
function manageComments($comments, $blog, $pagination) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_manage', $this->_funcHooks['manageComments'] ) )
{
$count_eddac5de1fdcc4362e2de9a4945467ee = is_array($this->functionData['manageComments']) ? count($this->functionData['manageComments']) : 0;
$this->functionData['manageComments'][$count_eddac5de1fdcc4362e2de9a4945467ee]['comments'] = $comments;
$this->functionData['manageComments'][$count_eddac5de1fdcc4362e2de9a4945467ee]['blog'] = $blog;
$this->functionData['manageComments'][$count_eddac5de1fdcc4362e2de9a4945467ee]['pagination'] = $pagination;
}
$IPBHTML .= "<h1 class='ipsType_pagetitle'>" . sprintf($this->lang->words['blog_comments_on'], $blog['blog_name']) . "</h1>
<br />
" . (($pagination) ? ("
	<div class='clearfix'>{$pagination}</div>
	<br />
") : ("")) . "
" . (($this->memberData['g_blog_allowownmod']) ? ("
	<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=comments&amp;act=moderate", "public",'' ), "false", "manageblog" ) . "\" id=\"checkBoxForm\" method=\"post\"> 
		<input type=\"hidden\" name=\"form_hash\" value=\"{$this->member->form_hash}\" />
		<input type='hidden' name='returnTo' value='app=blog&module=manage&section=comments&blogid={$blog['blog_id']}' />
") : ("")) . "
" . ((is_array( $comments ) && count( $comments )) ? ("<div class='ipsBox'>
		".$this->__f__96fad3255c3cf2804f4102023b837649($comments,$blog,$pagination)."	</div>
	" . (($this->memberData['g_blog_allowownmod']) ? ("
			<div class='bar altbar moderation_bar with_action'>
				<select name='modOption' class='input_select'>
					<option value='delete'>{$this->lang->words['bmod_delete']}</option>
					<option value='approve'>{$this->lang->words['bmod_approve']}</option>
					<option value='unapprove'>{$this->lang->words['bmod_unapprove']}</option>
				</select>
				<input type='submit' value='{$this->lang->words['ucp_cat_go']}' class='input_submit' />
			</div>
		</form>		
	") : ("")) . "") : ("
	<div class='no_messages'>{$this->lang->words['bucp_no_comments']}</div>
")) . "
<br />
" . (($pagination) ? ("
	<div class='clearfix'>{$pagination}</div>
") : ("")) . "
<br />";
return $IPBHTML;
}


function __f__96fad3255c3cf2804f4102023b837649($comments, $blog, $pagination)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $comments as $cid => $comment )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<div class='ipsBox_container ipsPad " . ((!$comment['comment_approved']) ? (" moderated' style='background-color: #f8f1f3") : ("")) . "'>
				" . (($this->memberData['g_blog_allowownmod']) ? ("
					<span class='ipsPad_half right'><input type='checkbox' name='modIds[{$comment['comment_id']}]' value='1' /></span>
				") : ("")) . "
				<div class='ipsComment_author'>
					<a class='ipsUserPhotoLink' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$comment['member_id']}", "public",'' ), "{$comment['members_seo_name']}", "showuser" ) . "'>
						<img src='{$comment['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
					</a>
					<br />
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($comment) : '' ) . "
					<br />
					<span class='desc'>
						{$comment['comment_date']}<br />
						{$this->lang->words['in']} <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;blogid={$comment['blog_id']}&amp;showentry={$comment['entry_id']}", "public",'' ), "{$comment['entry_name_seo']}", "showentry" ) . "#commentsStart\"><strong>{$comment['entry_name']}</strong></a>
					</span>
				</div>
				<div id='comment_7' class='ipsComment_comment'>
					{$comment['comment_text']}
				</div>
				<br class='clear' />
			</div>
			<br />
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- manageDashboard --*/
function manageDashboard($myBlogs=array(), $latestComments=array(), $error='', $dropdown='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_manage', $this->_funcHooks['manageDashboard'] ) )
{
$count_18068dc3028a957c744499ea272b8117 = is_array($this->functionData['manageDashboard']) ? count($this->functionData['manageDashboard']) : 0;
$this->functionData['manageDashboard'][$count_18068dc3028a957c744499ea272b8117]['myBlogs'] = $myBlogs;
$this->functionData['manageDashboard'][$count_18068dc3028a957c744499ea272b8117]['latestComments'] = $latestComments;
$this->functionData['manageDashboard'][$count_18068dc3028a957c744499ea272b8117]['error'] = $error;
$this->functionData['manageDashboard'][$count_18068dc3028a957c744499ea272b8117]['dropdown'] = $dropdown;
}

if ( ! isset( $this->registry->templateStriping['forums'] ) ) {
$this->registry->templateStriping['forums'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<script type='text/javascript'>	
ipb.blog.blogs = \$H({$dropdown});
ipb.lang['blog_error_deletecbox'] = \"{$this->lang->words['blog_error_deletecbox']}\";
ipb.templates['deleteDialogue'] = new Template(\"<h3 class='bar'>{$this->lang->words['bucpo_delete']}</h3><div class='ipsBox'><div class='message error'><strong>{$this->lang->words['delete_blog_confirm']}</strong><br />" . ((count($myBlogs) > 1) ? ("<input type='checkbox' id='delMove_#{id}' name='delMove' value='1' /> {$this->lang->words['delete_blog_move']} <select name='moveTo' id='delselect_#{id}'></select><br />") : ("")) . "<input type='checkbox' id='delConfirm_#{id}' value='1' /> {$this->lang->words['delete_blog_confirm_2']} <span id='delMore_#{id}'>{$this->lang->words['and_all_entries']}</span></div><div class='short ipsPad_half'><input type='button' class='input_submit' value='{$this->lang->words['delete']}' id='delButton_#{id}' /></div></div>\");
</script>
<h1 class='ipsType_pagetitle left'>{$this->lang->words['blog_manage']}</h1>
" . ((($this->memberData['g_blog_allowcreate'] || $this->memberData['g_blog_allowlocal']) && $this->registry->getClass('blogFunctions')->checkMaxBlogs()) ? ("
	<ul class='topic_buttons'>
		<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=dashboard&amp;act=create&amp;form_hash={$this->member->form_hash}", "public",'' ), "false", "createblog" ) . "'>{$this->lang->words['ucp_create_blog']}</a></li>
	</ul>
") : ("")) . "
<br class='clear' />
<br />
" . (($error) ? ("
	<div class=\"message error\">
		{$error}
	</div>
	<br />
") : ("")) . "
<div class='ipsLayout " . ((is_array( $latestComments ) && count( $latestComments )) ? ("ipsLayout_withright ipsLayout_bigright") : ("")) . " clearfix'>
	<div class='ipsLayout_content'>
		<h3 class='maintitle2'>{$this->lang->words['your_current_blogs']}</h3>
		<table class='ipb_table2' summary=\"{$this->lang->words['your_current_blogs']}\">
			<tr class='header'>
				<th scope='col' width='1%'>&nbsp;</th>
				<th scope='col' width='60%'>&nbsp;</th>
				<th scope='col' width='5%'>&nbsp;</th>
				<th scope='col' class='short space' width=\"10%\">{$this->lang->words['your_blogs_entries']}</th>
				<th scope='col' class='short space' width=\"10%\">{$this->lang->words['your_blogs_views']}</th>
				<th scope='col' class='short space' width=\"10%\">{$this->lang->words['your_blogs_comments']}</th>
			</tr>
						".$this->__f__277b6ab0f49dee5636e6535be2ce2ab5($myBlogs,$latestComments,$error,$dropdown)."		</table>
		<br />
	</div>
	" . ((is_array( $latestComments ) && count( $latestComments )) ? ("<div class='clear' style=\"width:532px;\">
			" . (($this->memberData['g_blog_allowownmod']) ? ("
				<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=comments&amp;act=moderate", "public",'' ), "false", "manageblog" ) . "\" id=\"checkBoxForm\" method=\"post\"> 
					<input type=\"hidden\" name=\"form_hash\" value=\"{$this->member->form_hash}\" />
					<input type='hidden' name='returnTo' value='app=blog&module=manage' />
			") : ("")) . "
			
			<h3 class=\"maintitle\">{$this->lang->words['blog_latest_comments']}</h3>
			<div class='backColor'>
				".$this->__f__6b2784b7e7eabdec87269e4403365eae($myBlogs,$latestComments,$error,$dropdown)."			</div>
			
			" . (($this->memberData['g_blog_allowownmod']) ? ("
					<div class='footerComent'>
						<select name='modOption' class='input_select'>
							<option value='delete'>{$this->lang->words['bmod_delete']}</option>
							<option value='approve'>{$this->lang->words['bmod_approve']}</option>
							<option value='unapprove'>{$this->lang->words['bmod_unapprove']}</option>
						</select>
						<input type='submit' value='{$this->lang->words['ucp_cat_go']}' class='input_submit' />
					</div>
				</form>
			") : ("")) . "
		</div>") : ("")) . "
</div>";
return $IPBHTML;
}


function __f__277b6ab0f49dee5636e6535be2ce2ab5($myBlogs=array(), $latestComments=array(), $error='', $dropdown='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $myBlogs as $bid => $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<tr class='" .  IPSLib::next( $this->registry->templateStriping["forums"] ) . "'>
					" . (($r['blog_type'] == 'external') ? ("
						<td class='altrow short'>
							<img src=\"{$this->settings['img_url']}/blog/blog_external.png\" alt='{$this->lang->words['bucp_btype_external']}' data-tooltip='{$this->lang->words['bucp_btype_external']}' />
						</td>
					") : ("
						<td class='altrow short'>
							<img src=\"{$this->settings['img_url']}/blog/blog_{$r['blog_view_level']}.png\" alt='{$this->lang->words['bucp_btype_'.$r['blog_view_level']]}' data-tooltip='{$this->lang->words['bucp_btype_'.$r['blog_view_level']]}' />
						</td>
					")) . "
					<td>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;blogid={$r['blog_id']}", "public",'' ), "{$r['blog_seo_name']}", "showblog" ) . "' id='blogLink_{$r['blog_id']}'><strong>{$r['blog_name']}</strong></a>
						" . (($r['_type'] == 'privateclub' OR $r['_type'] == 'editor') ? ("
							<span class='desc'>
								( {$this->lang->words['bucp_blog_owner']} " . IPSMember::makeProfileLink( $r['members_display_name'], $r['blog_owner_id'], $r['members_seo_name'] ) . " )
							</span>
						") : ("")) . "
					</td>
					<td>
						" . ((( $r['_type'] != 'privateclub' AND $r['blog_type'] != 'external' ) or ( $r['_type'] != 'editor' AND $r['blog_type'] != 'external' AND $r['_type'] != 'privateclub' AND $r['blog_type'] != 'external' ) or ( $r['_type'] != 'editor' AND $r['_type'] != 'privateclub' )) ? ("<a href='#' id='blog-{$r['blog_id']}__mod_options' class='ipsButton_secondary left ipbmenu clickable' />
								{$this->lang->words['blog_ucp_options']}
							</a>
							<ul class='ipbmenu_content' id='blog-{$r['blog_id']}__mod_options_menucontent' style='display:none'>
								" . (($r['_type'] != 'privateclub' AND $r['blog_type'] != 'external') ? ("
									<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=post&amp;section=post&amp;do=showform&amp;blogid={$r['blog_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['bucpo_postnew']}'><img src=\"{$this->settings['img_url']}/add.png\" alt='' /> <strong>{$this->lang->words['bucpo_postnew']}</strong></a></li>
								") : ("")) . "
								" . (($r['_type'] != 'editor' AND $r['blog_type'] != 'external' AND $r['_type'] != 'privateclub' AND $r['blog_type'] != 'external') ? ("<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=settings&amp;blogid={$r['blog_id']}", "public",'' ), "false", "manageblog" ) . "' title='{$this->lang->words['bucpo_settings']}'>" . $this->registry->getClass('output')->getReplacement("generic_cog") . " {$this->lang->words['bucpo_settings']}</a></li>
									<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=categories&amp;blogid={$r['blog_id']}", "public",'' ), "false", "manageblog" ) . "' title='{$this->lang->words['bucpo_categories']}'><img src=\"{$this->settings['img_url']}/blog/categories.png\" alt='' /> {$this->lang->words['bucpo_categories']}</a></li>
									<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=comments&amp;blogid={$r['blog_id']}", "public",'' ), "false", "manageblog" ) . "' title='{$this->lang->words['bucpo_comments']}'><img src=\"{$this->settings['img_url']}/blog/comments.png\" alt='' /> {$this->lang->words['bucpo_comments']}</a></li>
									" . (($this->settings['blog_allow_rssimport'] AND $this->memberData['g_blog_rsspergo']) ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=settings&act=rssimport&amp;blogid={$r['blog_id']}", "public",'' ), "false", "manageblog" ) . "' title='{$this->lang->words['bucpo_rssform']}'><img src=\"{$this->settings['img_url']}/blog/rss.png\" alt='' /> {$this->lang->words['bucpo_rssform']}</a></li>
									") : ("")) . "") : ("" . (($r['_type'] != 'editor' AND $r['_type'] != 'privateclub') ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=settings&amp;blogid={$r['blog_id']}", "public",'' ), "false", "manageblog" ) . "' title='{$this->lang->words['bucpo_settings']}'>" . $this->registry->getClass('output')->getReplacement("generic_cog") . " {$this->lang->words['bucpo_settings']}</a></li>
									") : ("")) . "")) . "
								" . (($this->memberData['g_blog_allowdelete'] AND $r['_type'] != 'group' AND $r['_type'] != 'editor' AND $r['_type'] != 'privateclub') ? ("
									<li><a class='__delete' id='blogDelete_{$r['blog_id']}' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=dashboard&act=delete&amp;blogid={$r['blog_id']}&amp;form_hash={$this->member->form_hash}", "public",'' ), "false", "manageblog" ) . "' title='{$this->lang->words['bucpo_delete']}'>" . $this->registry->getClass('output')->getReplacement("folder_delete") . " <strong>{$this->lang->words['bucpo_delete']}</strong></a></li>
								") : ("")) . "
							</ul>") : ("")) . "
					</td>
					<td class=\"short altrow\">" . intval($r['num_entries']) . "</td>
					<td class=\"short\">" . intval($r['blog_num_views']) . "</td>
					<td class=\"short altrow\">" . intval($r['blog_num_comments']) . "</td>
				</tr>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__6b2784b7e7eabdec87269e4403365eae($myBlogs=array(), $latestComments=array(), $error='', $dropdown='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $latestComments as $cid => $comment )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<div class='ipsBox_container ipsPad " . ((!$comment['comment_approved']) ? (" moderated' style='background-color: #f8f1f3") : ("")) . "'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$comment['member_id']}", "public",'' ), "{$comment['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left ipsPad_half'>
							<img src='{$comment['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
						</a>
						<div class='list_content desc'>
							" . (($this->memberData['g_blog_allowownmod']) ? ("
								<span class='ipsPad_half right'><input type='checkbox' name='modIds[{$comment['comment_id']}]' value='1' /></span>
							") : ("")) . "
							{$this->lang->words['by_ucfirst']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($comment) : '' ) . " {$this->lang->words['in']} <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;blogid={$comment['blog_id']}&amp;showentry={$comment['entry_id']}", "public",'' ), "{$comment['entry_name_seo']}", "showentry" ) . "#commentsStart\"><strong>{$comment['entry_name']}</strong></a>
							<br />" . $this->registry->getClass('class_localization')->getDate($comment['comment_date'],"short", 0) . "
						</div>
						<br />{$comment['comment_text']}
					</div>
					<br />
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- rssImportForm --*/
function rssImportForm($blog, $data, $error, $tagBox) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_manage', $this->_funcHooks['rssImportForm'] ) )
{
$count_5c863af152cf57fe18eb76b438c43e42 = is_array($this->functionData['rssImportForm']) ? count($this->functionData['rssImportForm']) : 0;
$this->functionData['rssImportForm'][$count_5c863af152cf57fe18eb76b438c43e42]['blog'] = $blog;
$this->functionData['rssImportForm'][$count_5c863af152cf57fe18eb76b438c43e42]['data'] = $data;
$this->functionData['rssImportForm'][$count_5c863af152cf57fe18eb76b438c43e42]['error'] = $error;
$this->functionData['rssImportForm'][$count_5c863af152cf57fe18eb76b438c43e42]['tagBox'] = $tagBox;
}
$IPBHTML .= "<h1 class='ipsType_pagetitle'>{$this->lang->words['bucpo_rssform']}</h1>
<br />
" . (($error) ? ("
	<div class=\"message error\">
  		{$error}
	</div>
	<br />
") : ("")) . "
<p class='message'>
	{$this->lang->words['bucpo_rss_import_t_desc']}
	" . (($data['rss_count']) ? ("
		<br />" . sprintf( $this->lang->words['bucpo_rss_stats'], intval( $data['rss_count'] ), $data['_rss_last_import']) . "") : ("")) . "
</p>
<br />
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=settings&amp;act=rssimport&amp;blogid={$blog['blog_id']}", "public",'' ), "false", "manageblog" ) . "\" method=\"post\">
	<input type=\"hidden\" name=\"form_hash\" value=\"{$this->member->form_hash}\" />
	<div class='ipsBox'>
		<div class='ipsBox_container ipsPad'>
			<ul class='ipsForm_horizontal ipsPad'>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['bucpo_rss_import_url']} <span class='ipsForm_required'>*</span></label>
					<p class='ipsField_content'>
						<input type='text' size='50' maxlength='128' id='rss_url' name='rss_url' value='{$data['rss_url']}' class='input_text' />
						<br /><span class='desc'>{$this->lang->words['bucpo_rss_import_urldesc']}
					</p>
				</li>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['bucpo_rss_tags']}</label>
					<p class='ipsField_content'>
						{$tagBox}
					</p>
				</li>
				<li class='ipsField ipsField_select'>
					<label class='ipsField_title'>{$this->lang->words['blog_categories']} <span class='ipsForm_required'>*</span></label>
					<p class='ipsField_content'>
						<select name='rss_cats[]' id='rss_cats' multiple='true' size='5'>
							" . ((is_array($data['_cats']) AND count($data['_cats'])) ? ("".$this->__f__4f8a0ea2dcf96531636ec85d22ce6158($blog,$data,$error,$tagBox)."							") : ("")) . "
						</select>
						<br /><span class='desc'>{$this->lang->words['bucpo_rss_cats']}</span>
					</p>
				</li>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['bucpo_rss_auth_u']}</label>
					<p class='ipsField_content'>
						<input type='text' size='32' maxlength='250' id='rss_auth_user' name='rss_auth_user' value='{$data['rss_auth_user']}' class='input_text' />
						<br /><span class='desc'>{$this->lang->words['bucpo_rss_desc']}</span>
					</p>
				</li>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['bucpo_rss_auth_p']}</label>
					<p class='ipsField_content'>
						<input type='password' size='32' maxlength='250' id='rss_auth_pass' name='rss_auth_pass' value='{$data['rss_auth_pass']}' class='input_text' />
						<br /><span class='desc'>{$this->lang->words['bucpo_rss_desc']}</span>
					</p>
				</li>
			</ul>
		</div>
	</div>
	<fieldset class='submit'>
		<input type='submit' value='{$this->lang->words['save_settings_c']}' class='input_submit' />
	</fieldset>
</form>";
return $IPBHTML;
}


function __f__4f8a0ea2dcf96531636ec85d22ce6158($blog, $data, $error, $tagBox)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['_cats'] as $cid => $cdata )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
									<option value=\"$cid\" " . (($cdata['_selected']) ? ("selected=\"selected\"") : ("")) . ">{$cdata['category_title']}</option>
								
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- settingsForm --*/
function settingsForm($blog, $error='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_blog_manage', $this->_funcHooks['settingsForm'] ) )
{
$count_c727538f11df119824043c3dab10ea2a = is_array($this->functionData['settingsForm']) ? count($this->functionData['settingsForm']) : 0;
$this->functionData['settingsForm'][$count_c727538f11df119824043c3dab10ea2a]['blog'] = $blog;
$this->functionData['settingsForm'][$count_c727538f11df119824043c3dab10ea2a]['error'] = $error;
}
$IPBHTML .= "<script type=\"text/javascript\">
	var manageMembersBox = {
		names: { 'editor': [], 'private': [] },
		create: function(textAreaId)
		{
			/* Hackish way to block IE7.. */
			if ( Prototype.Browser.IE7 )
			{
				return;
			}
			
			var managerId       = textAreaId + '_manager';
			var textAreaElement = $(textAreaId);
			var currentNames    = textAreaElement.getValue().replace('\\r', '').split('\\n');
			
			textAreaElement.up('tr').hide();
			
			/* Create input field */
			var addNameBox = new Element('input', {type: 'text', style: 'width: 75%', 'class': 'input_text', id: managerId + '_add'});
			var addNameBtn = new Element('input', {type: 'button', 'class': 'input_submit', value: '{$this->lang->words['editor_add']}', id: managerId + '_add_button'});
			var addNameCol = new Element('td', {'colspan': 2});
			var addNameRow = new Element('tr', {'class': 'row2 short'});
			
			Element.insert(managerId, addNameRow);
			Element.insert(addNameRow, addNameCol);
			Element.insert(addNameCol, addNameBox);
			Element.insert(addNameCol, '&nbsp;');
			Element.insert(addNameCol, addNameBtn);
			
			/* This MUST be run AFTER creating the input field */
			for(var i = 0; i < currentNames.length; i++)
			{
				if(currentNames[i] != '')
				{
					manageMembersBox.addName(managerId, currentNames[i]);
				}
			}
			
			var url = ipb.vars['base_url'] + 'app=core&module=ajax&section=findnames&do=get-member-names&secure_key=' + ipb.vars['secure_hash'] + '&name=';
			var autoComplete = new ipb.Autocomplete( $(managerId + '_add'), { multibox: false, url: url, templates: { wrap: ipb.templates['autocomplete_wrap'], item: ipb.templates['autocomplete_item'] } } );
			
			Event.observe(managerId + '_add_button', 'click', function(event)
			{
				var boxId = event.findElement().id.replace('_button', '');
				var mgrId = boxId.replace('_add', '');
				var textBox = $(boxId);
				manageMembersBox.addName(mgrId, textBox.getValue());
			});
		},
		
		addName: function (managerId, name)
		{
			// No name?
			if ( name == '' )
			{
				return;
			}
			
			var rowId = managerId + '_row_' + name.replace(/ /g, '_');
			var type  = managerId.indexOf('editor') == -1 ? 'private' : 'editor';
			
			// Same name?
			if ( $(rowId) )
			{
				return;
			}
			
			var managerEditorRow = new Element('tr', { 'id': rowId + '_remove', 'class': 'row1 editorRow' });
			var removeBadge      = new Element('span', {id: rowId, 'class': 'ipsBadge ipsBadge_red clickable'}).update('{$this->lang->words['remove']}');
			
			manageMembersBox.names[ type ].push( name );
			
			Element.insert(managerEditorRow, new Element('td', {width: 1}).insert(removeBadge));
			Element.insert(managerEditorRow, new Element('td', {'class': 'editorName'} ).update(name));
			Element.insert($(managerId), managerEditorRow);
			
			Event.observe(rowId, 'click', manageMembersBox.removeName);
			manageMembersBox.update(managerId);
		},
		
		removeName: function(event)
		{
			var elem = Event.findElement(event);
			var name = elem.id.replace( /blog_editor_list_manager_row_/, '' ).replace( /blog_private_list_manager_row_/, '' ); 
			
			var type = elem.id.indexOf('editor') == -1 ? 'private' : 'editor';
			
			$( elem.id + '_remove' ).remove();
			
			tmp = manageMembersBox.names[ type ];
			manageMembersBox.names[ type ] = [];
			
			tmp.each( function(row){
				var _check = row.replace(/ /g, '_');
				
				if ( _check != name )
				{
					manageMembersBox.names[ type ].push( row );
				}
			});
			
			var theId = event.findElement().id.substring(0, event.findElement().id.indexOf('_row'));
			manageMembersBox.update(theId);
		},
		
		update: function(managerId)
		{
			var managerElement = $(managerId);
			var textBoxElement = $(managerId.replace('_manager', ''));
			
			var type = managerId.indexOf('editor') == -1 ? 'private' : 'editor';
			
			textBoxElement.update( manageMembersBox.names[ type ].join(\"\\n\") );
			
			Debug.write( manageMembersBox.names[ type ].join(\"\\n\") );
		}
	};
	
	var activeTab = 1;
	var editorBoxCreated = false;
	function switchTab( tab )
	{
		$( 'tab-' + activeTab ).removeClassName('active');
		$( 'tab-' + tab ).addClassName('active');
		
		$( 'tab-content-' + activeTab ).hide();
		$( 'tab-content-' + tab ).show();
		
		if( tab == 3 && !$('blog_editor_list_manager_add_button') )
		{
			manageMembersBox.create('blog_editor_list');
		}
		else if( tab == 4 && !$('blog_private_list_manager_add_button') )
		{
			manageMembersBox.create('blog_private_list');
		}
		
		activeTab = tab;
	}
</script>
" . (($this->request['create']) ? ("
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('blog_manage'), 'createSteps' ) ? $this->registry->getClass('output')->getTemplate('blog_manage')->createSteps(3) : '' ) . "
	<br />
	<h1 class='ipsType_pagetitle'>{$this->lang->words['ucp_create_blog']}</h1>
	<br />
") : ("
	<h1 class='ipsType_pagetitle'>{$blog['blog_name']}</h1>
	<br />
")) . "
" . (($error) ? ("
	<p class='message error'>{$error}</p>
	<br />
") : ("")) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=manage&amp;section=settings&amp;blogid={$blog['blog_id']}", "public",'' ), "false", "manageblog" ) . "\" method=\"post\" id='settingForm'>
	<input type=\"hidden\" name=\"form_hash\" value=\"{$this->member->form_hash}\" />
	<input type=\"hidden\" name=\"create\" value=\"{$this->request['create']}\" />
	<div class='backColor'>
		<div class='ipsLayout ipsLayout_withleft ipsLayout_smallleft ipsVerticalTabbed'>
			<div class='ipsLayout_left ipsVerticalTabbed_tabs'>
				<ul>
	                    <li id='tab-1' onclick='switchTab(1)' class='active'><a href='javascript:void(0);'>{$this->lang->words['blog_main_header']}</a></li>
	                    " . (($blog['blog_type'] != 'external') ? ("<li id='tab-2' onclick='switchTab(2)'><a href='javascript:void(0);'>{$this->lang->words['blog_sharing']}</a></li>
	                    	" . (($this->memberData['g_blog_alloweditors']) ? ("<li id='tab-3' onclick='switchTab(3)'><a href='javascript:void(0);'>{$this->lang->words['blogset_editors']}</a></li>") : ("")) . "									
							" . (($this->memberData['g_blog_allowprivclub'] && $blog['blog_view_level'] == 'privateclub') ? ("<li id='tab-4' onclick='switchTab(4)'><a href='javascript:void(0);'>{$this->lang->words['blogset_privateclub']}</a></li>") : ("")) . "") : ("")) . "" . (($blog['blog_type'] != 'external') ? ("<li id='tab-5' onclick='switchTab(5)'><a href='javascript:void(0);'>{$this->lang->words['advanced_settings']}</a></li>") : ("")) . "
				</ul>
			</div>
			<div class='ipsLayout_content ipsVerticalTabbed_content ipsBox_container'>
				<div class='ipsPad' id='tab-content-1'>
					<table class=\"ipb_table\">
						<tr class=\"header\">
							<th width=\"50%\">
								{$this->lang->words['blog_basic_settings']}
							</th>
						</tr>
						<tr class=\"row1\">
							<td valign=\"top\">
								<fieldset>
								<ul>
									<li class='field'>
										<label for='blog_name'>{$this->lang->words['blog_name']}</label> <input type='text' size='32' maxlength='128' id='blog_name' name='blog_name' value='{$blog['blog_name']}' class='input_text' />
									</li>
									<li class='field'>
										<label for='blog_desc'>{$this->lang->words['blog_desc']}</label> <input type='text' size='32' maxlength='250' id='blog_desc' name='blog_desc' value='{$blog['blog_desc']}' class='input_text' />
									</li>
									" . (($this->memberData['g_blog_allowcreate'] AND $this->memberData['g_blog_allowlocal']) ? ("<li class='field' style='display:none'>
											<label for='blog_type'>{$this->lang->words['blog_type']}</label>
											<select class='input_select blogform' name='blog_type' id='blog_type'>
												<option value='local' " . (($blog['blog_type'] == 'local') ? ("selected='selected'") : ("")) . ">{$this->lang->words['blog_local']}</option>
												<option value='external' " . (($blog['blog_type'] == 'external') ? ("selected='selected'") : ("")) . ">{$this->lang->words['blog_external']}</option>
										  	</select>			
										</li>") : ("" . (($blog['blog_type'] == 'local') ? ("
											<input type=\"hidden\" name=\"blog_type\" value=\"local\" />
										") : ("
											<input type=\"hidden\" name=\"blog_type\" value=\"external\" />
										")) . "")) . "
									<li class='field' id='list_blog_view_level'>
										<label for='blog_view_level'>{$this->lang->words['blog_view_permissions']}</label> 
										<select class='input_select blogform' name='blog_view_level' id='blog_view_level'>
											".$this->__f__7ff67f232dfa8cf8767d2db72f6a93bc($blog,$error)."										</select>
									</li>
								</ul>
								</fieldset>
							</td>
						</tr>
						<tr class=\"header\">
<th>
								" . (($blog['blog_type'] == 'local') ? ("
								{$this->lang->words['blog_local_settings']}
								") : ("
								{$this->lang->words['blog_external_settings']}
								")) . "
							</th>
</tr>

<tr class=\"row1\">
							<td valign=\"top\">
								<fieldset id='blog_external_settings' " . (($blog['blog_type'] == 'local') ? ("style='display: none'") : ("")) . ">	
									<ul>
										<li class='field'>
											<input type='text' class='input_text' size='32' maxlength='128' name='blog_exturl' value='{$blog['blog_exturl']}' />
											<span class='desc'>{$this->lang->words['blog_external_url']}</span>
										</li>
									</ul>
								</fieldset>
								<fieldset id='blog_local_settings' " . (($blog['blog_type'] == 'external') ? ("style='display: none'") : ("")) . ">	
									<ul>
										<li class='field checkbox' id='list_allowguest'>
											<input type='checkbox' class='input_check blogform' name='blog_allowguests' id='blog_allowguests' value='1' " . (($blog['blog_allowguests']) ? ("checked='checked'") : ("")) . " /> <label for='blog_allowguests' class='blogform'>{$this->lang->words['blog_allowguest']}</label><br />
											<span class='desc'>{$blog['global_guestview']}</span>
										</li>
										<li class='field checkbox' id='list_allowguestcomments'>
											<input type='checkbox' class='input_check' name='blog_allowguestcomments' id='blog_allowguestcomments' value='1' " . (($blog['blog_settings']['allowguestcomments']) ? ("checked='checked'") : ("")) . " /> <label for='blog_allowguestcomments'>{$this->lang->words['blog_allowguestcomments']}</label><br />
											<span class='desc'>{$blog['global_guestcomment']}</span>
										</li>
										<li class='field checkbox'>
											<input type='checkbox' class='input_check' name='blog_disable_comments' id='blog_disable_comments' value='1' " . (($blog['blog_settings']['disable_comments']) ? ("checked='checked'") : ("")) . " /> <label for='blog_disable_comments'>{$this->lang->words['blog_disable_comments']}</label><br />
											<span class='desc'>{$this->lang->words['disable_comments_desc']}</span>
										</li>
				
										<li class='field checkbox'>
											<input type='checkbox' class='input_check' name='blog_trackcomments' id='blog_trackcomments' value='1' " . (($blog['blog_settings']['trackcomments']) ? ("checked='checked'") : ("")) . " /> <label for='blog_trackcomments'>{$this->lang->words['blog_trackcomments']}</label><br />
											<span class='desc'>{$this->lang->words['trackcomments_desc']}</span>
										</li>
										<li class='field'>
											<label for='blog_defaultstatus'>{$this->lang->words['blog_defaultstatus']}</label>
											<select class='input_select' name='blog_defaultstatus' id='blog_defaultstatus'>{$blog['blog_defaultstatus']}</select>
										</li>
										<li class='field'>
											<label for='blog_approvemode'>{$this->lang->words['blog_approvemode']}</label>
											<select class='input_select' name='blog_approvemode' id='blog_approvemode'>{$blog['approvemode']}</select>
										</li>
									</ul>
								</fieldset>
							</td>
							</tr>
					</table>
				</div>
				<div class='ipsPad' id='tab-content-2' style='display:none'>
					<table class=\"ipb_table\">
					" . (($this->settings['blog_allow_rss'] && $blog['blog_type'] != 'external') ? ("<tr class=\"header\">
							<th colspan=\"2\">
								{$this->lang->words['blog_view_rss_settings']}
							</th>
						</tr>
						<tr class=\"row1\">
							<td colspan=\"2\">
								<fieldset id='blog_rss_settings'>	
									<ul>
										<li class='field checkbox'>
											<input type='checkbox' class='input_check' name='blog_allowrss' id='blog_allowrss' value='1' " . (($blog['blog_settings']['allowrss']) ? ("checked='checked'") : ("")) . " /> <label for='blog_allowrss'>{$this->lang->words['blog_allowrss']}</label><br />
											<span class='desc'>{$this->lang->words['blog_allowrss_desc']}</span>
										</li>
										<li class='field'>
											<label for='blog_rss_feedburner'>{$this->lang->words['blog_rss_feedburner']}</label><input type='text' size='32' maxlength='128' name='blog_rss_feedburner' id='blog_rss_feedburner' value='{$blog['blog_settings']['rssfeedburner']}' class='input_text' /> <br />
											<span class='desc'>{$this->lang->words['blog_rss_feedburner_help']}</span>
										</li>
									</ul>
								</fieldset>
							</td>
						</tr>") : ("")) . "
					
					<tr class=\"header\">
						<th width=\"50%\">{$this->lang->words['blogping']}</th>
						<th>{$this->lang->words['blogset_trackbacks']}</th>
					</tr>
					
					<tr class=\"row1\">
						<td valign=\"top\">
							" . ((is_array( $blog['ping_options'] ) && count( $blog['ping_options'] ) && $this->settings['blog_allow_pingblogs'] && $blog['blog_type'] != 'external') ? ("
							
							<fieldset>
								<span class='desc'>{$this->lang->words['blogping_desc']}</span>
								<ul>
								".$this->__f__e22f7d1b0df1cb2109e50efcb21b5387($blog,$error)."								</ul>
							</fieldset>
							") : ("
								{$this->lang->words['pingservices_disabled']}
							")) . "
						</td>
						<td valign=\"top\">
							" . (($this->settings['blog_allow_trackback'] && $blog['blog_type'] != 'external') ? ("<fieldset>
								<ul>
									<li class='field checkbox'>
										<input type='checkbox' class='input_check' name='blog_allowtrackback' value='1' " . (($blog['blog_settings']['allowtrackback']) ? ("checked='checked'") : ("")) . " /> <label for='blog_allowtrackback'>{$this->lang->words['blog_allowtrackback']}</label>
										<span class='desc'>{$this->lang->words['allowtrackback_desc']}</span>
									</li>
									<li class='field checkbox'>
										<input type='checkbox' class='input_check' name='blog_approvetrackbacks' value='1' " . (($blog['blog_settings']['approve_trackbacks']) ? ("checked='checked'") : ("")) . " /> <label for='blog_approvetrackbacks'>{$this->lang->words['blog_approvetrackbacks']}</label>
										<span class='desc'>{$this->lang->words['blog_approvetrackbacks_desc']}</span>
									</li>
								</ul>
							</fieldset>") : ("
								{$this->lang->words['trackbacks_disabled']}
							")) . "
						</td>
					</tr>
				</table>
				</div>
				<div class='ipsPad' id='tab-content-3' style='display:none'>
					<table class='ipb_table' id=\"blog_editor_list_manager\">
						<tbody>
							<tr class=\"header\">
								<th colspan='2'>{$this->lang->words['ucp_editors_desc']}</th>
							</tr>
							<tr>
								<td colspan='2' class='row1'>
									<textarea id=\"blog_editor_list\" cols=\"80\" rows=\"7\" name=\"blog_editors\" class=\"input_text\">{$blog['blog_editors']}</textarea>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class='ipsPad' id='tab-content-4' style='display:none'>
					<table class='ipb_table' id=\"blog_private_list_manager\">
						<tbody>
							<tr class=\"header\">
								<th colspan='2'>{$this->lang->words['ucp_privateclub_desc']}</th>
							</tr>
							<tr>
								<td colspan='2' class='row1'>
									<textarea id=\"blog_private_list\" cols=\"80\" rows=\"7\" name=\"private_buddies\" class=\"input_text\">{$blog['private_buddies']}</textarea>
								</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class='ipsPad' id='tab-content-5' style='display:none'>
					<table class=\"ipb_table\">
						<tr class=\"header\">
							<th width=\"50%\">{$this->lang->words['blog_view_settings']}</th>
							<th width=\"50%\">{$this->lang->words['blogset_tbpings']}</th>
						</tr>
						<tr class=\"row1\">
							<td valign=\"top\">
							<fieldset id='blog_customize_settings'>	
								<ul>
								" . (($this->memberData['g_blog_allowskinchoose']) ? ("
									<li class='field'>
										<label for='blog_skin_id'>{$this->lang->words['blog_choose_skin']}</label>
										<select class='input_select' name='blog_skin_id' id='blog_skin_id'>{$blog['blog_skin_id']}</select>
									</li>
								") : ("")) . "
									<li class='field'>
										<label for='blog_viewmode'>{$this->lang->words['blog_viewmode']}</label>
										<select class='input_select' name='blog_viewmode' id='blog_viewmode'>
											<option value='list' " . (($blog['blog_settings']['viewmode'] == 'list') ? ("selected='selected'") : ("")) . ">{$this->lang->words['blog_viewlist']}</option>
											<option value='perdate' " . (($blog['blog_settings']['viewmode'] == 'perdate') ? ("selected='selected'") : ("")) . ">{$this->lang->words['blog_viewperdate']}</option>
											<option value='permonth' " . (($blog['blog_settings']['viewmode'] == 'permonth') ? ("selected='selected'") : ("")) . ">{$this->lang->words['blog_viewpermonth']}</option>
										</select>
									</li>
									<li class='field'>
										<label for='blog_entriesperpage'>{$this->lang->words['blog_entriesperpage']}</label>
										<select class='input_select' name='blog_entriesperpage' id='blog_entriesperpage'>{$blog['entriesperpage']}</select>			
									</li>
									<li class='field'>
										<label for='blog_commentsperpage'>{$this->lang->words['blog_commentsperpage']}</label>
										<select class='input_select' name='blog_commentsperpage' id='blog_commentsperpage'>{$blog['commentsperpage']}</select>
									</li>
								</ul>
							</fieldset>
							</td>
							<td valign=\"top\">
							" . (($this->settings['blog_allow_xmlrpc']) ? ("<fieldset>
								<h3></h3>
								<ul>
									<li class='field checkbox'>
										<input type='checkbox' class='input_check' name='blog_enable_xmlrpc' value='1' " . (($blog['blog_settings']['enable_xmlrpc']) ? ("checked='checked'") : ("")) . "> <label for='blog_enable_xmlrpc'>{$this->lang->words['blogxmlrpc_desc']}</label>
										<span class='desc'>
											{$this->lang->words['blogxmlrpc_desc_2']}<br />
											{$this->settings['board_url']}/interface/blog/xmlrpc.php<br /><br />
								  		 	&nbsp;{$this->lang->words['blog_enablexmlrpc']}
										</span>
									</li>
									<li class='field'>
										<label for='blog_xmlrpc_password'>{$this->lang->words['blog_xmlrpc_pass1']}</label>
										<input type='password' class='input_text' size='25' name='blog_xmlrpc_password' value='Iamapassword' />
									</li>
									<li class='field'>
										<label for='blog_xmlrpc_password'>{$this->lang->words['blog_xmlrpc_pass2']}</label>
										<input type='password' class='input_text' size='25' name='blog_xmlrpc_password2' value='Iamapassword' />
									</li>
								</ul>
							</fieldset>") : ("
								{$this->lang->words['xmlrpc_disabled']}
							")) . "
							</td>
						</tr>
					</table>
				</div>
			</div>
		</div>
		<br class='clear' />
	</div>
	<fieldset class='submit'>
		<input class=\"button input_submit\" type=\"submit\" value=\"{$this->lang->words['save_settings_c']}\" />
	</fieldset>
</form>";
return $IPBHTML;
}


function __f__7ff67f232dfa8cf8767d2db72f6a93bc($blog, $error='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $blog['view_level'] as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
												<option value='{$r[0]}'{$r[2]}>{$r['1']}</option>
											
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__e22f7d1b0df1cb2109e50efcb21b5387($blog, $error='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $blog['ping_options'] as $service )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
									<li class='field checkbox'>
										<input type='checkbox' class='input_check' name='blog_ping_{$service['blog_service_key']}' value='1' {$service['enabled']} /> &nbsp;
										<label for='blog_ping_{$service['blog_service_key']}'>{$service['blog_service_name']}</label>
									</li>
								
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>