<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 4               */
/* CACHE FILE: Generated: Thu, 30 Aug 2012 20:48:24 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_profile_4 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['acknowledgeWarning'] = array('valueIsPermanent','hasValue','options','memberNote','hasReasonAndContent','hasContent','hasReason','hasExpireDate','hasExpiration','hasPoints','isVerbalWarning');
$this->_funcHooks['addWarning'] = array('reasons','canUseAsBanGroup','banGroups','hasOtherOption','currentMq','currentRpa','currentSuspend');
$this->_funcHooks['customField__gender'] = array('male','female','nottelling','gender_set');
$this->_funcHooks['customField__generic'] = array('genericIsArray');
$this->_funcHooks['customFieldGroup__contact'] = array('cfieldgroups','cf_icon','cf_skype','cf_jabber','cf_website','cf_icq','cf_yahoo','cf_msn','cf_aim','cf_array','contact_field');
$this->_funcHooks['customizeProfile'] = array('hasBackgroundColor','backgroundIsFixed','hasBackgroundImage','hasBodyCustomization');
$this->_funcHooks['dnameWrapper'] = array('records','isAjaxModule','hasDnameHistory');
$this->_funcHooks['explainPoints'] = array('reasons','valueIsPermanent','hasValue','options','actions','hasActions');
$this->_funcHooks['friendsList'] = array('norep','posrep','negrep','repson','weAreSupmod','addfriend','notus','sendpm','blog','gallery','norep','posrep','negrep','repson','loopOnPending','friendsList','friendListPages','tabIsList','tabIsPending','friendListNone','hasFriendsList','friendListPagesBottom');
$this->_funcHooks['listWarnings'] = array('hasReason','warnings','paginationTop','canWarn','hasPaginationOrWarn','noWarnings','paginationBottom');
$this->_funcHooks['photoEditor'] = array('canHasUpload','canHasURL','allowGravatars','hasTwitter','hasFacebook');
$this->_funcHooks['profileModern'] = array('isMaxShowUser','friendsLoop','isMaxShowPhoto','friendsLoop','isLoadProfile');
$this->_funcHooks['reputationPage'] = array('isTheActiveApp','apps','hasMoreThanOneApp','hasResults');
$this->_funcHooks['showCard'] = array('friendSimilarLoop','cardIsFriend','cardSendPm','cardFriend');
$this->_funcHooks['statusReplies'] = array('canDelete','innerLoop');
$this->_funcHooks['statusUpdates'] = array('forSomeoneElse','noLocked','cImg','creatorText','canDelete','isLocked','canLock','hasMore','maxReplies','outerLoop');
$this->_funcHooks['statusUpdatesPage'] = array('tabactive','tabactive2','updateTwitter','updateFacebook','update','canCreate','hasUpdates');
$this->_funcHooks['tabFriends'] = array('friends','friends_loop','friends');
$this->_funcHooks['tabImportPhotos'] = array('isContainer','isAuth');
$this->_funcHooks['tabReputation'] = array('isTheActiveApp','apps','hasMoreThanOneApp','currentIsGiven','currentIsReceived','hasResults','bottomPagination');
$this->_funcHooks['tabReputation_calendar'] = array('postMid','postMember','postMid','postMember');
$this->_funcHooks['tabReputation_posts'] = array('notLastFtAsForum','topicsForumTrail','postMid','postMember','hasForumTrail');
$this->_funcHooks['tabSingleColumn'] = array('singleColumnUrl','singleColumnTitle','date');
$this->_funcHooks['tabStatusUpdates'] = array('updateTwitter','updateFacebook','update','canCreate','leave_comment','hasUpdates');


}

/* -- acknowledgeWarning --*/
function acknowledgeWarning($warning) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['acknowledgeWarning'] ) )
{
$count_880ef47603e5492a618c939f3600e927 = is_array($this->functionData['acknowledgeWarning']) ? count($this->functionData['acknowledgeWarning']) : 0;
$this->functionData['acknowledgeWarning'][$count_880ef47603e5492a618c939f3600e927]['warning'] = $warning;
}
$IPBHTML .= "<h1 class='ipsType_pagetitle'>{$this->lang->words['warnings_acknowledge']}</h1>
<br />
<p class='message'>{$this->lang->words['warnings_acknowledge_desc']}</p>
<br />
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&module=profile&section=warnings&do=do_acknowledge", "public",'' ), "", "" ) . "\" method=\"post\">
	<input type='hidden' name='member' value='{$warning['wl_member']}' />
	<input type='hidden' name='id' value='{$warning['wl_id']}' />
	<input type='hidden' name='secure_key' value='{$this->member->form_hash}' />
	<input type='hidden' name='ref' value='{$_SERVER['HTTP_REFERER']}' />
	<div class='ipsBox'>
		" . (($warning['wl_note_member']) ? ("
			<div class='ipsBox_container ipsPad'>
				{$warning['wl_note_member']}
			</div>
			<br />
		") : ("")) . "
		<div class='ipsBox_container ipsPad'>
			" . (($warning['wl_reason']) ? ("" . (($warning['content']) ? ("
					" . sprintf( $this->lang->words['warning_blurb_yy'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "", $warning['wl_reason']['wr_name'], $warning['content'] ) . "
				") : ("
					" . sprintf( $this->lang->words['warning_blurb_yn'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "", $warning['wl_reason']['wr_name'] ) . "
				")) . "") : ("" . (($warning['content']) ? ("
					" . sprintf( $this->lang->words['warning_blurb_ny'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "", $warning['content'] ) . "
				") : ("
					" . sprintf( $this->lang->words['warning_blurb_nn'], "" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "" ) . "
				")) . "")) . "
			<br />
			" . ((!$warning['wl_points'] and !$warning['wl_mq'] and !$warning['wl_rpa'] and !$warning['suspend']) ? ("
				{$this->lang->words['warnings_verbal_only']}
			") : ("" . (($warning['wl_points']) ? ("" . (($warning['wl_expire']) ? ("" . (($warning['wl_expire_date']) ? ("
							" . sprintf( $this->lang->words['warnings_given_points_expire'], $warning['wl_points'], $this->lang->getDate( $warning['wl_expire_date'], 'SHORT' ) ) . "<br />
						") : ("
							" . sprintf( $this->lang->words['warnings_given_points_expired'], $warning['wl_points'] ) . "<br />
					")) . "") : ("
						" . sprintf( $this->lang->words['warnings_given_points'], $warning['wl_points'] ) . "<br />
					")) . "") : ("")) . "
				".$this->__f__8904792583de8ef0db302d2d0ba44333($warning)."")) . "
		</div>
	</div>
	<fieldset class='submit'>
		<input type='submit' class='input_submit' value='{$this->lang->words['warnings_acknowledge_confirm']}' />
	</fieldset>
</form>";
return $IPBHTML;
}


function __f__8904792583de8ef0db302d2d0ba44333($warning)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( array( 'mq', 'rpa', 'suspend' ) as $k )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . (($warning[ 'wl_' . $k ]) ? ("" . (($warning[ 'wl_' . $k ] == -1) ? ("
							" . sprintf( $this->lang->words[ 'warnings_' . $k ], $this->lang->words['warnings_permanently'] ) . "<br />
						") : ("
							" . sprintf( $this->lang->words[ 'warnings_' . $k ], sprintf( $this->lang->words['warnings_for'], $warning[ 'wl_' . $k ], $this->lang->words[ 'warnings_time_' . $warning[ 'wl_' . $k . '_unit' ] ] ) ) . "<br />
						")) . "") : ("")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- addWarning --*/
function addWarning($member, $reasons, $errors, $editor, $currentPunishments) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['addWarning'] ) )
{
$count_59456848ebffcbc2b6723aabb8228aa2 = is_array($this->functionData['addWarning']) ? count($this->functionData['addWarning']) : 0;
$this->functionData['addWarning'][$count_59456848ebffcbc2b6723aabb8228aa2]['member'] = $member;
$this->functionData['addWarning'][$count_59456848ebffcbc2b6723aabb8228aa2]['reasons'] = $reasons;
$this->functionData['addWarning'][$count_59456848ebffcbc2b6723aabb8228aa2]['errors'] = $errors;
$this->functionData['addWarning'][$count_59456848ebffcbc2b6723aabb8228aa2]['editor'] = $editor;
$this->functionData['addWarning'][$count_59456848ebffcbc2b6723aabb8228aa2]['currentPunishments'] = $currentPunishments;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("warn", "0" ) . "
<h1 class='ipsType_pagetitle'>" . sprintf( $this->lang->words['warnings_add_for'], $member['members_display_name'] ) . "</h1>
<br />
<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;do=save&amp;member={$member['member_id']}", "public",'' ), "", "" ) . "' method='post'>
	<input type='hidden' name='from_app' value='{$this->request['from_app']}' />
	<input type='hidden' name='from_id1' value='{$this->request['from_id1']}' />
	<input type='hidden' name='from_id2' value='{$this->request['from_id2']}' />
	<div class='ipsBox'>
		<div class='ipsBox_container ipsPad'>
			<ul class='ipsForm ipsForm_vertical'>
				<li class='ipsField ipsField_select'>
					<label class='ipsField_title'>{$this->lang->words['warnings_reason']} <span class='ipsForm_required'>*</span></label>
					<div class='ipsField_content'>
						<select name='reason' id='reason-select'>
							<option value=''>{$this->lang->words['warnings_reason_select']}</option>
							".$this->__f__033074b77ad27e3d0d3680767cda7eef($member,$reasons,$errors,$editor,$currentPunishments)."							" . (($this->settings['warnings_enable_other'] or $this->memberData['g_access_cp']) ? ("
								<option value='0'>{$this->lang->words['warnings_reasons_other']}</option>
							") : ("")) . "
						</select>
						<span class='error'>{$errors['reason']}</span>
					</div>
				</li>
				<li class='ipsField ipsField_select' style='display:none' id='points-li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_points']} <span class='ipsForm_required'>*</span></label>
					<div class='ipsField_content'>
						<input name='points' class='input_text' size='5' id='points-field' />
						<a href='#' id='points-explain-button'><img src=\"{$this->settings['img_url']}/help.png\" alt='{$this->lang->words['warnings_points_explain']}' title='{$this->lang->words['warnings_points_explain']}' /></a>
						<span class='error'>{$errors['points']}</span>
					</div>
				</li>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['warnings_note_member']}</label>
					<div class='ipsField_content'>
						{$editor['member']}
						<span class='error'>{$errors['note_member']}</span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_note_member_desc']}</span>
					<br />
					<span class='error'>{$errors['note_member']}</span>
				</li>
				<li class='ipsField'>
					<label class='ipsField_title'>{$this->lang->words['warnings_note_mods']}</label>
					<div class='ipsField_content'>
						{$editor['mod']}
						<span class='error'>{$errors['note_member']}</span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_note_mods_desc']}</span>
					<br />
					<span class='error'>{$errors['note_member']}</span>
				</li>
				<li class='ipsField' id='punishment_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment']}</label>
					<div class='ipsField_content'>
						<p class='message unspecific'>
							<span id='specified-punishment'>{$this->lang->words['warnings_punishment_select']}</span>
							<br />
							<a href='#' class='ipsButton_secondary' id='change-punishment-button' style='display:none'>{$this->lang->words['warnings_verbal_change']}</a>
						</p>
					</div>
				</li>
				<li class='ipsField' style='display:none' id='mq_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment_mq']}</label>
					<div class='ipsField_content'>
						" . (($currentPunishments['mq']) ? ("
							<span class='error'>{$currentPunishments['mq']}{$this->lang->words['warnings_already_change']}<br /></span>
						") : ("")) . "
						<input type='checkbox' name='mq_perm' id='mq_perm' /> <label for='mq_perm'>{$this->lang->words['warnings__permanently']}</label>
						<span id='mq_time'>{$this->lang->words['warnings_or_for']} <input name='mq' class='input_text' size='2' id='mq_input' /> <select name='mq_unit' id='mq_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select></span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_punishment_content_desc']}</span>
				</li>
				<li class='ipsField' style='display:none' id='rpa_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment_rpa']}</label>
					<div class='ipsField_content'>
						" . (($currentPunishments['rpa']) ? ("
							<span class='error'>{$currentPunishments['rpa']}{$this->lang->words['warnings_already_change']}<br /></span>
						") : ("")) . "
						<input type='checkbox' name='rpa_perm' id='rpa_perm' /> <label for='rpa_perm'>{$this->lang->words['warnings__permanently']}</label>
						<span id='rpa_time'>{$this->lang->words['warnings_or_for']} <input name='rpa' class='input_text' size='2' id='rpa_input' /> <select name='rpa_unit' id='rpa_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select></span>
					</div>
					<span class='desc'>{$this->lang->words['warnings_punishment_content_desc']}</span>
				</li>
				<li class='ipsField' style='display:none' id='suspend_li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_punishment_suspend']}</label>
					<div class='ipsField_content'>
						" . (($currentPunishments['suspend']) ? ("
							<span class='error'>{$currentPunishments['suspend']}{$this->lang->words['warnings_already_change']}<br /></span>
						") : ("")) . "
						<input type='checkbox' name='suspend_perm' id='suspend_perm' /> <label for='suspend_perm'>{$this->lang->words['warnings__permanently']}</label>
						<span id='suspend_time'>{$this->lang->words['warnings_or_for']} <input name='suspend' class='input_text' size='2' id='suspend_input' /> <select name='suspend_unit' id='suspend_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select></span>
						<br />
						<input type='checkbox' name='ban_group' id='ban_group' value='1' /> <label for='ban_group'>{$this->lang->words['warnings_ban_group']}</label>
						<select name='ban_group_id'>
						".$this->__f__8ec62f7e37cd47d0de28d0d9db26f6d2($member,$reasons,$errors,$editor,$currentPunishments)."						</select>
					</div>
				</li>
				<li class='ipsField' style='display:none' id='remove-points-li'>
					<label class='ipsField_title'>{$this->lang->words['warnings_remove_points']}</label>
					<div class='ipsField_content'>
						{$this->lang->words['warnings_after']} <input name='remove' class='input_text' size='2' id='remove_input' /> <select name='remove_unit' id='remove_unit_select'><option value='d'>{$this->lang->words['warnings_time_d']}</option><option value='h'>{$this->lang->words['warnings_time_h']}</option></select>
						<br />
						<span class='desc'>{$this->lang->words['warnings_remove_points_desc']}</span>
					</div>
				</li>
			</ul>
		</div>
	</div>
	<fieldset class='submit'>
		<input type='submit' class='input_submit' value='{$this->lang->words['warnings_add']}' />
	</fieldset>
</form>";
return $IPBHTML;
}


function __f__033074b77ad27e3d0d3680767cda7eef($member, $reasons, $errors, $editor, $currentPunishments)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $reasons as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								<option value='{$r['wr_id']}'>{$r['wr_name']}</option>
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__8ec62f7e37cd47d0de28d0d9db26f6d2($member, $reasons, $errors, $editor, $currentPunishments)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->caches['group_cache'] as $id => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
							" . ((!$data['g_access_cp'] && !$data['g_is_supmod'] && ($id != $this->settings['guest_group'])) ? ("
								<option value=\"{$id}\">{$data['g_title']}</option>
							") : ("")) . "
						
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- customField__gender --*/
function customField__gender($f) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customField__gender'] ) )
{
$count_172f91c46660c73c871f40ef72ed0baa = is_array($this->functionData['customField__gender']) ? count($this->functionData['customField__gender']) : 0;
$this->functionData['customField__gender'][$count_172f91c46660c73c871f40ef72ed0baa]['f'] = $f;
}
$IPBHTML .= "<span class='row_title'>{$f->raw_data['pf_title']}</span>
<div class='row_data'>
	" . (($f->value) ? ("" . (($f->value == 'm') ? ("
			<img src='{$this->settings['img_url']}/profile/male.png' alt='{$this->lang->words['js_gender_male']}' /> {$this->lang->words['js_gender_male']}
		") : ("")) . "
	
		" . (($f->value == 'f') ? ("
			<img src='{$this->settings['img_url']}/profile/female.png' alt='{$this->lang->words['js_gender_female']}' /> {$this->lang->words['js_gender_female']}
		") : ("")) . "
	
		" . (($f->value != 'f' AND $f->value != 'm') ? ("
			<img src='{$this->settings['img_url']}/profile/mystery.png' alt='{$this->lang->words['js_gender_mystery']}' /> {$f->parsed[0]}
		") : ("")) . "") : ("
		<img src='{$this->settings['img_url']}/profile/mystery.png' alt='{$this->lang->words['js_gender_mystery']}' /> {$this->lang->words['js_gender_mystery']}
	")) . "
</div>";
return $IPBHTML;
}

/* -- customField__generic --*/
function customField__generic($f) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customField__generic'] ) )
{
$count_06ba17a2d873f83f24ec4614fed0e208 = is_array($this->functionData['customField__generic']) ? count($this->functionData['customField__generic']) : 0;
$this->functionData['customField__generic'][$count_06ba17a2d873f83f24ec4614fed0e208]['f'] = $f;
}
$IPBHTML .= "" . (($f->parsed != '') ? ("<span class='row_title'>{$f->raw_data['pf_title']}</span>
	<div class='row_data'>
		" . ((is_array($f->parsed)) ? ("
			" . implode( '<br />', $f->parsed ) . "
		") : ("
			{$f->parsed}
		")) . "
	</div>") : ("")) . "";
return $IPBHTML;
}

/* -- customFieldGroup__contact --*/
function customFieldGroup__contact($f) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customFieldGroup__contact'] ) )
{
$count_a14406a00e68b48b4f84f4217c15d73d = is_array($this->functionData['customFieldGroup__contact']) ? count($this->functionData['customFieldGroup__contact']) : 0;
$this->functionData['customFieldGroup__contact'][$count_a14406a00e68b48b4f84f4217c15d73d]['f'] = $f;
}
$IPBHTML .= "" . (($f->parsed) ? ("<li>
	<span class='row_title'>{$f->raw_data['pf_title']}</span>
	<span class='row_data'>
		" . (($f->raw_data['pf_icon']) ? ("<img src='{$this->settings['public_dir']}{$f->raw_data['pf_icon']}' alt='{$f->raw_data['pf_title']}' />&nbsp;") : ("")) . "
		" . ((is_array( $f->parsed )) ? ("
			".$this->__f__4d0c197df49d3b7ba0978c2a631e644c($f)."		") : ("" . (($f->raw_data['pf_key'] == 'aim') ? ("
				<a class='url' href='aim:goim?screenname={$f->parsed}'>{$f->parsed}</a>
			") : ("" . (($f->raw_data['pf_key'] == 'msn') ? ("
					<a class='url' href='msnim:chat?contact={$f->parsed}'>{$f->parsed}</a>
				") : ("" . (($f->raw_data['pf_key'] == 'yahoo') ? ("
						<a class='url' href='ymsgr:sendIM?{$f->parsed}'>{$f->parsed}</a>
					") : ("" . (($f->raw_data['pf_key'] == 'icq') ? ("
							<a class='url' type=\"application/x-icq\" href='http://www.icq.com/people/cmd.php?uin={$f->parsed}&amp;action=message'>{$f->parsed}</a>
						") : ("" . (($f->raw_data['pf_key'] == 'website') ? ("
								<a class='url uid' rel=\"external me\" href='{$f->parsed}'>{$f->parsed}</a>
							") : ("" . (($f->raw_data['pf_key'] == 'jabber') ? ("
									<a class='url' href='xmpp:{$f->parsed}'>{$f->parsed}</a>
								") : ("" . (($f->raw_data['pf_key'] == 'skype') ? ("
										<a class='url' href='skype:{$f->parsed}?call'>{$f->parsed}</a>
									") : ("
										{$f->parsed}
									")) . "")) . "")) . "")) . "")) . "")) . "")) . "")) . "
	</span>
</li>") : ("")) . "";
return $IPBHTML;
}


function __f__4d0c197df49d3b7ba0978c2a631e644c($f)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $f->parsed as $value )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				{$value}
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- customizeProfile --*/
function customizeProfile($member) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['customizeProfile'] ) )
{
$count_2b2370a0488262bd82b7e23120ae6aff = is_array($this->functionData['customizeProfile']) ? count($this->functionData['customizeProfile']) : 0;
$this->functionData['customizeProfile'][$count_2b2370a0488262bd82b7e23120ae6aff]['member'] = $member;
}
$IPBHTML .= "<style type=\"text/css\">
/* Overwrite some of the standard IPB rules */
/* Content, is the main page under the header */
#content {
	max-width:87%;
	min-width: 980px;
	margin-left: auto;
	margin-right: auto;
	background: transparent url(\"{style_images_url}/opacity70.png\");
	background: rgba(255,255,255,0.3);
}
#profile_background {
	background: transparent url(\"{style_images_url}/opacity70.png\");
	background: rgba(255,255,255,0.3);
}
.topic_buttons li.non_button a, #footer_utilities {
	background: #fff !important;
}
" . (($member['customization']['bg_color'] OR $member['customization']['_bgUrl']) ? ("body {
	" . (($member['customization']['bg_color']) ? ("
		background-color: #{$member['customization']['bg_color']};
	") : ("")) . "
	" . (($member['customization']['_bgUrl']) ? ("background-image: url(\"{$member['customization']['_bgUrl']}\");
		" . ((! $member['customization']['bg_tile']) ? ("
			background-position: 0px 0px;
			background-attachment: fixed;
			background-repeat: no-repeat;
		") : ("
			background-position: 0px 0px;
			background-attachment: fixed;
			background-repeat: repeat;
		")) . "") : ("")) . "
}") : ("")) . "
</style>
<script type=\"text/javascript\">
	ipb.profile.customization = 1;
</script>";
return $IPBHTML;
}

/* -- dnameWrapper --*/
function dnameWrapper($member_name="",$records=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['dnameWrapper'] ) )
{
$count_2f393b05fe2f99a503216bb8f648a67b = is_array($this->functionData['dnameWrapper']) ? count($this->functionData['dnameWrapper']) : 0;
$this->functionData['dnameWrapper'][$count_2f393b05fe2f99a503216bb8f648a67b]['member_name'] = $member_name;
$this->functionData['dnameWrapper'][$count_2f393b05fe2f99a503216bb8f648a67b]['records'] = $records;
}

if ( ! isset( $this->registry->templateStriping['dname'] ) ) {
$this->registry->templateStriping['dname'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . (($this->request['module']=='ajax') ? ("
	<h3>{$this->lang->words['dname_window_title']} {$member_name}</h3>
") : ("
	<h3 class='maintitle'>{$this->lang->words['dname_window_title']} {$member_name}</h3>
")) . "
<table class='ipb_table'>
	<tr class='header'>
		<th scope='col' style='width: 33%'>{$this->lang->words['dname_name_from']}</th>
		<th scope='col' style='width: 33%'>{$this->lang->words['dname_name_to']}</th>
		<th scope='col' style='width: 33%'>{$this->lang->words['dname_date']}</th>
	</tr>
	" . ((is_array($records) AND count($records)) ? ("
		    	".$this->__f__9e3eba018e6b49f88cf1a055d05dcd84($member_name,$records)."	") : ("
		<tr>
			<td colspan='3' class='no_messages'>{$this->lang->words['dname_no_history']}</td>
		</tr>
    ")) . "
</table>";
return $IPBHTML;
}


function __f__9e3eba018e6b49f88cf1a055d05dcd84($member_name="",$records=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $records as $row )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr class='" .  IPSLib::next( $this->registry->templateStriping["dname"] ) . "'>
		 	<td>{$row['dname_previous']}</td>
		 	<td><strong>{$row['dname_current']}</strong></td>
		 	<td class='altrow'>" . $this->registry->getClass('class_localization')->getDate($row['dname_date'],"short", 0) . "</td>
		</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- explainPoints --*/
function explainPoints($reasons, $actions) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['explainPoints'] ) )
{
$count_cccd7bc0ca01fee41df0e4d0c350fc4f = is_array($this->functionData['explainPoints']) ? count($this->functionData['explainPoints']) : 0;
$this->functionData['explainPoints'][$count_cccd7bc0ca01fee41df0e4d0c350fc4f]['reasons'] = $reasons;
$this->functionData['explainPoints'][$count_cccd7bc0ca01fee41df0e4d0c350fc4f]['actions'] = $actions;
}
$IPBHTML .= "<h3>{$this->lang->words['warnings_points']}</h3>
<div class='ipsPad'>
	{$this->lang->words['warnings_points_explain_1']}
</div>
<table class='ipb_table'>
	<tr class='header'>
		<th>{$this->lang->words['warnings_reason']}</th>
		<th>{$this->lang->words['warnings_points']}</th>
	</tr>
	".$this->__f__35da21d3aee33eb05e889709a1d39677($reasons,$actions)."</table>
" . ((!empty( $actions )) ? ("
	<div class='ipsPad'>
		{$this->lang->words['warnings_points_explain_2']}
	</div>
	<table class='ipb_table'>
		<tr class='header'>
			<th>{$this->lang->words['warnings_points']}</th>
			<th>{$this->lang->words['warnings_punishment']}</th>
		</tr>
		".$this->__f__aa75184546467f8c5eedb255a4b177f4($reasons,$actions)."	</table>
") : ("")) . "";
return $IPBHTML;
}


function __f__35da21d3aee33eb05e889709a1d39677($reasons, $actions)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $reasons as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<tr>
			<td>{$r['wr_name']}</td>
			<td>{$r['wr_points']}</td>
		</tr>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__b1bca513b1d6a28cf780357ca1103851($reasons, $actions,$a='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( array( 'mq', 'rpa', 'suspend' ) as $k )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . (($a[ 'wa_' . $k ]) ? ("" . (($a[ 'wa_' . $k ] == -1) ? ("
								" . sprintf( $this->lang->words[ 'warnings_' . $k ], $this->lang->words['warnings_permanently'] ) . "<br />
							") : ("
								" . sprintf( $this->lang->words[ 'warnings_' . $k ], sprintf( $this->lang->words['warnings_for'], $a['wa_' . $k ], $this->lang->words[ 'warnings_time_' . $a[ 'wa_' . $k . '_unit' ] ] ) ) . "<br />
							")) . "") : ("")) . "
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__aa75184546467f8c5eedb255a4b177f4($reasons, $actions)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $actions as $a )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr>
				<td>{$a['wa_points']}</td>
				<td>
					".$this->__f__b1bca513b1d6a28cf780357ca1103851($reasons,$actions,$a)."				</td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- friendsList --*/
function friendsList($friends, $pages) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['friendsList'] ) )
{
$count_c0a3529d6d89f77ae76833c8ee03029b = is_array($this->functionData['friendsList']) ? count($this->functionData['friendsList']) : 0;
$this->functionData['friendsList'][$count_c0a3529d6d89f77ae76833c8ee03029b]['friends'] = $friends;
$this->functionData['friendsList'][$count_c0a3529d6d89f77ae76833c8ee03029b]['pages'] = $pages;
}

if ( ! isset( $this->registry->templateStriping['memberStripe'] ) ) {
$this->registry->templateStriping['memberStripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("friends", "0" ) . "
" . (($pages) ? ("
	<div class='topic_controls'>
		$pages
	</div>
") : ("")) . "
<div class='maintitle ipsFilterbar clear'>
	<ul class='ipsList_inline clearfix'>
		" . (($this->request['tab'] == 'list' || !$this->request['tab']) ? ("
			<li class='active'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=list", "public",'' ), "", "" ) . "' title='{$this->lang->words['m_friends_list']}'>{$this->lang->words['m_friends_list']}</a></li>
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=pending", "public",'' ), "", "" ) . "' title='{$this->lang->words['m_friends_pending']}'>{$this->lang->words['m_friends_pending']}</a></li>
		") : ("")) . "
		" . (($this->request['tab'] == 'pending') ? ("
			<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=list", "public",'' ), "", "" ) . "' title='{$this->lang->words['m_friends_list']}'>{$this->lang->words['m_friends_list']}</a></li>
			<li class='active'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=list&amp;tab=pending", "public",'' ), "", "" ) . "' title='{$this->lang->words['m_friends_pending']}'>{$this->lang->words['m_friends_pending']}</a></li>
		") : ("")) . "
	</ul>
</div>
" . ((is_array($friends) and count($friends) && $this->settings['friends_enabled']) ? ("
		<ul class='ipsMemberList'>
		".$this->__f__a6da5623e3917142010ed975c1915579($friends,$pages)."	</ul>
") : ("<p class='no_messages'>
		" . (($this->request['tab'] == 'pending') ? ("
			{$this->lang->words['no_friends_awaiting_approval']}
		") : ("
			{$this->lang->words['no_friends_to_display']}
		")) . "
	</p>")) . "
" . (($pages) ? ("
	<div class='topic_controls'>
		{$pages}
	</div>
") : ("")) . "";
return $IPBHTML;
}


function __f__a6da5623e3917142010ed975c1915579($friends, $pages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $friends as $friend )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			" . (($this->request['tab'] == 'pending') ? ("<li id='member_id_{$friend['member_id']}' style=\"padding-top:15px\" class='ipsPad clearfix member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$friend['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$friend['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' /></a>
					<div class='ipsBox_withphoto'>
						<ul class='ipsList_inline right'>
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=moderate&amp;pp_option=approve&amp;pp_friend_id[{$friend['member_id']}]=1&amp;md5check={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['approve_request']}' class='ipsButton_secondary'>{$this->lang->words['approve_request']}</a></li>
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=moderate&amp;pp_option=delete&amp;pp_friend_id[{$friend['member_id']}]=1&amp;md5check={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['deny_request']}' class='ipsButton_secondary important'>{$this->lang->words['deny_request']}</a></li>
						</ul>
						
						<h3 class='ipsType_subtitle'>
							<strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$friend['members_display_name']}</a></strong>
						</h3>
						<!--" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($friend['pp_reputation_points'] == 0 || !$friend['pp_reputation_points']) ? ("
								<p class='reputation zero ipsType_small left'>
							") : ("")) . "
							" . (($friend['pp_reputation_points'] > 0) ? ("
								<p class='reputation positive ipsType_small left'>
							") : ("")) . "
							" . (($friend['pp_reputation_points'] < 0) ? ("
								<p class='reputation negative ipsType_small left'>
							") : ("")) . "							
									<span class='number'>{$friend['pp_reputation_points']}</span>
								</p>") : ("")) . "-->
						<span class='desc'>
							{$this->lang->words['member_joined']} " . $this->registry->getClass('class_localization')->getDate($friend['joined'],"joined", 0) . "<br />
							<!-- " . IPSMember::makeNameFormatted( $friend['group'], $friend['member_group_id'] ) . " &middot; " . $this->registry->getClass('class_localization')->formatNumber( $friend['posts'] ) . " {$this->lang->words['member_posts']} -->
						</span>
					</div>
				</li>") : ("<li id='member_id_{$friend['member_id']}' style=\"padding-top:15px\"  class='ipsPad clearfix member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$friend['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$friend['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' /></a>
					<div class='ipsBox_withphoto'>
						<ul class='ipsList_inline right'>
							" . (($this->memberData['g_is_supmod'] == 1 && $friend['member_id'] != $this->memberData['member_id']) ? ("
								<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;do=editmember&amp;auth_key={$this->member->form_hash}&amp;mid={$friend['member_id']}&amp;pf={$friend['member_id']}", "public",'' ), "", "" ) . "' class='ipsButton_secondary'>{$this->lang->words['supmod_edit_member']}</a></li>
							") : ("")) . "
							" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $friend['member_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $friend['member_id'] )) ? ("
									<li class='mini_friend_toggle is_friend' id='friend_mlist_{$friend['member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id={$friend['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_friend']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("remove_friend") . "</a></li>
								") : ("
									<li class='mini_friend_toggle is_not_friend' id='friend_mlist_{$friend['member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id={$friend['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a></li>								
								")) . "") : ("")) . "
							" . (($this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' ) && $friend['member_id'] != $this->memberData['member_id']) ? ("
								<li class='pm_button' id='pm_xxx_{$friend['pp_member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$friend['pp_member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_member']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("send_msg") . "</a></li>
							") : ("")) . "
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$friend['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['gbl_find_my_content']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("find_topics_link") . "</a></li>
							" . (($friend['has_blog'] AND IPSLib::appIsInstalled( 'blog' )) ? ("
								<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;mid={$friend['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_blog']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("blog_link") . "</a></li>
							") : ("")) . "
							" . (($friend['has_gallery'] AND IPSLib::appIsInstalled( 'gallery' )) ? ("
								<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;user={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "useralbum" ) . "' title='{$this->lang->words['view_gallery']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("gallery_link") . "</a></li>
							") : ("")) . "
						</ul>
						
						<h3 class='ipsType_subtitle'>
							<strong><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$friend['members_display_name']}</a></strong>
						</h3>
						<!-- " . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($friend['pp_reputation_points'] == 0 || !$friend['pp_reputation_points']) ? ("
								<p class='reputation zero ipsType_small left'>
							") : ("")) . "
							" . (($friend['pp_reputation_points'] > 0) ? ("
								<p class='reputation positive ipsType_small left'>
							") : ("")) . "
							" . (($friend['pp_reputation_points'] < 0) ? ("
								<p class='reputation negative ipsType_small left'>
							") : ("")) . "							
									<span class='number'>{$friend['pp_reputation_points']}</span>
								</p>") : ("")) . "-->
						<span class='desc'>
							{$this->lang->words['member_joined']} " . $this->registry->getClass('class_localization')->getDate($friend['joined'],"joined", 0) . "<br />
							<!-- " . IPSMember::makeNameFormatted( $friend['group'], $friend['member_group_id'] ) . " &middot; " . $this->registry->getClass('class_localization')->formatNumber( $friend['posts'] ) . " {$this->lang->words['member_posts']} -->
						</span>
					</div>
				</li>")) . "
		
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- listWarnings --*/
function listWarnings($member, $warnings, $pagination, $reasons, $canWarn) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['listWarnings'] ) )
{
$count_61e75b4ca98194999ea328982dd43d2a = is_array($this->functionData['listWarnings']) ? count($this->functionData['listWarnings']) : 0;
$this->functionData['listWarnings'][$count_61e75b4ca98194999ea328982dd43d2a]['member'] = $member;
$this->functionData['listWarnings'][$count_61e75b4ca98194999ea328982dd43d2a]['warnings'] = $warnings;
$this->functionData['listWarnings'][$count_61e75b4ca98194999ea328982dd43d2a]['pagination'] = $pagination;
$this->functionData['listWarnings'][$count_61e75b4ca98194999ea328982dd43d2a]['reasons'] = $reasons;
$this->functionData['listWarnings'][$count_61e75b4ca98194999ea328982dd43d2a]['canWarn'] = $canWarn;
}
$IPBHTML .= "<h1 class='ipsType_pagetitle'>" . sprintf( $this->lang->words['warnings_member'], $member['members_display_name'] ) . "</h1>
<p class='ipsType_pagedesc'>" . sprintf( $this->lang->words['warn_status'], $member['warn_level'] ) . "</p>
" . (($pagination || $canWarn) ? ("<div class='topic_controls clearfix'>
		" . (($pagination) ? ("{$pagination}") : ("")) . "
		" . (($canWarn) ? ("
			<ul class='topic_buttons'>
				<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&module=profile&section=warnings&do=add&member={$member['member_id']}&from_app={$this->request['from_app']}&from_id1={$this->request['from_id1']}&from_id2={$this->request['from_id2']}", "public",'' ), "", "" ) . "'>{$this->lang->words['warnings_add']}</a></li>
			</ul>
		") : ("")) . "
	</div>") : ("")) . "
<br />
<div class='maintitle'>{$this->lang->words['warnings']}</div>
" . ((empty( $warnings )) ? ("
	<div class='no_messages'>
		{$this->lang->words['warnings_empty']}
	</div>
") : ("
	<div class='ipsBox'>
		<div class='ipsBox_container'>
			<table class='ipb_table'>
				<thead>
					<tr class='header'>
						<th width='20%'>{$this->lang->words['warnings_date']}</th>
						<th width='20%'>{$this->lang->words['warnings_reason']}</th>
						<th width='20%'>{$this->lang->words['warnings_points']}</th>
						<th width='20%'>{$this->lang->words['warnings_moderator']}</th>
						<th width='20%'>&nbsp;</th>
					</tr>
				</thead>
				<tbody>
					".$this->__f__59ac2fb76c7179ea5d6b97d18a8ae138($member,$warnings,$pagination,$reasons,$canWarn)."				</tbody>
			</table>
		</div>
	</div>
")) . "
<br />
" . (($pagination) ? ("{$pagination}") : ("")) . "
<br /><br />";
return $IPBHTML;
}


function __f__59ac2fb76c7179ea5d6b97d18a8ae138($member, $warnings, $pagination, $reasons, $canWarn)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $warnings as $warning )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<tr>
							<td>" . $this->registry->getClass('class_localization')->getDate($warning['wl_date'],"JOINED", 0) . "</td>
							<td>
								" . ((isset( $reasons[ $warning['wl_reason'] ] )) ? ("
									{$reasons[ $warning['wl_reason'] ]['wr_name']}
								") : ("
									{$this->lang->words['warnings_reasons_other']}
								")) . "
							</td>
							<td>{$warning['wl_points']}</td>
							<td>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($warning['wl_moderator']) : '' ) . "</td>
							<td><a href='javascript:void(0);' class='ipsButton_secondary' onclick='warningPopup( this, {$warning['wl_id']} )'>{$this->lang->words['warnings_moreinfo']}</a></td>
						</tr>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- photoEditor --*/
function photoEditor($data, $member) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['photoEditor'] ) )
{
$count_9c29023a4fe452d1be233c48f023a961 = is_array($this->functionData['photoEditor']) ? count($this->functionData['photoEditor']) : 0;
$this->functionData['photoEditor'][$count_9c29023a4fe452d1be233c48f023a961]['data'] = $data;
$this->functionData['photoEditor'][$count_9c29023a4fe452d1be233c48f023a961]['member'] = $member;
}
$IPBHTML .= "<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"{$this->settings['public_dir']}style_css/{$this->registry->output->skin['_csscacheid']}/ipb_photo_editor.css\" />
<script type=\"text/javascript\">
 	// Can't use normal link as loaded by Ajax
    $$(\"head\")[0].insert(new Element(\"script\", {
      type: \"text/javascript\",
      src: '{$this->settings['public_dir']}js/ips.inlineUploader.js'
    })).
    insert(new Element(\"script\", {
      type: \"text/javascript\",
      src: '{$this->settings['public_dir']}js/ips.photoEditor.js'
    })).
    insert(new Element(\"script\", {
      type: \"text/javascript\",
      src: '{$this->settings['public_dir']}js/3rd_party/cropper/cropper.uncompressed.js'
    }));
</script>
<form method='post' enctype=\"multipart/form-data\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=photo&amp;do=save", "public",'' ), "", "" ) . "\" id='photoEditorForm' name='photoEditorForm'>
<h3>{$this->lang->words['pe_title']}</h3>
<div class='ipsBox'>
<div class='fixed_inner'>
	<fieldset id='ips_photoWrap' class='fixed_inner ipsBox_container'>
		<div id='ips_sidePanel'>
			<div id=\"ips_currentPhoto\">
				{$data['currentPhoto']['tag']}
			</div>
			<div id='ips_cropperControls' style='display:none'>
				<a href=\"javascript:void(0);\" class=\"ipsButton_secondary desc cropperCancel\">{$this->lang->words['pe_cancel']}</a> <a href=\"javascript:void(0);\" class=\"ipsButton_secondary desc cropperAccept\">{$this->lang->words['pe_ok']}</a>
			</div>
			<div id='ips_cropperStart' style='" . (($data['type'] == 'gravatar') ? ("display:none") : ("")) . ";'>
				<a href=\"javascript:void(0);\" class=\"ipsButton_secondary desc cropperStart\">{$this->lang->words['adjust_crop_lnk']}</a>
			</div>
		</div>
		<div id='ips_photoOptions'>
			<ul>
				<li class='ips_option row2'>
					<div class='ips_photoPreview _custom'><label>{$data['custom']['tag']}</label></div>
					<div class='ips_photoControls'>
						<input type='radio' name='photoType' id='ips_ptype_custom' value='custom' " . (($data['type'] == 'custom') ? ("checked='checked'") : ("")) . " /> <strong>{$this->lang->words['pe_use_custom_photo']}</strong>
						<div class='ips_photoOptionText'>
							<span class='desc'>{$this->lang->words['pe_upload_desc']}.<br />{$this->lang->words['pe_upload_rec']}</span>
							<br />
							" . ((IPSMember::canUploadPhoto( $member )) ? ("
								<br />
								<span class='desc'>{$this->lang->words['pe_upload_from_file']}</span>
								<br /><input type=\"file\" name=\"upload_photo\" id='upload_photo' class='input_text' value=\"\" size=\"20\" title=\"{$this->lang->words['pe_formats']}\" /><br />
							") : ("")) . "
							" . (($this->settings['mem_photo_url']) ? ("
								<br />
								<span class='desc'>{$this->lang->words['pe_import_from_url']}</span>
								<br /><input type='text' class='input_text' size='20' id='url_photo' name='url_photo' /> <input type='button' id='url_import' value='{$this->lang->words['pe_import_button']}' class='ipsButton_secondary desc' /><br />
							") : ("")) . "
							<div class='message error' style='display:none' id='ips_type_custom_error'></div>
							<br />
						</div>
					</div>
				</li>
				" . (($this->settings['allow_gravatars']) ? ("<li class='ips_option row2'>
					<div class='ips_photoPreview _gravatar'><label>{$data['gravatar']['tag']}</label></div>
					<div class='ips_photoControls'>
						<input type='radio' name='photoType' id='ips_ptype_gravatar' value='gravatar' " . (($data['type'] == 'gravatar') ? ("checked='checked'") : ("")) . " /> <strong>{$this->lang->words['pe_use_gravatar']}</strong>
						<div class='ips_photoOptionText'>
							<span class='desc'><a href=\"http://www.gravatar.com\" rel=\"external\">{$this->lang->words['pe_what_is_gravatar']}</a></span>
							<br /><br />
							<input type=\"text\" name=\"gravatar\" id='gravatar' class='input_text' size=\"35\" value=\"{$member['pp_gravatar']}\" />
							<br /><span class='desc'>{$this->lang->words['pe_enter_gravatar_email']}</span>
						</div>
					</div>
				</li>") : ("")) . "
				" . ((! empty($data['twitter']['tag'])) ? ("<li class='ips_option row2'>
					<div class='ips_photoPreview _twitter'><label>{$data['twitter']['tag']}</label></div>
					<div class='ips_photoControls'>
						<input type='radio' name='photoType' id='ips_ptype_twitter' value='twitter' " . (($data['type'] == 'twitter') ? ("checked='checked'") : ("")) . " /> <strong>{$this->lang->words['pe_use_twitter']}</strong>
						<div class='ips_photoOptionText'>
							<span class='desc'>{$this->lang->words['pe_twitter_desc']}</span>					
						</div>
					</div>
				</li>") : ("")) . "
				" . ((! empty($data['facebook']['tag'])) ? ("<li class='ips_option row2'>
					<div class='ips_photoPreview _facebook'><label>{$data['facebook']['tag']}</label></div>
					<div class='ips_photoControls'>
						<input type='radio' name='photoType' id='ips_ptype_facebook' value='facebook' " . (($data['type'] == 'facebook') ? ("checked='checked'") : ("")) . " /> <strong>{$this->lang->words['pe_use_facebook']}</strong>
						<div class='ips_photoOptionText'>
							<span class='desc'>{$this->lang->words['pe_facebook_desc']}</span>					
						</div>
					</div>
				</li>") : ("")) . "
				<li class='ipsPad_half clearfix right'>
					<input type='button' name='remove' value='{$this->lang->words['pe_remove_button']}' class='ipsButton important ips_photoRemove' />
					<input type='submit' name='saveit' value='{$this->lang->words['pe_done_button']}' class='ipsButton ips_photoSubmit' />
				</li>
			</ul>
		</div>
	</fieldset>
</div>
</div>
</form>";
return $IPBHTML;
}

/* -- profileModern --*/
function profileModern($tabs=array(), $member=array(), $visitors=array(), $default_tab='status', $default_tab_content='', $friends=array(), $status=array(), $warns=array(), $active = true, $photos = array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['profileModern'] ) )
{
$count_00686602dcff8d36dfeea1e741f1f854 = is_array($this->functionData['profileModern']) ? count($this->functionData['profileModern']) : 0;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['tabs'] = $tabs;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['member'] = $member;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['visitors'] = $visitors;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['default_tab'] = $default_tab;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['default_tab_content'] = $default_tab_content;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['friends'] = $friends;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['status'] = $status;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['warns'] = $warns;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['active'] = $active;
$this->functionData['profileModern'][$count_00686602dcff8d36dfeea1e741f1f854]['photos'] = $photos;
}

shuffle($friends);
shuffle($photos);
$IPBHTML .= "<div class=\"profile-info\">
	<div class=\"inner\">
		<h4>AMIGOS<span class=\"count\"><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&module=profile&section=friends&do=list", "public",'' ), "", "" ) . "' style=\"color:#ffffff;\">" . sprintf("%d", count($friends)) . "</a></span></h4>
		<br />
		".$this->__f__1aaf847bc2eb5b3774b53e985b76b160($tabs,$member,$visitors,$default_tab,$default_tab_content,$friends,$status,$warns,$active,$photos)."	</div>
	<div class=\"inner separate\">
		<h4>FOTOS<span class=\"count\"><a href='{$this->settings['base_url']}/gallery/member/{$member['member_id']}-{$member['members_seo_name']}' style=\"color:#ffffff;\">" . sprintf("%d", count($photos)) . "</a></span></h4>
		<br />
		".$this->__f__1abdf5f10b8a616c618cc546cef0e858($tabs,$member,$visitors,$default_tab,$default_tab_content,$friends,$status,$warns,$active,$photos)."	</div>
	<br />
</div>
<div class=\"clear\"></div><br />
" . (($active) ? ("<!--hook.if.skin_profile.profileModern.isLoadProfile.post.startif-->
") : ("")) . "";
return $IPBHTML;
}


function __f__1aaf847bc2eb5b3774b53e985b76b160($tabs=array(), $member=array(), $visitors=array(), $default_tab='status', $default_tab_content='', $friends=array(), $status=array(), $warns=array(), $active = true, $photos = array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $friends as $key => $friend )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		   " . (($key<=2) ? ("
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' class='profile-picture'>
					<img src='{$friend['pp_mini_photo']}' width=\"73\" height=\"73\" data-tooltip='{$friend['members_display_name']}' /><span class=\"bright\"></span>
				</a>
		   ") : ("")) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__1abdf5f10b8a616c618cc546cef0e858($tabs=array(), $member=array(), $visitors=array(), $default_tab='status', $default_tab_content='', $friends=array(), $status=array(), $warns=array(), $active = true, $photos = array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $photos as $key => $photo )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		   " . (($key<=2) ? ("
				<a href='{$this->settings['base_url']}/gallery/album/{$photo['img_album_id']}-profileview/' class='profile-picture'>
					<img src='{$photo['_image']}' width=\"73\" height=\"73\" data-tooltip='{$photo['caption']}' /><span class=\"bright\"></span>
				</a>
		   ") : ("")) . "
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- reputationPage --*/
function reputationPage($langBit, $currentApp='', $supportedApps=array(), $processedResults='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['reputationPage'] ) )
{
$count_268755ccbb694bcd28c088c55c66bfcc = is_array($this->functionData['reputationPage']) ? count($this->functionData['reputationPage']) : 0;
$this->functionData['reputationPage'][$count_268755ccbb694bcd28c088c55c66bfcc]['langBit'] = $langBit;
$this->functionData['reputationPage'][$count_268755ccbb694bcd28c088c55c66bfcc]['currentApp'] = $currentApp;
$this->functionData['reputationPage'][$count_268755ccbb694bcd28c088c55c66bfcc]['supportedApps'] = $supportedApps;
$this->functionData['reputationPage'][$count_268755ccbb694bcd28c088c55c66bfcc]['processedResults'] = $processedResults;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("like", "0" ) . "
<h1 class='ipsType_pagetitle'>{$this->lang->words[ $langBit ]}</h1>
<br />
<div class='general_box'>
	" . ((count( $supportedApps ) > 1) ? ("
		<div class='maintitle ipsFilterbar clearfix'>
			<ul class='ipsList_inline ipsType_smaller left'>
				".$this->__f__2026d6250353c628dfddc63809f0a026($langBit,$currentApp,$supportedApps,$processedResults)."			</ul>
		</div>
	") : ("")) . "
	" . (($processedResults) ? ("
		{$processedResults}
	") : ("
		<div class='no_messages'>{$this->lang->words['reputation_empty']}</div>
	")) . "
</div>";
return $IPBHTML;
}


function __f__2026d6250353c628dfddc63809f0a026($langBit, $currentApp='', $supportedApps=array(), $processedResults='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $supportedApps as $_app )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li " . (($_app['app_directory'] == $currentApp) ? ("class='active'") : ("")) . ">
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=reputation&amp;section=most&amp;app_tab={$_app['app_directory']}", "public",'' ), "most_liked", "most_liked" ) . "'>
							" . IPSLib::getAppTitle($_app['app_directory']) . "
						</a>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showCard --*/
function showCard($member, $download=0, $friends = array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['showCard'] ) )
{
$count_90e3888df8e8f576016b050de2d95ded = is_array($this->functionData['showCard']) ? count($this->functionData['showCard']) : 0;
$this->functionData['showCard'][$count_90e3888df8e8f576016b050de2d95ded]['member'] = $member;
$this->functionData['showCard'][$count_90e3888df8e8f576016b050de2d95ded]['download'] = $download;
$this->functionData['showCard'][$count_90e3888df8e8f576016b050de2d95ded]['friends'] = $friends;
}
$IPBHTML .= "<div class='vcard userpopup'>
	<h3><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "\" class=\"fn nickname url\">{$member['members_display_name']}</a></h3>
	<span>" . strip_tags($member['_group_formatted']) . "</span>
	<div class=\"friendscommon\">
	    " . ((count($friends)>0) ? ("
		    <a class=\"countfriends\">" . sprintf("%d amigos en com&uacute;n", count($friends)) . "</a>
			<ul>
			".$this->__f__6f91cede42319e3374629bd6b3ea0e9b($member,$download,$friends)."			</ul>
	    ") : ("")) . "
	</div>
	<div class='side left ipsPad'>
		<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "\" class=\"ipsUserPhotoLink\">
			<img src=\"{$member['pp_thumb_photo']}\" alt=\"{$this->lang->words['get_photo']}\" class='profile-pic' />
		</a>
	</div>
	<div class='ipsPad'>
		<ul class='user_controls clear'>
			" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $member['member_id'] )) ? ("
					<li><a  class='addfriend' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=remove&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['remove_friend']}'>{$this->lang->words['remove_friend']}</a></li>
				") : ("
					<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=friends&amp;do=add&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}'>" . $this->registry->getClass('output')->getReplacement("add_friend") . "</a></li>
				")) . "
				" . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] AND $this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' ) AND $member['members_disable_pm'] == 0) ? ("
					<li><a class=\"send-message\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_this_member']}' id='pm_xxx_{$member['member_id']}'>Mensajes</a></li>
				") : ("")) . "") : ("")) . "
		</ul>
	</div>
</div>";
return $IPBHTML;
}


function __f__6f91cede42319e3374629bd6b3ea0e9b($member, $download=0, $friends = array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $friends as $key => $friend )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				" . (($key<5) ? ("
				<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "\"><img src=\"{$friend['pp_thumb_photo']}\" width=\"28\" height=\"28\" /></a></li>
				") : ("")) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusReplies --*/
function statusReplies($replies=array(), $no_wrapper=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['statusReplies'] ) )
{
$count_c0d0240adfec753e750b5c8d6cda0f73 = is_array($this->functionData['statusReplies']) ? count($this->functionData['statusReplies']) : 0;
$this->functionData['statusReplies'][$count_c0d0240adfec753e750b5c8d6cda0f73]['replies'] = $replies;
$this->functionData['statusReplies'][$count_c0d0240adfec753e750b5c8d6cda0f73]['no_wrapper'] = $no_wrapper;
}
$IPBHTML .= "" . ((!$no_wrapper) ? ("
	<ul class='ipsList_withtinyphoto clear'>
") : ("")) . "".$this->__f__772106f67d5aa262706c2b1d339f1cb4($replies,$no_wrapper)."" . ((!$no_wrapper) ? ("
	</ul>
") : ("")) . "";
return $IPBHTML;
}


function __f__772106f67d5aa262706c2b1d339f1cb4($replies=array(), $no_wrapper=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $replies as $reply )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<li id='statusReply-{$reply['reply_id']}' class='ipsPad row2'>
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$reply['member_id']}", "public",'' ), "{$reply['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$reply['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$reply['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_tiny' /></a>	
		<div class=\"status_mini_content list_content\">
			<h5><strong>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($reply) : '' ) . "</strong></h5>
			{$reply['reply_content']}
			<br />
			<span class='desc lighter'>{$reply['reply_date_formatted']}</span>
			<span class='desc mod_links'>
				" . (($reply['_canDelete']) ? (" &middot; <a href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=deleteReply&amp;status_id={$reply['reply_status_id']}&amp;reply_id={$reply['reply_id']}&amp;k={$this->member->form_hash}\" id=\"statusReplyDelete-{$reply['reply_status_id']}-{$reply['reply_id']}\" class=\"__sDR __dr{$reply['reply_status_id']}-{$reply['reply_id']}\">{$this->lang->words['status_delete_link']}</a>") : ("")) . "
			</span>
		</div>
	</li>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusUpdates --*/
function statusUpdates($updates=array(), $smallSpace=0, $latestOnly=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['statusUpdates'] ) )
{
$count_928551c7f63c777865ad14a75f9a96fb = is_array($this->functionData['statusUpdates']) ? count($this->functionData['statusUpdates']) : 0;
$this->functionData['statusUpdates'][$count_928551c7f63c777865ad14a75f9a96fb]['updates'] = $updates;
$this->functionData['statusUpdates'][$count_928551c7f63c777865ad14a75f9a96fb]['smallSpace'] = $smallSpace;
$this->functionData['statusUpdates'][$count_928551c7f63c777865ad14a75f9a96fb]['latestOnly'] = $latestOnly;
}
$IPBHTML .= "".$this->__f__b7c269b13a7a442c79b6716f481a9c23($updates,$smallSpace,$latestOnly)."";
return $IPBHTML;
}


function __f__b7c269b13a7a442c79b6716f481a9c23($updates=array(), $smallSpace=0, $latestOnly=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $updates as $id => $status )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	" . (($this->memberData['member_id'] AND $latestOnly AND $status['member_id'] == $this->memberData['member_id']) ? ("
	<script type=\"text/javascript\">
		ipb.status.myLatest = {$status['status_id']};
	</script>
	") : ("")) . "
	<div class='ipsBox_container ipsPad' id='statusWrap-{$status['status_id']}'>
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$status['member_id']}", "public",'' ), "{$status['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'>
			<img src='{$status['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$status['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' />
		</a>	
		<div class=\"ipsBox_withphoto status_content\">
			<div id=\"statusContent-{$status['status_id']}\">
				<h4>
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($status) : '' ) . "
					" . (($status['status_member_id'] != $status['status_author_id']) ? ("
						&rarr;
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($status['owner']) : '' ) . "
					") : ("")) . "
				</h4>
				<div class='status_status'>
					{$status['status_content']}
				</div>
				<span class='desc lighter blend_links'>
					<img src=\"{$this->settings['img_url']}/icon_lock.png\" id='statusLockImg-{$status['status_id']}' alt=\"{$this->lang->words['status__locked']}\" " . ((!$status['status_is_locked']) ? ("style='display: none'") : ("")) . " />
					" . ((! $smallSpace AND $status['_creatorImg']) ? ("<img src=\"{$status['_creatorImg']}\" alt='' />") : ("")) . "
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=single&amp;status_id={$status['status_id']}", "public",'' ), "true", "members_status_single" ) . "'>{$status['status_date_formatted_short']}</a>" . (($smallSpace AND $status['_creatorText'] AND $status['status_creator'] AND $status['status_creator'] != 'ipb') ? (" {$this->lang->words['su_via']} {$status['_creatorText']}") : ("")) . "
				</span>
				<span class='mod_links'>
					" . (($status['_canDelete']) ? (" &middot; <a rel=\"nofollow\" href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=deleteStatus&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}\" id=\"statusDelete-{$status['status_id']}\" class=\"__sD __d{$status['status_id']}\">{$this->lang->words['status_delete_link']}</a>") : ("")) . "
					<span id='statusUnlock-{$status['status_id']}' " . (($status['_isLocked'] AND $status['_canUnlock']) ? ("style='display:inline'") : ("style='display:none'")) . "> &middot; <a rel=\"nofollow\"  href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=unlockStatus&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}\" id=\"statusUnlockLink-{$status['status_id']}\" class=\"__sU __u{$status['status_id']}\">{$this->lang->words['status_unlock_link']}</a></span>
					<span id='statusLock-{$status['status_id']}' " . (($status['_canLock'] AND ! $status['_isLocked']) ? ("style='display:inline'") : ("style='display:none'")) . "> &middot; <a rel=\"nofollow\"  href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=lockStatus&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}\" id=\"statusLockLink-{$status['status_id']}\" class=\"__sL __l{$status['status_id']}\">{$this->lang->words['status_lock_link']}</a></span>
				</span>
			</div>
			<div id=\"statusFeedback-{$status['status_id']}\" class='status_feedback'>
				" . (($status['status_replies'] AND count( $status['replies'] )) ? ("" . (($status['status_replies'] > 3) ? ("
						<div class='status_mini_wrap row2 altrow' id='statusMoreWrap-{$status['status_id']}'>
							<img src=\"{$this->settings['img_url']}/comments.png\" alt=\"\" /> &nbsp;<a href=\"#\" id=\"statusMore-{$status['status_id']}\" class='__showAll __x{$status['status_id']}'>" . sprintf( $this->lang->words['status_show_all_x'], $status['status_replies'] ) . "</a>
						</div>
					") : ("")) . "
					<ul id='statusReplies-{$status['status_id']}' class='ipsList_withtinyphoto clear'>
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('profile'), 'statusReplies' ) ? $this->registry->getClass('output')->getTemplate('profile')->statusReplies($status['replies'], 1) : '' ) . "
					</ul>") : ("")) . "
				<div id='statusReplyBlank-{$status['status_id']}'></div>
				<div id='statusReply-{$status['status_id']}'>
				" . (($status['_userCanReply']) ? ("
					<ul class='ipsList_withtinyphoto reply row2 ipsPad'>
						<li>
							<form id='statusReplyForm-{$status['status_id']}' action='{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=reply&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}' method='post'>
								<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$this->memberData['member_id']}", "public",'' ), "{$this->memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$this->memberData['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$this->memberData['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_tiny' /></a>
								<div class='list_content'>
									<div class=\"status_mini_content\">
										<textarea class='status_textarea input_text' rows='3' cols='50' name='comment-{$status['status_id']}' id='statusText-{$status['status_id']}'></textarea>
										<div class=\"status_submit\"><input type='submit' class='__submit input_submit' id='statusSubmit-{$status['status_id']}' value='{$this->lang->words['status__dfcomment']}' /></div>
									</div>									
								</div>
							</form>
							<a href='#' class='__showform' id='statusReplyFormShow-{$status['status_id']}' style='display: none'>{$this->lang->words['status__addcomment']}</a>
						</li>
					</ul>
					<script type='text/javascript'>
						if( $('statusReplyForm-{$status['status_id']}') )
						{
							$('statusReplyForm-{$status['status_id']}').hide();
						}
						
						if( $('statusReplyFormShow-{$status['status_id']}') )
						{
							$('statusReplyFormShow-{$status['status_id']}').show();
						}
					</script>
				") : ("")) . "
				</div>
				<div class='status_mini_wrap row2 altrow' id='statusMaxWrap-{$status['status_id']}' " . (($status['status_replies'] < $this->settings['su_max_replies']) ? ("style='display:none'") : ("")) . ">
					<img src=\"{$this->settings['img_url']}/locked_replies.png\" title=\"{$this->lang->words['status_too_many_replies']}\" alt='x' /> {$this->lang->words['status_too_many_replies']}
				</div>
			</div>
		</div>
	</div>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusUpdatesPage --*/
function statusUpdatesPage($updates=array(), $pages='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['statusUpdatesPage'] ) )
{
$count_94e8c448be6471b404c9e497e273b284 = is_array($this->functionData['statusUpdatesPage']) ? count($this->functionData['statusUpdatesPage']) : 0;
$this->functionData['statusUpdatesPage'][$count_94e8c448be6471b404c9e497e273b284]['updates'] = $updates;
$this->functionData['statusUpdatesPage'][$count_94e8c448be6471b404c9e497e273b284]['pages'] = $pages;
}

if ( ! isset( $this->registry->templateStriping['recent_status'] ) ) {
$this->registry->templateStriping['recent_status'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("status", "0" ) . "<h1 class='ipsType_pagetitle'>{$this->lang->words['status_updates__overview']}</h1>
<br />
<div id='status_standalone_page'>
	<div class='maintitle ipsFilterbar'>
		<ul class='ipsList_inline'>
			<li id='status_all' class='" . ((! $this->request['status_id'] AND ! $this->request['member_id'] AND ! $this->request['type'] OR $this->request['type'] == 'all') ? ("active") : ("")) . "'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=all", "public",'' ), "true", "members_status_all" ) . "'>{$this->lang->words['status__all_updates']}</a></li>
			" . (($this->memberData['member_id'] AND $this->settings['friends_enabled']) ? ("<li id='status_all' class='tab_toggle " . (($this->request['type'] == 'friends') ? ("active") : ("")) . "'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=friends", "public",'' ), "true", "members_status_friends" ) . "'>{$this->lang->words['status__myfriends']}</a></li>") : ("")) . "" . (($this->request['member_id']) ? ("
				<li id='status_by_id' class='active'><a href='#'>{$this->lang->words['status__membersupdats']}</a></li>
			") : ("")) . "" . (($this->request['status_id']) ? ("
				<li id='status_by_sid' class='active'><a href='#'>{$this->lang->words['status__singleupdate']}</a></li>
			") : ("")) . "
		</ul>
	</div>
	" . (($this->memberData['member_id'] AND $this->registry->getClass('memberStatus')->canCreate( $this->memberData )) ? ("<div class='status_update row2'>
			<form id='statusForm' action='{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=new&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}' method='post'>
			<input type='text' id='statusUpdate_page' name='content' style='width:60%' class='input_text'> <input type='submit' class='ipsButton' id='statusSubmit_page' value='{$this->lang->words['gbl_post']}' />
			" . (((IPSLib::twitter_enabled() OR IPSLib::fbc_enabled() ) AND ( $this->memberData['fb_uid'] OR $this->memberData['twitter_id'] )) ? ("<p class='desc' style='padding-top:5px;'>{$this->lang->words['st_update']}
					" . ((IPSLib::twitter_enabled() AND ( $this->memberData['twitter_id'] )) ? ("<input type='checkbox' id='su_Twitter' value='1' name='su_Twitter' /> <img src=\"{$this->settings['public_dir']}style_status/twitter.png\" style='vertical-align:top' alt='' />") : ("")) . "
					" . ((IPSLib::fbc_enabled() AND ( $this->memberData['fb_uid'] )) ? ("<input type='checkbox' id='su_Facebook' value='1' name='su_Facebook' /> <img src=\"{$this->settings['public_dir']}style_status/facebook.png\" style='vertical-align:top' alt='' />") : ("")) . "
				</p>") : ("")) . "
			</form>
		</div>") : ("")) . "
	<div id=\"status_wrapper\" class='ipsBox'>
		" . ((count( $updates )) ? ("
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('profile'), 'statusUpdates' ) ? $this->registry->getClass('output')->getTemplate('profile')->statusUpdates($updates) : '' ) . "
		") : ("
			<p class='no-status'>{$this->lang->words['status_updates_none']}</p>
		")) . "
	</div>
	<div class='topic_controls clearfix'>
		{$pages}
	</div>
</div>";
return $IPBHTML;
}

/* -- tabFriends --*/
function tabFriends($friends=array(), $member=array(), $pagination='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabFriends'] ) )
{
$count_1448fbcb674eb12b9cf7c7955dfe8037 = is_array($this->functionData['tabFriends']) ? count($this->functionData['tabFriends']) : 0;
$this->functionData['tabFriends'][$count_1448fbcb674eb12b9cf7c7955dfe8037]['friends'] = $friends;
$this->functionData['tabFriends'][$count_1448fbcb674eb12b9cf7c7955dfe8037]['member'] = $member;
$this->functionData['tabFriends'][$count_1448fbcb674eb12b9cf7c7955dfe8037]['pagination'] = $pagination;
}
$IPBHTML .= "<div class='general_box'>
	" . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends'] AND $member['pp_setting_count_friends']) ? ("<div class='friend_list clear' id='friend_list'>
			<h3 class='bar'>{$this->lang->words['m_title_friends']}</h3>
			" . ((is_array($friends) and count($friends)) ? ("
				<ul class='clearfix'>
				".$this->__f__f5471763f713a79162560c25f8390a1e($friends,$member,$pagination)."				</ul>				
			") : ("
				<p>
					<em>{$member['members_display_name']} {$this->lang->words['no_friends_yet']}</em>
				</p>
			")) . "
		</div>
		<br />
		{$pagination}") : ("")) . "
</div>";
return $IPBHTML;
}


function __f__f5471763f713a79162560c25f8390a1e($friends=array(), $member=array(), $pagination='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $friends as $friend )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$friend['member_id']}", "public",'' ), "{$friend['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink'>
							<img src='{$friend['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_medium' />
						</a><br />
						<span class='name'>
							" . IPSMember::makeProfileLink($friend['members_display_name_short'], $friend['member_id'], $friend['members_seo_name']) . "
						</span>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabImportPhotos --*/
function tabImportPhotos($isFBUser=false, $albumInfo) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabImportPhotos'] ) )
{
$count_189b11c094ad2f53d536c72dc29d6ef3 = is_array($this->functionData['tabImportPhotos']) ? count($this->functionData['tabImportPhotos']) : 0;
$this->functionData['tabImportPhotos'][$count_189b11c094ad2f53d536c72dc29d6ef3]['isFBUser'] = $isFBUser;
$this->functionData['tabImportPhotos'][$count_189b11c094ad2f53d536c72dc29d6ef3]['albumInfo'] = $albumInfo;
}
$IPBHTML .= "<h3 class='maintitle'>Albums</h3>
<div class='ipsBox'>
	<div class='ipsBox_container'>
		" . ((!$isFBUser) ? ("
                    <div id='fbUserBox'>
                        <p class='message'>No te has autenticado con facebook</p>
                        <br />
                        <br />
                        
                        <a href=\"{$this->settings['_original_base_url']}/interface/facebook/index.php\"><img src=\"{$this->settings['img_url']}/facebook_login.png\" alt=\"\" /></a>
                    </div>
                ") : ("
                    <div class=\"row\">
                    ".$this->__f__f1113766b78f680cf20a1e0c7b5d0e61($isFBUser,$albumInfo)."                    </div>
                ")) . "
	</div>
</div>";
return $IPBHTML;
}


function __f__f1113766b78f680cf20a1e0c7b5d0e61($isFBUser=false, $albumInfo)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $albumInfo as $album )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
                        " . ((trim($album['coverPhotoStr']) != '') ? ("
                        <div class=\"span2\">
                            <div class=\"thumbnail\">
                                <img src=\"{$album['coverPhotoStr']}\" style=\"min-height: 140px; min-width: 140px; max-width: 140px; max-height: 140px; height: 140px; width: 140px;\" />
                                <p>" . substr($album['name'], 0, 10) . "</p>
                            </div>
                        </div>
                        ") : ("")) . "
                    
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabNoContent --*/
function tabNoContent($langkey) {
$IPBHTML = "";
$IPBHTML .= "<div class='no_messages'>{$this->lang->words[ $langkey ]}</div>";
return $IPBHTML;
}

/* -- tabPosts --*/
function tabPosts($content) {
$IPBHTML = "";
$IPBHTML .= "<h3 class='maintitle'>{$this->lang->words['posts_made']}</h3>
<div class='ipsBox'>
	<div class='ipsBox_container'>
		{$content}
	</div>
</div>";
return $IPBHTML;
}

/* -- tabReputation --*/
function tabReputation($member, $currentApp='', $type='', $supportedApps=array(), $processedResults='', $pagination='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabReputation'] ) )
{
$count_c6f9f82606a360ca76d049ef51004a4e = is_array($this->functionData['tabReputation']) ? count($this->functionData['tabReputation']) : 0;
$this->functionData['tabReputation'][$count_c6f9f82606a360ca76d049ef51004a4e]['member'] = $member;
$this->functionData['tabReputation'][$count_c6f9f82606a360ca76d049ef51004a4e]['currentApp'] = $currentApp;
$this->functionData['tabReputation'][$count_c6f9f82606a360ca76d049ef51004a4e]['type'] = $type;
$this->functionData['tabReputation'][$count_c6f9f82606a360ca76d049ef51004a4e]['supportedApps'] = $supportedApps;
$this->functionData['tabReputation'][$count_c6f9f82606a360ca76d049ef51004a4e]['processedResults'] = $processedResults;
$this->functionData['tabReputation'][$count_c6f9f82606a360ca76d049ef51004a4e]['pagination'] = $pagination;
}
$IPBHTML .= "<div class='general_box'>
	<div class='maintitle ipsFilterbar clearfix'>
		" . ((count( $supportedApps ) > 1) ? ("
			<ul class='ipsList_inline ipsType_smaller left'>
				".$this->__f__56e4d852c27f21fe7f30b1b148af4cb3($member,$currentApp,$type,$supportedApps,$processedResults,$pagination)."			</ul>
		") : ("")) . "
		<ul class='ipsList_inline ipsType_smaller right'>
			<li " . (($type == 'given') ? ("class='active'") : ("")) . ">
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=reputation&amp;app_tab={$currentApp}&amp;type=given", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "'>
					{$this->lang->words['reputation_given']}
				</a>
			</li>
			<li " . (($type == 'received') ? ("class='active'") : ("")) . ">
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=reputation&amp;app_tab={$currentApp}&amp;type=received", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "'>
					{$this->lang->words['reputation_received']}
				</a>
			</li>
		</ul>
	</div>
	" . (($processedResults) ? ("
		{$processedResults}
	") : ("
		<div class='no_messages'>{$this->lang->words['reputation_empty']}</div>
	")) . "
	" . (($pagination) ? ("
		<br />
		{$pagination}
		<br class='clear' />
	") : ("")) . "
</div>";
return $IPBHTML;
}


function __f__56e4d852c27f21fe7f30b1b148af4cb3($member, $currentApp='', $type='', $supportedApps=array(), $processedResults='', $pagination='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $supportedApps as $_app )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li " . (($_app['app_directory'] == $currentApp) ? ("class='active'") : ("")) . ">
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}&amp;tab=reputation&amp;app_tab={$_app['app_directory']}&amp;type={$type}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "'>
							" . IPSLib::getAppTitle($_app['app_directory']) . "
						</a>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabReputation_calendar --*/
function tabReputation_calendar($results) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabReputation_calendar'] ) )
{
$count_f7ab2512ec41134e244c692cd577b432 = is_array($this->functionData['tabReputation_calendar']) ? count($this->functionData['tabReputation_calendar']) : 0;
$this->functionData['tabReputation_calendar'][$count_f7ab2512ec41134e244c692cd577b432]['results'] = $results;
}
$IPBHTML .= "<div class='ipsBox'>
	".$this->__f__57245fa3b28bc4cf71660d42861e3776($results)."</div>";
return $IPBHTML;
}


function __f__57245fa3b28bc4cf71660d42861e3776($results)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $results as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		" . (($data['type'] == 'comment_id') ? ("<div class='post_block hentry clear no_sidebar ipsBox_container'>
				<div class='post_wrap'>
					" . (($data['comment_mid']) ? ("
						<h3 class='row2'>
					") : ("
						<h3 class='guest row2'>
					")) . "
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$data['event_id']}", "public",'' ), "{$data['event_title_seo']}", "cal_event" ) . "\">" . IPSText::truncate( $data['event_title'], 80) . "</a>
					</h3>
					<div class='post_body'>
						<p class='posted_info desc lighter ipsType_small'>
							<img src='{$data['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' /> {$this->lang->words['posted']} {$this->lang->words['by']}
							" . (($data['member_id']) ? ("<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "</span>") : ("{$data['members_display_name']}")) . "
							{$this->lang->words['on']} <abbr class=\"published\" title=\"" . date( 'c', $data['comment_date'] ) . "\">" . $this->registry->getClass('class_localization')->getDate($data['comment_date'],"long", 0) . "</abbr>
							{$this->lang->words['cal_in']}
							<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$data['event_id']}", "public",'' ), "{$data['event_title_seo']}", "cal_event" ) . "\">{$data['event_title']}</a>
						</p>
						<div class='post entry-content clearfix'>
							{$data['comment_text']}
							<br />
							" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($data, array_merge( array( 'primaryId' => $data['comment_id'], 'domLikeStripId' => 'like_comment_id_' . $data['comment_id'], 'domCountId' => 'rep_comment_id_' . $data['comment_id'], 'app' => 'calendar', 'type' => 'comment_id', 'likeFormatted' => $data['repButtons']['formatted'] ), $data )) : '' ) . "
						</div>
					</div>
				</div>
				<br />
			</div>
			<br />") : ("<div class='post_block hentry clear no_sidebar ipsBox_container'>
				<div class='post_wrap'>
					" . (($data['event_member_id']) ? ("
						<h3 class='row2'>
					") : ("
						<h3 class='guest row2'>
					")) . "
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=calendar&amp;module=calendar&amp;section=view&amp;do=showevent&amp;event_id={$data['event_id']}", "public",'' ), "{$data['event_title_seo']}", "cal_event" ) . "\">" . IPSText::truncate( $data['event_title'], 80) . "</a>
					</h3>
					<div class='post_body'>
						<p class='posted_info desc lighter ipsType_small'>
							<img src='{$data['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' /> {$this->lang->words['posted']} {$this->lang->words['by']}
							" . (($data['member_id']) ? ("<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "</span>") : ("{$data['members_display_name']}")) . "
							{$this->lang->words['on']} <abbr class=\"published\" title=\"" . date( 'c', $data['event_saved'] ) . "\">" . $this->registry->getClass('class_localization')->getDate($data['event_saved'],"long", 0) . "</abbr>
						</p>
						<div class='post entry-content clearfix'>
							{$data['event_content']}
							<br />
							" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($data, array_merge( array( 'primaryId' => $data['event_id'], 'domLikeStripId' => 'like_event_id_' . $data['event_id'], 'domCountId' => 'rep_event_id_' . $data['event_id'], 'app' => 'calendar', 'type' => 'event_id', 'likeFormatted' => $data['repButtons']['formatted'] ), $data )) : '' ) . "
						</div>
					</div>
				</div>
				<br />
			</div>
			<br />")) . "
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabReputation_posts --*/
function tabReputation_posts($results) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabReputation_posts'] ) )
{
$count_03286b28c152e01b4fedd94fde558eba = is_array($this->functionData['tabReputation_posts']) ? count($this->functionData['tabReputation_posts']) : 0;
$this->functionData['tabReputation_posts'][$count_03286b28c152e01b4fedd94fde558eba]['results'] = $results;
}
$IPBHTML .= "<div class='ipsBox'>
	".$this->__f__7efa552137f9d460931ca5f6206fcac6($results)."</div>";
return $IPBHTML;
}


function __f__5e680835383d02e53e2f695abd109db4($results,$data='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['_forum_trail'] as $i => $f )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
								" . (($i+1 == count( $data['_forum_trail'] )) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "{$f[1]}", "public",'' ), "{$f[2]}", "showforum" ) . "'>{$f[0]}</a>") : ("")) . "
							
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__7efa552137f9d460931ca5f6206fcac6($results)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $results as $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<div class='post_block hentry clear no_sidebar ipsBox_container'>
			<div class='post_wrap'>
				" . (($data['author_id']) ? ("
					<h3 class='row2'>
				") : ("
					<h3 class='guest row2'>
				")) . "
					<span class='post_id right ipsType_small desc blend_links'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['topic_id']}&amp;view=findpost&amp;p={$data['pid']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "' rel='bookmark' title='{$this->lang->words['link_to_post']} #{$data['pid']}'>#{$data['pid']}</a></span>
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\">" . IPSText::truncate( $data['topic_title'], 80) . "</a>
				</h3>
				<div class='post_body'>
					<p class='posted_info desc lighter ipsType_small'>
						<img src='{$data['pp_thumb_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' /> {$this->lang->words['posted']} {$this->lang->words['search_by']}
						" . (($data['member_id']) ? ("<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "</span>") : ("{$data['members_display_name']}")) . "
						{$this->lang->words['on']} <abbr class=\"published\" title=\"" . date( 'c', $data['post_date'] ) . "\">" . $this->registry->getClass('class_localization')->getDate($data['post_date'],"long", 0) . "</abbr>
						" . (($data['_forum_trail']) ? ("
							in
							".$this->__f__5e680835383d02e53e2f695abd109db4($results,$data)."						") : ("")) . "
					</p>
					<div class='post entry-content clearfix'>
						{$data['post']}
						<br />
						" . ( method_exists( $this->registry->getClass('output')->getTemplate('global_other'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('global_other')->repButtons($data, array_merge( array( 'primaryId' => $data['pid'], 'domLikeStripId' => 'like_post_' . $data['pid'], 'domCountId' => 'rep_post_' . $data['pid'], 'app' => 'forums', 'type' => 'pid', 'likeFormatted' => $data['repButtons']['formatted'], 'has_given_rep' => $data['repButtons']['iLike'] ), $data )) : '' ) . "
					</div>
				</div>
			</div>
			<br />
		</div>
		<br />
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- tabSingleColumn --*/
function tabSingleColumn($row=array(), $read_more_link='', $url='', $title='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabSingleColumn'] ) )
{
$count_7e1e08c448f3544ed864907e31f3c51d = is_array($this->functionData['tabSingleColumn']) ? count($this->functionData['tabSingleColumn']) : 0;
$this->functionData['tabSingleColumn'][$count_7e1e08c448f3544ed864907e31f3c51d]['row'] = $row;
$this->functionData['tabSingleColumn'][$count_7e1e08c448f3544ed864907e31f3c51d]['read_more_link'] = $read_more_link;
$this->functionData['tabSingleColumn'][$count_7e1e08c448f3544ed864907e31f3c51d]['url'] = $url;
$this->functionData['tabSingleColumn'][$count_7e1e08c448f3544ed864907e31f3c51d]['title'] = $title;
}
$IPBHTML .= "<div class='post_block no_sidebar'>
	<div class='post_wrap'>
		" . (($title) ? ("" . (($url) ? ("
				<h3 class='row2'><a href=\"$url\" title=\"{$this->lang->words['view_topic']}\">" . IPSText::truncate( $title, 90 ) . "</a></h3>
			") : ("
				<h3 class='row2'>" . IPSText::truncate( $title, 90 ) . "</h3>
			")) . "") : ("")) . "
		<div class='post_body'>
			<p class='posted_info'>
				" . (($row['_raw_date']) ? ("" . $this->registry->getClass('class_localization')->getDate($row['_raw_date'],"long", 0) . "") : ("{$this->lang->words['posted']} {$row['_date_array']['mday']} {$row['_date_array']['smonth']} {$row['_date_array']['year']}")) . "
			</p>
			<div class='post'>
				{$row['post']}
			</div>
		</div>
	</div>
	<br />
</div>";
return $IPBHTML;
}

/* -- tabStatusUpdates --*/
function tabStatusUpdates($updates=array(), $actions, $member=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_profile', $this->_funcHooks['tabStatusUpdates'] ) )
{
$count_7983e6bc84112e85fc426c068824bb3a = is_array($this->functionData['tabStatusUpdates']) ? count($this->functionData['tabStatusUpdates']) : 0;
$this->functionData['tabStatusUpdates'][$count_7983e6bc84112e85fc426c068824bb3a]['updates'] = $updates;
$this->functionData['tabStatusUpdates'][$count_7983e6bc84112e85fc426c068824bb3a]['actions'] = $actions;
$this->functionData['tabStatusUpdates'][$count_7983e6bc84112e85fc426c068824bb3a]['member'] = $member;
}

if ( ! isset( $this->registry->templateStriping['recent_status'] ) ) {
$this->registry->templateStriping['recent_status'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<h2 class='maintitle'>{$this->lang->words['pp_tab_statusupdates']}</h2>
" . (($this->memberData['member_id'] AND ( $this->memberData['member_id'] == $member['member_id'] ) AND $this->registry->getClass('memberStatus')->canCreate( $member )) ? ("<div class='status_update'>
		<form id='statusForm' action='{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=new&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}&amp;forMemberId={$member['member_id']}' method='post'>
		<input type='text' name='content' id='statusUpdate_page' class='input_text' /> <input type='submit' class='ipsButton' id='statusSubmit_page' value='{$this->lang->words['gbl_post']}' />
		" . ((( IPSLib::loginMethod_enabled('facebook') AND $this->memberData['fb_uid'] ) OR ( IPSLib::loginMethod_enabled('twitter') AND $this->memberData['twitter_id'] )) ? ("<p class='desc' style='padding-top:5px;'>{$this->lang->words['st_update']}
				" . ((IPSLib::loginMethod_enabled('twitter') AND $this->memberData['twitter_id']) ? ("<input type='checkbox' id='su_Twitter' value='1' name='su_Twitter' /> <img src=\"{$this->settings['public_dir']}style_status/twitter.png\" style='vertical-align:top' alt='' />") : ("")) . "
				" . ((IPSLib::loginMethod_enabled('facebook') AND $this->memberData['fb_uid']) ? ("&nbsp;<input type='checkbox' id='su_Facebook' value='1' name='su_Facebook' /> <img src=\"{$this->settings['public_dir']}style_status/facebook.png\" style='vertical-align:top' alt='' />") : ("")) . "
			</p>") : ("")) . "
		</form>
	</div>") : ("")) . "
" . (($this->memberData['member_id'] && $this->memberData['member_id'] != $member['member_id'] && $member['pp_setting_count_comments']) ? ("
	<div class='status_update'>
		<form id='commentForm' action='{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=new&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}&amp;forMemberId={$member['member_id']}' method='post'>
				<input type='hidden' name='member_id' value='{$member['member_id']}' />
				<input type='hidden' name='auth_key' value='{$this->member->form_hash}' />
				<div id='post_comment'>
					<input type='text' class='input_text' cols='50' rows='3' id='statusUpdate_page' name='content' data-for-member-id=\"{$member['member_id']}\" />
					<input type='submit' class='ipsButton' value='{$this->lang->words['comment_submit_post']}' data-for-member-id=\"{$member['member_id']}\" id='statusSubmit_page' />
				</div> 
		</form>
	</div>
") : ("")) . "
<div class='ipsBox clearfix'>
	<div id=\"status_wrapper\" data-member=\"{$member['member_id']}\">
		" . ((count( $updates )) ? ("
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('profile'), 'statusUpdates' ) ? $this->registry->getClass('output')->getTemplate('profile')->statusUpdates($updates) : '' ) . "
			<div style='text-align: center'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;member_id={$member['member_id']}", "public",'' ), "true", "members_status_all" ) . "' class='ipsButton_secondary'>{$this->lang->words['status__viewall']}</a>
			</div>
		") : ("
			<p class='ipsBox_container ipsPad'>{$this->lang->words['status_updates_none']}</p>
		")) . "
	</div>
</div>";
return $IPBHTML;
}

/* -- tabTopics --*/
function tabTopics($content) {
$IPBHTML = "";
$IPBHTML .= "<h3 class='maintitle'>{$this->lang->words['topics_started']}</h3>
<div class='ipsBox'>
	<div class='ipsBox_container'>
		{$content}
	</div>
</div>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>