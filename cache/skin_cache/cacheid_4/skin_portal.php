<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 4               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:07 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_portal_4 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['articles'] = array('entryLastPoster','entryHasPosts','articles');
$this->_funcHooks['globalTimeline'] = array('recentLoop','isArray');
$this->_funcHooks['hookLeftMessages'] = array('isMemberPartOpen','isMemberPartFloat','isMemberPartClose','userIsStarter','lastReadTime','messageIsDeleted','notification','blockUserLink','unbanUserLink','systemMessage','topicUnavailable','userIsBanned','userIsActive','participants','protectedFolder','allFolder','unprotectedFolder','dirs','PMDisabled','changeNotifications','unlimitedInvites','inviteMoreParticipants','hasParticipants','myDirectories','almostFull','storageBar');
$this->_funcHooks['hookLeftSearch'] = array('appIsSearched','appIsSearchable','apps','forumsTab','membersTab','helpTab');
$this->_funcHooks['hookprofileuser'] = array('notifications');
$this->_funcHooks['hookSuggest'] = array('jsIsFriend','friendsEnabled','isFriend','noFriendYourself','suggestMember','isArraySuggest');
$this->_funcHooks['latestPosts'] = array('topics_hook');
$this->_funcHooks['pluginBlogs'] = array('pluginBlogs');
$this->_funcHooks['pluginInvite'] = array('pluginInvite');
$this->_funcHooks['pluginMessages'] = array('pluginMessages');
$this->_funcHooks['pluginProfileUser'] = array('pluginProfileUser');
$this->_funcHooks['pluginSearch'] = array('pluginSearch');
$this->_funcHooks['pluginSuggest'] = array('pluginSuggest');
$this->_funcHooks['pluginTimeline'] = array('pluginTimeline');
$this->_funcHooks['pluginUpdateStatus'] = array('pluginUpdateStatus');
$this->_funcHooks['poststatus'] = array('updateTwitter','updateFacebook','update','canUpdateStatus');
$this->_funcHooks['repButtons'] = array('hasNoLikes','giveRepUp','giveRepDown','canGiveRep','pos','giveRepUp','giveRepDown','canGiveRep','hasNoRep','hasPosRep','hasNegRep','isNotLike','isLike','canRep','reputationBox','giveRepDown','giveRepUp','canGiveRep','isLike','canRep','reputationBox');
$this->_funcHooks['showBlocks'] = array('templateHeader','templateFooter','showBlockCode','showBlocks');
$this->_funcHooks['showphoto'] = array('hasMore');
$this->_funcHooks['siteNavigation'] = array('links');
$this->_funcHooks['skeletonTemplate'] = array('disablelightbox');
$this->_funcHooks['statusAjax'] = array('recentLoop','isArray');
$this->_funcHooks['statusReplies'] = array('canDelete','innerLoop');
$this->_funcHooks['statusUpdates'] = array('forSomeoneElse','isValid','hasMore','maxReplies','outerLoop');
$this->_funcHooks['uploadForm'] = array('isModerating','flashuploadhelp');


}

/* -- affiliates --*/
function affiliates($links="") {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsSideBlock'>
    <h3>{$this->lang->words['aff_title']}</h3>
    {$this->settings['portal_fav']}
</div>";
return $IPBHTML;
}

/* -- articles --*/
function articles($articles) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['articles'] ) )
{
$count_97b26805fb09ae185f9ad3a717be9272 = is_array($this->functionData['articles']) ? count($this->functionData['articles']) : 0;
$this->functionData['articles'][$count_97b26805fb09ae185f9ad3a717be9272]['articles'] = $articles;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
<div class='ipsBox clear'>
    ".$this->__f__4e179b14ad813ccc7ac6bfce8811a8da($articles)."</div><br class='clearfix' />";
return $IPBHTML;
}


function __f__4e179b14ad813ccc7ac6bfce8811a8da($articles)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $articles as $topic )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
        <div class='ipsBox_container ipsPad'>        
		
            <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$topic['member_id']}", "public",'' ), "{$topic['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left ipsPad_half'><img src='{$topic['pp_small_photo']}' alt='{$r['members_display_name']} {$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_medium' /></a>
		
            <h2 class='ipsType_pagetitle'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "'>{$topic['title']}</a></h2>
            <div class='desc'>" . $this->registry->getClass('class_localization')->getDate($topic['start_date'],"DATE", 0) . "</div><br class='clear' />
        
            <div class='desc ipsType_smaller ipsPad_half'>		
                {$this->lang->words['posted_by']} " . (($topic['members_display_name']) ? ("" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($topic) : '' ) . "") : ("{$this->settings['guest_name_pre']}{$topic['starter_name']}{$this->settings['guest_name_suf']}")) . "
                {$this->lang->words['in']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$topic['id']}", "public",'' ), "{$topic['name_seo']}", "showforum" ) . "'>{$topic['name']}</a>
            </div>
            <div class='ipsType_textblock ipsPad'>
                {$topic['post']}
                <!--IBF.ATTACHMENT_{$topic['pid']}-->
            </div>
            
        </div>
        <div class='general_box'>
            <h3 class='ipsType_smaller'>
            
                <span class='right'>{$topic['share_links']}</span>
                " . $this->registry->getClass('class_localization')->formatNumber( $topic['views'] ) . " {$this->lang->words['views']} &middot;
                " . $this->registry->getClass('class_localization')->formatNumber( $topic['posts'] ) . " {$this->lang->words['replies']}
	
                " . (($topic['posts']) ? ("( {$this->lang->words['last_reply_by']} " . (($topic['last_poster_id']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$topic['last_poster_id']}", "public",'' ), "{$topic['seo_last_name']}", "showuser" ) . "'>{$topic['last_poster_name']}</a>") : ("{$this->settings['guest_name_pre']}{$topic['last_poster_name']}{$this->settings['guest_name_suf']}")) . " )") : ("")) . "
                	
            </h3>
                        
	</div>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- blog_cblocks --*/
function blog_cblocks($content, $position, $hidden) {
$IPBHTML = "";
$IPBHTML .= "<div id='cblock_{$position}' class='cblock'>
    {$content}
</div>";
return $IPBHTML;
}

/* -- globalTimeline --*/
function globalTimeline($rows, $pages) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['globalTimeline'] ) )
{
$count_69c69ea1c2e610d1eebc557bd06ee863 = is_array($this->functionData['globalTimeline']) ? count($this->functionData['globalTimeline']) : 0;
$this->functionData['globalTimeline'][$count_69c69ea1c2e610d1eebc557bd06ee863]['rows'] = $rows;
$this->functionData['globalTimeline'][$count_69c69ea1c2e610d1eebc557bd06ee863]['pages'] = $pages;
}
$IPBHTML .= "<div>
    " . ( method_exists( $this->registry->getClass('output')->getTemplate('timeline'), 'header' ) ? $this->registry->getClass('output')->getTemplate('timeline')->header() : '' ) . "
    <div style=\"clear:both\"></div>
    <br />
    <div class=\"stream-item\" id=\"stream-load\">
        <div class=\"new-tweets-bar js-new-tweets-bar\">
                <span id='news-bar-item' data-count-id='0'>0</span> {$this->lang->words['news_pub']}
        </div>
    </div>
    <div id=\"statuses\">
    " . ((is_array($rows)) ? ("
        ".$this->__f__f0e8b2f59ffc69d2129f700939b7c920($rows,$pages)."        ") : ("
        <div class=\"ipsBox\">
            <div class=\"ipsBox_container ipsPad\">
                <h1>{$this->lang->words['noupdates']}</h1>
            </div>
        </div>
    ")) . "
    <div id=\"container\"></div>
    </div>
</div>
<div id=\"pages\">
    {$pages}
</div>";
return $IPBHTML;
}


function __f__f0e8b2f59ffc69d2129f700939b7c920($rows, $pages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $index => $data )
	{
		
$this->templateVars['finalPage'] = "";
$this->__default__templateVars['finalPage'] = "";
if ( $index == (count($rows) - 1) )
{
	$this->templateVars['finalPage'] = " ipsBoxFinal";
}
else {$this->templateVars['finalPage'] = $this->__default__templateVars['finalPage']; }

		$__iteratorCount++;
		$_ips___x_retval .= "
                        " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusIndividual' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusIndividual($data) : '' ) . "
        
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- hookinvitefriend --*/
function hookinvitefriend($invitations = 10) {
$IPBHTML = "";
$IPBHTML .= "" . (((int)$this->memberData['member_id'] && $invitations > 0) ? ("
    <div class='clearfix' id=\"sendInvitations\">
        <h3><span>" . sprintf($this->lang->words['invitations'], $invitations) . "</span></h3>
        <div class='_sbcollapsable'>
            <form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=ajax&amp;section=ajaxmember&md5check={$this->member->form_hash}&do=process_form&login=", "public",'' ), "", "" ) . "\" method=\"post\" name=\"REG\" id='send_invite'>
                <fieldset>
                    <ul class='ipsForm ipsForm_horizontal'>
                        <li class='ipsField'>
                            <p class=''>
                                <input type='text' placeholder=\"correo@dominio.com\" class='input_text' id='email' size='30' value='{$this->request['EmailAddress']}' name='EmailAddress' style=\"margin: 6px 0px; width: 200px;\" /><br />
                                <span class='desc primary lighter'>
                                    <div id=\"showErrors\"><span class='error'></span></div>
                                </span>
                            </p>
                            <br />
					<label class=\"ui-button\">
						<input type=\"submit\" value=\"Enviar\">
					</label>
                        </li>
                    </ul>
                </fieldset>
        </form>
        </div>
    </div>
") : ("")) . "";
return $IPBHTML;
}

/* -- hookLeftMessages --*/
function hookLeftMessages($jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['hookLeftMessages'] ) )
{
$count_54b4be83224257ab101d30a4aa611d30 = is_array($this->functionData['hookLeftMessages']) ? count($this->functionData['hookLeftMessages']) : 0;
$this->functionData['hookLeftMessages'][$count_54b4be83224257ab101d30a4aa611d30]['jumpmenu'] = $jumpmenu;
$this->functionData['hookLeftMessages'][$count_54b4be83224257ab101d30a4aa611d30]['dirData'] = $dirData;
$this->functionData['hookLeftMessages'][$count_54b4be83224257ab101d30a4aa611d30]['totalData'] = $totalData;
$this->functionData['hookLeftMessages'][$count_54b4be83224257ab101d30a4aa611d30]['topicParticipants'] = $topicParticipants;
$this->functionData['hookLeftMessages'][$count_54b4be83224257ab101d30a4aa611d30]['inlineError'] = $inlineError;
$this->functionData['hookLeftMessages'][$count_54b4be83224257ab101d30a4aa611d30]['deletedTopic'] = $deletedTopic;
}
$IPBHTML .= "" . (($this->registry->getCurrentApplication() == 'members' && $this->request['module'] == 'messaging') ? ("<br />
	" . $this->registry->getClass('output')->addJSModule("messenger", "0" ) . "
	<script type=\"text/javascript\">
		ipb.messenger.disabled  = " . intval($this->memberData['members_disable_pm']) . ";
	</script>
	" . (($this->memberData['members_disable_pm']) ? ("
	<noscript>
		" . ( method_exists( $this->registry->getClass('output')->getTemplate('messaging'), 'messengerDisabled' ) ? $this->registry->getClass('output')->getTemplate('messaging')->messengerDisabled() : '' ) . "
	</noscript>
	") : ("")) . "
	<div id='messenger_utilities' class='left'>
		<!-- Show topic participants -->
		" . ((is_array( $topicParticipants ) and count( $topicParticipants )) ? ("<div class='ipsSideBlock' id='participants'>
				<h3 class='bar'>{$this->lang->words['participants']}</h3>
				<ul id='participants_list' class='ipsList_withminiphoto'>
					".$this->__f__b63bb45ac653540d886f65ff00906023($jumpmenu,$dirData,$totalData,$topicParticipants,$inlineError,$deletedTopic)."					
				</ul>
				<ul class='post_controls'>
					<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=toggleNotifications&amp;topicID={$this->request['topicID']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['toggle_noti_title']}'>
						" . (($topicParticipants[ $this->memberData['member_id'] ]['map_ignore_notification']) ? ("
							{$this->lang->words['turn_noti_on']}
						") : ("
							{$this->lang->words['turn_noti_off']}
						")) . "
						</a>
					</li>
				</ul>
			</div>
			" . (($this->memberData['g_max_mass_pm'] && count( $topicParticipants ) < $this->memberData['g_max_mass_pm'] && ! $deletedTopic) ? ("<div id='invite_more' class='ipsSideBlock'>
					<h3>{$this->lang->words['invite_part']}</h3>
					<div id='invite_more_dialogue'>
						<form method='post' action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=addParticipants", "public",'' ), "", "" ) . "'>
						<input type='hidden' name='authKey' value='{$this->member->form_hash}' />
						<input type='hidden' name='topicID' value='{$this->request['topicID']}' />
						<input type='hidden' name='st' value='{$this->request['st']}' />
						<ul><li><label for='invite_more_autocomplete'>{$this->lang->words['enter_member_names']}</label> 
						<input type='text' class='input_text' name='inviteNames' id='invite_more_autocomplete' value='{$this->request['inviteNames']}' size='38' /> 
						<br /><span class='desc'>[x]{$this->lang->words['separated_with_commas']}</span> 
						</li></ul><fieldset class='submit'><input type='submit' class='input_submit' value='{$this->lang->words['part_add']}' />  
						{$this->lang->words['or']} <a href='#' id='invite_more_cancel' class='cancel' title='{$this->lang->words['cancel']}'>{$this->lang->words['cancel']}</a></fieldset></form>
					</div>
					<div id='invite_more_default'>
						" . (($this->memberData['g_max_mass_pm'] == 0) ? ("
							<p class='desc'>{$this->lang->words['can_invite_unlimited']}</p>
							<script type='text/javascript'>
								ipb.messenger.invitesLeft = parseInt( 0 );
								ipb.messenger.nameText = ipb.lang['enter_unlimited_names'];
							</script>
						") : ("
							<p class='desc'>{$this->lang->words['may_invite_upto']} <strong>" . ( $this->memberData['g_max_mass_pm'] - count( $topicParticipants ) ) . "</strong> {$this->lang->words['more_members']}</p>
							<script type='text/javascript'>
								ipb.messenger.invitesLeft = parseInt( " . ( $this->memberData['g_max_mass_pm'] - count( $topicParticipants ) ) . " );
								ipb.messenger.nameText = ipb.lang['enter_x_names'].gsub(/\\[x\\]/, ipb.messenger.invitesLeft);
							</script>
						")) . "
						<ul class='post_controls'>
							<li id='add_participants'><a href='#' title='{$this->lang->words['add_participants']}'>{$this->lang->words['part_add']}</a></li>
						</ul>
					</div>
				</div>") : ("")) . "") : ("")) . "
		<div id='message_search' class='ipsSideBlock'>
			<h3>{$this->lang->words['search_messages']}</h3>
			<form action='{$this->settings['base_url']}app=members&amp;module=messaging&amp;section=search' method='post'>
				<fieldset>
					<input type='text' name='searchFor' class='input_text' size='15' style='width: 60%' /> <input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
				</fieldset>
			</form>
		</div>

		<div id='folder_list' class='ipsSideBlock'>
			<h3>{$this->lang->words['folders']}</h3>
			<ol id='folders'>
				" . ((count($dirData)) ? ("
					".$this->__f__1826c3f218471162aecc3a0d99134381($jumpmenu,$dirData,$totalData,$topicParticipants,$inlineError,$deletedTopic)."				") : ("")) . "
			</ol>
			<div class='clearfix post_controls'>
				<!-- ul class='post_controls'>
					<li id='add_folder'><a href='#' title='{$this->lang->words['add_folder']}'>{$this->lang->words['folder_add']}</a></li>
					<li id='edit_folders'><a href='#' title='{$this->lang->words['edit_folders']}'>{$this->lang->words['folders_edit']}</a></li>
				</ul-->
			</div>
			<script type='text/javascript'>
			//<![CDATA[
				ipb.messenger.folderTemplate = \"<li class='folder' id='f_[id]'>" . $this->registry->getClass('output')->getReplacement("folder_generic") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=showFolder&amp;folderID=[id]", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['go_to_folder']}' rel='folder_name'>[name]</a> <span class='total rounded'>[total]</span><span class='edit_folders' style='display: none'><a href='#' id='delete_[id]' class='f_delete' title='{$this->lang->words['delete_folder_title']}'>" . $this->registry->getClass('output')->getReplacement("folder_delete") . "</a> <a href='#' id='empty_[id]' class='f_empty' title='{$this->lang->words['empty_folder_title']}'>" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>\";
			//]]>
			</script>
		</div>
		" . (($this->memberData['g_max_messages'] > 0) ? ("<div id='space_allowance' class='ipsSideBlock'>
				<h3>{$this->lang->words['storage']}</h3>
				<p>{$this->lang->words['your_messenger_storage']}</p>
				<p class='progress_bar' title='" . sprintf( $this->lang->words['pmpc_full_string'], $totalData['full_percent'] ) . "' " . (($totalData['full_percent'] > 80) ? ("class='limit'") : ("")) . ">
					<span style='width: {$totalData['full_percent']}%'>{$totalData['full_percent']}%</span>
				</p>
				<p>
					<span class='desc'>{$totalData['full_percent']}% {$this->lang->words['of_your_quota']} ({$this->memberData['g_max_messages']} {$this->lang->words['messages']})</span>
				</p>
			</div>") : ("")) . "
		<br />
		
		<!--<ul class='topic_buttons'>
			<li class='important'></li>
		</ul>-->
	</div>") : ("")) . "";
return $IPBHTML;
}


function __f__b63bb45ac653540d886f65ff00906023($jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $topicParticipants as $memberID => $memberData )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li class='clearfix'>
							" . (($memberData['member_id']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", "public",'' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'>") : ("")) . "<img src='{$memberData['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini" . ((!$memberData['member_id']) ? (" left") : ("")) . "' />" . (($memberData['member_id']) ? ("</a>") : ("")) . "
							<p class='list_content'>
								" . (($memberData['map_user_active']) ? ("" . (($memberData['map_is_starter']) ? ("
										<span class='name starter'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($memberData) : '' ) . "</span>
									") : ("
										<span class='name'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($memberData) : '' ) . "</span>
									")) . "
									<br />
									<span class='ipsType_smaller desc'>
										" . (($memberData['_topicDeleted']) ? ("
											<em>{$this->lang->words['topic_deleted']}</em>
										") : ("{$this->lang->words['last_read']}
											" . (($memberData['map_read_time']) ? ("
												" . $this->registry->getClass('class_localization')->getDate($memberData['map_read_time'],"short", 0) . "
											") : ("
												<em>{$this->lang->words['not_yet_read']}</em>
											")) . "")) . "
										" . (($memberData['map_ignore_notification']) ? ("
											<span class='ipsBadge ipsBadge_lightgrey right'>{$this->lang->words['msg_no_notify']}</span>
										") : ("")) . "						
									</span>
									" . ((! $memberData['map_is_starter'] AND $memberData['_canBeBlocked'] AND ($topicParticipants[ $this->memberData['member_id'] ]['map_is_starter'] OR $this->memberData['g_is_supmod']) AND ( $memberData['map_user_id'] != $this->memberData['member_id'] ) AND !$memberData['_topicDeleted']) ? ("
										<br /><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=blockParticipant&amp;topicID={$this->request['topicID']}&amp;memberID={$memberData['map_user_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\" title='{$this->lang->words['block_this_user']}' class='cancel'>{$this->lang->words['block']}</a>
									") : ("")) . "") : ("" . (($memberData['map_user_banned']) ? ("<span class='name blocked'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", "public",'' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$memberData['members_display_name_short']}</strong></a></span>
										<br />
										<span class='desc'>{$this->lang->words['user_is_blocked']}</span>
										<br />
										" . (($memberData['_canBeBlocked'] AND ($topicParticipants[ $this->memberData['member_id'] ]['map_is_starter'] OR $this->memberData['g_is_supmod'])) ? ("
											<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=unblockParticipant&amp;topicID={$this->request['topicID']}&amp;memberID={$memberData['map_user_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\" title='{$this->lang->words['unblock_this_user']}' class='cancel'>{$this->lang->words['unblock']}</a>
										") : ("")) . "") : ("<span class='name left_convo'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", "public",'' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$memberData['members_display_name_short']}</strong></a></span>
										<br />
										<span class='desc'>
											" . (($memberData['_topicDeleted']) ? ("
											<em>{$this->lang->words['topic_deleted']}</em>
											") : ("" . (($memberData['map_is_system']) ? ("
													{$this->lang->words['is_unable_part']}
												") : ("
													{$this->lang->words['has_left_convo']}
												")) . "")) . "
										</span>")) . "")) . "
							</p>
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__1826c3f218471162aecc3a0d99134381($jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $dirData as $id => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . (($data['protected']) ? ("
							<li class='folder protected' id='f_{$id}'>" . $this->registry->getClass('output')->getReplacement("folder_{$id}") . "
						") : ("
							<li class='folder' id='f_{$id}'>" . $this->registry->getClass('output')->getReplacement("folder_generic") . "
						")) . "
						<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=showFolder&amp;folderID={$id}", "publicWithApp",'' ), "", "" ) . "\" title=\"{$this->lang->words['go_to_folder']}\" rel=\"folder_name\">{$data['real']}</a>
						<span class='total rounded'>
							" . (($id == 'all') ? ("
								" . intval($this->memberData['msg_count_total']) . "
							") : ("
								" . intval($data['count']) . "
							")) . "
						</span>
						" . ((! $data['protected']) ? ("
							<span class='edit_folders' style='display: none'><a href='#' id='delete_{$id}' class='f_delete' title=\"{$this->lang->words['delete_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_delete") . "</a> <a href='#' id='empty_{$id}' class='f_empty' title=\"{$this->lang->words['empty_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>
						") : ("
							<span class='edit_folders' style='display: none'><a href='#' id='empty_{$id}' class='f_empty' title=\"{$this->lang->words['empty_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>
						")) . "
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- hookLeftSearch --*/
function hookLeftSearch() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['hookLeftSearch'] ) )
{
$count_ff669cae4b6c5f0b9bf9b1e180708f9f = is_array($this->functionData['hookLeftSearch']) ? count($this->functionData['hookLeftSearch']) : 0;
}
$IPBHTML .= "" . (($this->registry->getCurrentApplication() == 'core' && $this->request['module'] == 'search') ? ("<br />
<div class='ipsLayout_left'>
        <div class=''>
                <div class='ipsSideMenu'>
                        <h4>{$this->lang->words['filter_by_app']}</h4>
                        <ul>
                                " . ((IPSLib::appIsSearchable( 'forums', 'usercontent' )) ? ("<li " . (($this->request['search_app'] == 'forums') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app=forums&amp;mid={$this->request['mid']}&amp;userMode={$this->request['userMode']}&amp;sid={$this->request['_sid']}", "public",'' ), "", "" ) . "'>" . IPSLib::getAppTitle( 'forums' ) . "</a></li>") : ("")) . "" . ((IPSLib::appIsSearchable( 'members', 'usercontent' )) ? ("<li " . (($this->request['search_app'] == 'members') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app=members&amp;mid={$this->request['mid']}&amp;userMode={$this->request['userMode']}&amp;sid={$this->request['_sid']}", "public",'' ), "", "" ) . "'>" . IPSLib::getAppTitle( 'members' ) . "</a></li>") : ("")) . "" . ((IPSLib::appIsSearchable( 'core', 'usercontent' )) ? ("<li " . (($this->request['search_app'] == 'core') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app=core&amp;mid={$this->request['mid']}&amp;userMode={$this->request['userMode']}&amp;sid={$this->request['_sid']}", "public",'' ), "", "" ) . "'>" . IPSLib::getAppTitle( 'core' ) . "</a></li>") : ("")) . "".$this->__f__4cd09eee34988ff9c1c12dc0cc647a26()."                        </ul>
                        " . (($this->request['search_app'] == 'forums') ? ("<h4>{$this->lang->words['userposts_morefilters']}</h4>
                                <ul>
                                        <li " . (($this->request['userMode'] == 'all') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app={$this->request['search_app']}&amp;mid={$this->request['mid']}&amp;sid={$this->request['_sid']}&amp;search_app_filters[{$this->request['search_app']}][searchInKey]={$this->request['search_app_filters'][$this->request['search_app']]['searchInKey']}&amp;userMode=all", "public",'' ), "", "" ) . "'>{$this->lang->words['viewall_opt_dd']}</a></li>
                                        <li " . (($this->request['userMode'] == 'title') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app={$this->request['search_app']}&amp;mid={$this->request['mid']}&amp;sid={$this->request['_sid']}&amp;search_app_filters[{$this->request['search_app']}][searchInKey]={$this->request['search_app_filters'][$this->request['search_app']]['searchInKey']}&amp;userMode=title", "public",'' ), "", "" ) . "'>{$this->lang->words['viewallt_opt_dd']}</a></li>
                                        <li " . (($this->request['userMode'] == 'content') ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app={$this->request['search_app']}&amp;mid={$this->request['mid']}&amp;sid={$this->request['_sid']}&amp;search_app_filters[{$this->request['search_app']}][searchInKey]={$this->request['search_app_filters'][$this->request['search_app']]['searchInKey']}&amp;userMode=content", "public",'' ), "", "" ) . "'>{$this->lang->words['viewallp_opt_dd']}</a></li>
                                </ul>") : ("")) . "" . ((is_array($sortIn) AND count( $sortIn )) ? ("
                                <h4>{$this->lang->words['filter_by_type']}</h4>
                                <ul>
                                        ".$this->__f__082a87f30e6928d8bc2730f04fd289ee()."                                </ul>
                        ") : ("")) . "
                </div>
        </div>
</div>") : ("")) . "";
return $IPBHTML;
}


function __f__4cd09eee34988ff9c1c12dc0cc647a26()
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->registry->getApplications() as $app )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
                                        " . ((IPSLib::appIsSearchable( $app['app_directory'], 'usercontent' ) AND !in_array( $app['app_directory'], array('core','forums','members') )) ? ("<li " . (($this->request['search_app'] == $app['app_directory']) ? ("class='active'") : ("")) . "><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app={$app['app_directory']}&amp;mid={$this->request['mid']}&amp;userMode={$this->request['userMode']}&amp;sid={$this->request['_sid']}", "public",'' ), "", "" ) . "'>" . IPSLib::getAppTitle( $app['app_directory'] ) . "</a></li>") : ("")) . "
                                
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__082a87f30e6928d8bc2730f04fd289ee()
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $sortIn as $id => $_data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
                                                <li " . (($this->request['search_app_filters'][$this->request['search_app']]['searchInKey'] == $_data[0]) ? ("class='active'") : ("")) . ">
                                                        <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;search_app={$this->request['search_app']}&amp;mid={$this->request['mid']}&amp;userMode={$this->request['userMode']}&amp;sid={$this->request['_sid']}&amp;search_app_filters[{$this->request['search_app']}][searchInKey]={$_data[0]}", "public",'' ), "", "" ) . "'>{$_data[1]}</a>
                                                </li>
                                        
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- hookprofileuser --*/
function hookprofileuser() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['hookprofileuser'] ) )
{
$count_20db88159d204d4bc8c759503cc405d1 = is_array($this->functionData['hookprofileuser']) ? count($this->functionData['hookprofileuser']) : 0;
}
$IPBHTML .= "" . (((int)$this->request['showuser'] == 0 || (int)$this->request['showuser'] == (int)$this->memberData['member_id']) ? ("<div id=\"profile-user\">
		<div class=\"profile-name\"><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$this->memberData['member_id']}", "public",'' ), "{$this->memberData['members_seo_name']}", "showuser" ) . "\"  title='{$this->lang->words['your_profile']}'>{$this->memberData['members_display_name']}</a></div>
		<ul class=\"left-navigator\">
			<li style='display:none;'><a class=\"favourites\" href=\"#\">Mis favoritos<span class=\"lefticon\"></span><span class=\"count\">0</span></a></li>
			<li><a class=\"messages\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging", "public",'' ), "", "" ) . "' title='{$this->lang->words['your_messenger']}'>Mensajes<span class=\"lefticon\"></span><span class=\"count\">
				" . (($this->memberData['msg_count_new']) ? ("{$this->memberData['msg_count_new']}") : ("0")) . "
			</span>
			</a>
			</li>
			<li>
				<a class=\"blogs\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog", "public",'' ), "", "" ) . "\">Blogs
					<span class=\"lefticon\"></span>
					<span class=\"count\">0</span>
				</a>
			</li>
			<li>
				<a class=\"events\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "/gallery/member/{$this->memberData['member_id']}-{$this->memberData['members_seo_name']}", "public",'' ), "", "" ) . "\">Fotos
					<span class=\"lefticon\"></span>
					<span class=\"count\">0</span>
				</a>
			</li>
		</ul>
	</div>") : ("
	<ul class=\"profile-icons\">
	    <li id=\"pm_xxx_" . intval($this->request['showuser']) . "\" class='pm_button'><a class=\"messages\" href=\"{$this->settings['base_url']}app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$this->request['showuser']}\"></a></li>
	    <li><a class=\"favourites\" href=\"#\"></a></li>
	    <li><a class=\"events\" href=\"#\"></a></li>
	</ul>
	<ul class=\"leftNav clear\">
		<li><a class=\"puesto\" href=\"#\">
				<span class=\"title\">Puesto</span>
				<span class=\"info\">Administrador Financiero</span>
				<span class=\"lefticon\"></span>
			</a>
		</li>
		<li><a class=\"viven\" href=\"#\">
				<span class=\"title\">Vive en</span>
				<span class=\"info\">Distrito Federal</span>
				<span class=\"lefticon\"></span>
			</a>
		</li>
		<li><a class=\"antiguedad\" href=\"#\">
				<span class=\"title\">Antiguedad</span>
				<span class=\"info\">3 a&ntilde;os</span>
				<span class=\"lefticon\"></span>
			</a>
		</li>
		<li><a class=\"cumpleanos\" href=\"#\">
				<span class=\"title\">Cumplea&ntilde;os</span>
				<span class=\"info\">16 de Noviembre</span>
				<span class=\"lefticon\"></span>
			</a>
		</li>
		<li><a class=\"pasatiempos\" href=\"#\">
				<span class=\"title\">Pasatiempos</span>
				<span class=\"info\">Leer, cine, soccer, familia</span>
				<span class=\"lefticon\"></span>
			</a>
		</li>
	</ul>
")) . "";
return $IPBHTML;
}

/* -- hookSuggest --*/
function hookSuggest($members) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['hookSuggest'] ) )
{
$count_821073918c0392f765ea18b2af6d1e08 = is_array($this->functionData['hookSuggest']) ? count($this->functionData['hookSuggest']) : 0;
$this->functionData['hookSuggest'][$count_821073918c0392f765ea18b2af6d1e08]['members'] = $members;
}
$IPBHTML .= "" . ((is_array($members) && count($members) > 0) ? ("
    <div class=\"clearfix\" id=\"suggestfriends\">
        <h3>
            {$this->lang->words['mightknow']}
        </h3>
        <ul class=\"activity-feed\">
	        ".$this->__f__8271ec2ccf17b4fc1381ac901dde3439($members)."      </ul>
    </div>
") : ("")) . "";
return $IPBHTML;
}


function __f__8271ec2ccf17b4fc1381ac901dde3439($members)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $members as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<script type='text/javascript'>
						//<![CDATA[
							ipb.profile.viewingProfile = parseInt( {$member['member_id']} );
							" . (($this->memberData['member_id']) ? ("
								ipb.templates['remove_friend'] = \"\";
								ipb.templates['add_friend'] = \"\";
							") : ("")) . "
							ipb.templates['edit_status'] = \"<span id='edit_status'><input type='text' class='input_text' style='width: 60%' id='updated_status' maxlength='150' /> <input type='submit' value='{$this->lang->words['save']}' class='input_submit' id='save_status' /> &nbsp;<a href='#' id='cancel_status' class='cancel' title='{$this->lang->words['cancel']}'>{$this->lang->words['cancel']}</a></span>\";
							" . (($this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("" . ((IPSMember::checkFriendStatus( $member['member_id'] )) ? ("
									ipb.profile.isFriend = true;
								") : ("
									ipb.profile.isFriend = false;
								")) . "") : ("")) . "
						//]]>
						</script>
	                    <li class=\"clearfix\">
	                        <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink'>
	                           <img src='{$member['pp_thumb_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto_mini' />
	                        </a>
	                        <div class=\"activity\" style=\"margin-left: 4px !important; display:inline-block;\">
	                            " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "
	                            <a href=\"\" class=\"friends\">{$member['common']} amigos en com&uacute;n</a>
	                        </div>
	                        " . (($this->memberData['member_id'] AND $this->memberData['member_id'] != $member['member_id'] && $this->settings['friends_enabled'] AND $this->memberData['g_can_add_friends']) ? ("<div class=\"friend_toggle_suggest\">
	                            	" . ((!IPSMember::checkFriendStatus( $member['member_id'] )) ? ("
				                        <a class=\"add-friend\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;section=friends&amp;module=profile&amp;do=add&amp;member_id={$member['member_id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "' title='{$this->lang->words['add_friend']}'>Agregar a mis amigos</a>
	                            	") : ("")) . "
	                            </div>") : ("")) . "
	                    </li>
	        
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- latestPosts --*/
function latestPosts($topics=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['latestPosts'] ) )
{
$count_97cdddb268c6a507c500ff61af155044 = is_array($this->functionData['latestPosts']) ? count($this->functionData['latestPosts']) : 0;
$this->functionData['latestPosts'][$count_97cdddb268c6a507c500ff61af155044]['topics'] = $topics;
}
$IPBHTML .= "<div class='ipsSideBlock'>
     <h3>{$this->lang->words['discuss_title']}</h3>
		<ul class='ipsList_withminiphoto'>
		".$this->__f__4d2be0f5794dc9c6f877667dcb26424f($topics)."		</ul>
</div>";
return $IPBHTML;
}


function __f__4d2be0f5794dc9c6f877667dcb26424f($topics=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $topics as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<li class='clearfix'>
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$r['member_id']}", "public",'' ), "{$r['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$r['pp_mini_photo']}' alt=\"{$r['members_display_name']}{$this->lang->words['photo']}\" class='ipsUserPhoto ipsUserPhoto_mini' /></a>
			<div class='list_content'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$r['tid']}", "public",'' ), "{$r['title_seo']}", "showtopic" ) . "' rel='bookmark' class='ipsType_small' title='{$this->lang->words['view_topic']}'>{$r['topic_title']}</a>
				<p class='desc ipsType_smaller'>
					" . (($r['members_display_name']) ? ("" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r) : '' ) . "") : ("{$this->settings['guest_name_pre']}{$r['starter_name']}{$this->settings['guest_name_suf']}")) . "
					- " . $this->registry->getClass('class_localization')->getDate($r['start_date'],"short", 0) . "
				</p>
			</div>
		</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- onlineUsers --*/
function onlineUsers($active) {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsSideBlock'>
    <h3><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=online&amp;section=online", "public",'' ), "", "" ) . "\">{$this->lang->words['online_title']}</a></h3>
		<span class='desc'>" . sprintf( $this->lang->words['online_split'], intval($active['MEMBERS']), intval($active['visitors']), intval($active['ANON']) ) . "</span>
		<br /><br />
		<p>
			<span class='name'>" . implode( ",</span> <span class='name'>", $active['NAMES'] ) . "</span>					
		</p>
</div>";
return $IPBHTML;
}

/* -- pluginBlogs --*/
function pluginBlogs($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginBlogs'] ) )
{
$count_cb4d742a30360ad6a6e1519fac5e226d = is_array($this->functionData['pluginBlogs']) ? count($this->functionData['pluginBlogs']) : 0;
$this->functionData['pluginBlogs'][$count_cb4d742a30360ad6a6e1519fac5e226d]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginBlogs.pluginBlogs.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginInvite --*/
function pluginInvite($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginInvite'] ) )
{
$count_ad4f3b2eec3fdd98edc8694b2469a61e = is_array($this->functionData['pluginInvite']) ? count($this->functionData['pluginInvite']) : 0;
$this->functionData['pluginInvite'][$count_ad4f3b2eec3fdd98edc8694b2469a61e]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginInvite.pluginInvite.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginMessages --*/
function pluginMessages($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginMessages'] ) )
{
$count_6a9cd99a62d4583702db9e999518258b = is_array($this->functionData['pluginMessages']) ? count($this->functionData['pluginMessages']) : 0;
$this->functionData['pluginMessages'][$count_6a9cd99a62d4583702db9e999518258b]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginMessages.pluginMessages.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginProfileUser --*/
function pluginProfileUser($active=true) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginProfileUser'] ) )
{
$count_01bea036f67320b8b4d163071428f3f8 = is_array($this->functionData['pluginProfileUser']) ? count($this->functionData['pluginProfileUser']) : 0;
$this->functionData['pluginProfileUser'][$count_01bea036f67320b8b4d163071428f3f8]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginProfileUser.pluginProfileUser.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginSearch --*/
function pluginSearch($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginSearch'] ) )
{
$count_3ade702d3eb187d455a024ee5211ccc0 = is_array($this->functionData['pluginSearch']) ? count($this->functionData['pluginSearch']) : 0;
$this->functionData['pluginSearch'][$count_3ade702d3eb187d455a024ee5211ccc0]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginSearch.pluginSearch.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginSuggest --*/
function pluginSuggest($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginSuggest'] ) )
{
$count_4d1e54ef1cdf55da78fb21f1f6951dd1 = is_array($this->functionData['pluginSuggest']) ? count($this->functionData['pluginSuggest']) : 0;
$this->functionData['pluginSuggest'][$count_4d1e54ef1cdf55da78fb21f1f6951dd1]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginSuggest.pluginSuggest.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginTimeline --*/
function pluginTimeline($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginTimeline'] ) )
{
$count_05fa0253c5195daca7e682450ad2b9d2 = is_array($this->functionData['pluginTimeline']) ? count($this->functionData['pluginTimeline']) : 0;
$this->functionData['pluginTimeline'][$count_05fa0253c5195daca7e682450ad2b9d2]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginTimeline.pluginTimeline.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginUpdateStatus --*/
function pluginUpdateStatus($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginUpdateStatus'] ) )
{
$count_2b8c5497d4c02eac9570bc55658867ff = is_array($this->functionData['pluginUpdateStatus']) ? count($this->functionData['pluginUpdateStatus']) : 0;
$this->functionData['pluginUpdateStatus'][$count_2b8c5497d4c02eac9570bc55658867ff]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginUpdateStatus.pluginUpdateStatus.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pollWrapper --*/
function pollWrapper($content='',$topic=array()) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
<div class='ipsSideBlock'>
    <h3><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "'>{$this->lang->words['poll_title']}</a></h3>
<div class='ipsPad'>
    {$content['html']}</div>
</div>";
return $IPBHTML;
}

/* -- poststatus --*/
function poststatus($upload, $sessionKey) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['poststatus'] ) )
{
$count_3a6308a994a5bd2f7a63517fb9e1616c = is_array($this->functionData['poststatus']) ? count($this->functionData['poststatus']) : 0;
$this->functionData['poststatus'][$count_3a6308a994a5bd2f7a63517fb9e1616c]['upload'] = $upload;
$this->functionData['poststatus'][$count_3a6308a994a5bd2f7a63517fb9e1616c]['sessionKey'] = $sessionKey;
}
$IPBHTML .= "" . (($this->registry->getClass('memberStatus')->canCreate( $this->memberData ) && !($this->settings['board_offline'] && !$this->memberData['g_access_offline'])) ? ("<form id='statusFormAjax' action='{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=new&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}' method='post'><!-- jb -->
	    <div style=\"background: #E1E1E1;\" class=\"mentions-input-box mentions-div-box\">
			<div>
				<textarea class='mention' id=\"status_update\" name='content' placeholder='{$this->lang->words['use_mentions']}' rows=\"1\"></textarea>

			<!-- input type='submit' id='status_submit_global' class='ipsButton_secondary' value='{$this->lang->words['global_update_status']}' /-->
				" . (((IPSLib::twitter_enabled() OR IPSLib::fbc_enabled() ) AND ( $this->memberData['fb_uid'] OR $this->memberData['twitter_id'] )) ? ("" . ((IPSLib::twitter_enabled() AND ( $this->memberData['twitter_id'] )) ? ("<input type='checkbox' id='su_Twitter' value='1' name='su_TwitterGlobal' /> <label for='su_Twitter' class='desc ipsType_smaller'>{$this->lang->words['twitter']}</label>") : ("")) . " &nbsp; 
					" . ((IPSLib::fbc_enabled() AND ( $this->memberData['fb_uid'] )) ? ("&nbsp;<input type='checkbox' id='su_Facebook' value='1' name='su_FacebookGlobal' /> <label for='su_Facebook' class='desc ipsType_smaller'>{$this->lang->words['facebook']}</label>") : ("")) . "") : ("")) . "
			</div>
			<div style=\"float: right; position: absolute; top: 8px;right: 8px;\">
				<input type=\"button\" class=\"attach-file\" name=\"\" value=\"\" id=\"attach-file\">
				<span id=\"media_attachments\">
				</span>
			</div>
			<a href=\"{$this->settings['base_url']}app=portal&module=ajax&section=metauris&md5check={$this->member->form_hash}\" id=\"attach_link\">{$this->lang->words['attach_link']}</a>
			<input type=\"hidden\" value=\"{$sessionKey}\" name=\"sessionKey\" id=\"sessionKey\" />
			{$upload}<input type=\"submit\" id=\"status_submit_global\" value=\"Publicar\" class=\"ui-button\" style=\"float: right; margin-top: 6px;\" />
	    </div>
	    <!-- input type=\"button\" id=\"submitUrl\" value=\"Adjuntar enlace\" /-->
<div align=\"center\">
	<div id=\"atc_bar\" align=\"center\">
		<input type=\"hidden\" name=\"cur_image\" id=\"cur_image\" />
		<div id=\"loader\">
			<div id=\"attach_content\" style=\"display:none\">
				<div id=\"atc_images\"></div>
				<div id=\"atc_info\">
				 
					<label id=\"atc_title\"></label>
					<label id=\"atc_url\"></label>
					<br clear=\"all\" />
					<label id=\"atc_desc\"></label>
					<br clear=\"all\" />
				</div>
				<div id=\"atc_total_image_nav\" >
					<a href=\"#\" id=\"prev\"><img src=\"{$this->settings['img_url']}/prev.png\"  alt=\"Prev\" border=\"0\" /></a><a href=\"#\" id=\"next\"><img src=\"{$this->settings['img_url']}/next.png\" alt=\"Next\" border=\"0\" /></a>
				</div>
			 
				<div id=\"atc_total_images_info\" >
					Mostrando <span id=\"cur_image_num\">1</span> de <span id=\"atc_total_images\">1</span> im&aacute;genes
				</div>
				<br clear=\"all\" />
			</div>
		</div>
		<br clear=\"all\" />
	</div>
</div>
	</form>") : ("")) . "
<br />
<hr />";
return $IPBHTML;
}

/* -- repButtons --*/
function repButtons($member, $data=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['repButtons'] ) )
{
$count_bca5d0fc57bca78e2c26ee7e0318ab43 = is_array($this->functionData['repButtons']) ? count($this->functionData['repButtons']) : 0;
$this->functionData['repButtons'][$count_bca5d0fc57bca78e2c26ee7e0318ab43]['member'] = $member;
$this->functionData['repButtons'][$count_bca5d0fc57bca78e2c26ee7e0318ab43]['data'] = $data;
}

// Apps can set the key empty to disable, but this will allow all apps to use the popup to show who repped
    if( !isset($data['jsCallback']) )
    {
        $data['jsCallback'] = "ipb.global.repPopUp( this, {$data['primaryId']}, '{$data['app']}', '{$data['type']}' );";
    }
    $repClickable   = ( $this->memberData['gbw_view_reps'] AND $data['jsCallback'] ) ? 'onclick="' . $data['jsCallback'] . '"' : '';

$this->templateVars['repClickable'] = "";
$this->__default__templateVars['repClickable'] = "";
if ( $this->memberData['gbw_view_reps'] )
{
	$this->templateVars['repClickable'] = " clickable";
}
else {$this->templateVars['repClickable'] = $this->__default__templateVars['repClickable']; }
$IPBHTML .= "<!--div style=\"display:inline-block; width: 100%;\">
" . (($this->settings['reputation_enabled']) ? ("" . ((!( $this->settings['reputation_protected_groups'] && in_array( $member['member_group_id'], explode( ',', $this->settings['reputation_protected_groups'] ) ) ) and $this->memberData['member_id']) ? ("" . (($this->settings['reputation_point_types'] == 'like') ? ("<div class='ipsLikeBar right clearfix' id='{$data['domCountId']}' style=\"margin: 0px;\">
                <ul class='ipsList_inline'>
                    " . ((!isset($data['hide_text']) OR !$data['hide_text']) ? ("<li id=\"{$data['domLikeStripId']}\" class='ipsLikeBar_info' " . ((!$data['likeFormatted']) ? ("style=\"display:none\"") : ("")) . ">
                            {$data['likeFormatted']}
                        </li>") : ("")) . "
                    " . ((IPSMember::canGiveRep( $data, $member ) !== false) ? ("<li " . ((IPSMember::canRepUp( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a class='ipsLikeButton ipsLikeButton_enabled rep_up' href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_up']}'>{$this->lang->words['like_this']}</a>
                        </li>
                        <li " . ((IPSMember::canRepDown( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a class='ipsLikeButton ipsLikeButton_disabled rep_down' href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_down']}'>{$this->lang->words['unlike_this']}</a>
                        </li>") : ("")) . "
                </ul>
            </div>") : ("<div class='rep_bar clearfix " . ((!$data['position'] || $data['position'] == 'right') ? ("right") : ("")) . "' id='{$data['domCountId']}'>
                                <ul class='ipsList_inline'>
                    " . ((IPSMember::canGiveRep( $data, $member ) !== false) ? ("<li " . ((IPSMember::canRepUp( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' class='rep_up' title='{$this->lang->words['reputation_up']}'>" . $this->registry->getClass('output')->getReplacement("rep_up") . "</a>
                        </li>
                        <li " . ((IPSMember::canRepDown( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' class='rep_down' title='{$this->lang->words['reputation_down']}'>" . $this->registry->getClass('output')->getReplacement("rep_down") . "</a>
                        </li>") : ("")) . "
                    " . (($this->settings['reputation_point_types'] != 'like') ? ("" . (($data['rep_points'] == 0) ? ("
                            <li><span class='reputation zero rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
                        ") : ("")) . "
                        " . (($data['rep_points'] > 0) ? ("
                            <li><span class='reputation positive rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
                        ") : ("")) . "
                        " . (($data['rep_points'] < 0) ? ("
                            <li><span class='reputation negative rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
                        ") : ("")) . "
                            " . intval($data['rep_points']) . "
                            </span>
                        </li>") : ("")) . "
                </ul>
            </div>")) . "") : ("")) . "") : ("")) . "
</div-->
" . (($this->settings['reputation_enabled']) ? ("" . ((!( $this->settings['reputation_protected_groups'] && in_array( $member['member_group_id'], explode( ',', $this->settings['reputation_protected_groups'] ) ) ) and $this->memberData['member_id']) ? ("" . (($this->settings['reputation_point_types'] == 'like') ? ("<div class='' id='{$data['domCountId']}' style=\"margin: 0px; display:inline-block;\">
                " . ((IPSMember::canGiveRep( $data, $member ) !== false) ? ("<a " . ((IPSMember::canRepDown( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . " class='__ipsLikeButton notlike{$data['isReply']}-{$data['primaryId']}' data-rep{$data['isReply']}-id='{$data['primaryId']}' href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_down']}'>{$this->lang->words['unlike_this']}</a>
	                
			        <a data-rep{$data['isReply']}-id='{$data['primaryId']}' " . ((IPSMember::canRepUp( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . " class='__ipsLikeButton yeslike{$data['isReply']}-{$data['primaryId']}' href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_up']}'>{$this->lang->words['like_this']}</a>") : ("")) . "
	        </div>") : ("")) . "") : ("")) . "") : ("")) . "
<script type='text/javascript'>
    ipb.global.registerReputation( '{$data['domCountId']}', { domLikeStripId: '{$data['domLikeStripId']}', app: '{$data['app']}', type: '{$data['type']}', typeid: '{$data['primaryId']}' }, parseInt('{$data['rep_points']}') );
</script>";
return $IPBHTML;
}

/* -- showBlocks --*/
function showBlocks($blocks=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['showBlocks'] ) )
{
$count_2377c391afa9c168561d9540925abe2b = is_array($this->functionData['showBlocks']) ? count($this->functionData['showBlocks']) : 0;
$this->functionData['showBlocks'][$count_2377c391afa9c168561d9540925abe2b]['blocks'] = $blocks;
}
$IPBHTML .= "" . ((is_array( $blocks ) AND count( $blocks )) ? ("
     ".$this->__f__367bf64d9a5c38db9e219e6e2b73c961($blocks)."") : ("")) . "";
return $IPBHTML;
}


function __f__367bf64d9a5c38db9e219e6e2b73c961($blocks=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $blocks as $block )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
          " . (($block['template']) ? ("<div class='clearfix'><h3>{$block['title']}</h3>") : ("")) . "
              {$block['block_code']}
          " . (($block['template']) ? ("</div>") : ("")) . "
     
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showphoto --*/
function showphoto($photo, $comment_list) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['showphoto'] ) )
{
$count_0adc66d3dbb97bee277585dc9762c95b = is_array($this->functionData['showphoto']) ? count($this->functionData['showphoto']) : 0;
$this->functionData['showphoto'][$count_0adc66d3dbb97bee277585dc9762c95b]['photo'] = $photo;
$this->functionData['showphoto'][$count_0adc66d3dbb97bee277585dc9762c95b]['comment_list'] = $comment_list;
}
$IPBHTML .= "<div class=\"inner\">
	<!-- div class=\"loader\">
		<span>85%</span>
	</div-->
	<ul class=\"imageNav\">
		<li><a href=\"#\" id=\"closeimage\"></a></li>
		<!--li><a class=\"next\" href=\"\"></a></li>
		<li><a class=\"prev\" href=\"\"></a></li-->
	</ul>
	
	<div class=\"curImage\">
		<img src=\"{$this->settings['upload_url']}/{$photo['image']}\">
		<!-- span class=\"picCounter\">Fotos <strong>2</strong> de 10</span -->
	</div>
	<div class=\"storyContent\">
		<a class=\"profilePic\" href=\"#\"><img src='{$photo['pp_thumb_photo']}' alt='{$this->lang->words['photo']}' width=\"64\" height=\"64\" /></a>
		<h6 class=\"actorName\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($photo) : '' ) . "
		</h6>
		<br class=\"clearfix\">

		<div class=\"innerContent\">
			<div class=\"actorMessage\">{$photo['caption']}</div>
                <div class='streamFooter'>
                    " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('portal')->repButtons($this->memberData, array_merge( array( 'primaryId' => $photo['status_id'], 'domLikeStripId' => 'like_status_' . $photo['status_id'], 'domCountId' => 'rep_status_' . $photo['status_id'], 'app' => 'portal', 'type' => 'id', 'likeFormatted' => $photo['like']['formatted'], 'has_given_rep' => $photo['like']['iLike'],$photo) )) : '' ) . " &#183; 
                    <a href=\"#\" id=\"_statusReplyShow-{$photo['status_id']}\"  class='___showform'>Comentar</a> &#183; 
                    <a href=\"#\">Compartir</a> &#183; 
                    <a class=\"timeAgo\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=portal&amp;module=portal&amp;section=status&amp;id={$photo['status_id']}", "public",'' ), "", "" ) . "'>" . $this->registry->getClass('class_localization')->getDate($photo['status_date_formatted_short'],"short", 0) . "</a>
                </div>
			<div class=\"commentList\">
				<ul>
					<li class=\"status_mini_wrap altrow _likes-{$photo['status_id']}\" style=\"display:" . (($photo['like']['formatted'] != '') ? ("block") : ("none")) . ";border-bottom:1px solid #C2C2C2;\"><span class=\"icon-like\"></span><span class=\"data-likes\">&nbsp;{$photo['like']['formatted']}</span></li>
                    " . (($photo['status_replies'] AND count( $photo['replies'] )) ? ("" . (($photo['status_replies'] > 3) ? ("
							<li class='status_mini_wrap altrow' id='_statusMoreWrap-{$photo['status_id']}'><span class=\"iconComments\"></span>&nbsp;<a href=\"#\" id=\"_statusMore-{$photo['status_id']}\" class='____showAll __x{$photo['status_id']}'>" . sprintf( "Mostrar todos los %d comentarios", $photo['status_replies'] ) . "</a></li>
                    	") : ("")) . "") : ("")) . "
					<li>                             
						<ul id='_statusReplies-{$photo['status_id']}' class='ipsList_withtinyphoto clear'>
						    " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusReplies' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusReplies($photo['replies'], 1) : '' ) . "
						</ul>
					</li>
					<li>
                        <div id='_statusReplyBlank-{$photo['status_id']}'></div>
                        <div id='_statusReply-{$photo['status_id']}'>
                                <ul class='ipsList_withtinyphoto reply ipsPad'>
                                        <li>
                                                <form id='_statusReplyForm-{$photo['status_id']}' action='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=status&amp;do=reply&amp;status_id={$photo['status_id']}&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}&amp;md5check={$this->member->form_hash}' method='post'>
                                                                <div class=\"status_mini_content\">
                                                                        <textarea class='status_textarea input_text mention reply' rows='1' style=\"resize: none;\" cols='50' name='comment-{$photo['status_id']}' id='_statusText-{$photo['status_id']}'></textarea>
                                                                        <div class=\"status_submit\"><input type='submit' class='____submit input_submit' id='_statusSubmit-{$photo['status_id']}' value='Comentar' /></div>
                                                                </div>
                                                </form>
                                        </li>
                                </ul>
                                <script type='text/javascript'>
                                        if( $('_statusReply-{$photo['status_id']}') )
                                        {
                                                jQuery('div#_statusReply-{$photo['status_id']}').hide();
                                        }
                                        jQuery('#_statusReplyShow-{$photo['status_id']}').click(function() {
                                                jQuery('#_statusReply-{$photo['status_id']}').show();
                                                jQuery('#_statusText-{$photo['status_id']}').focus();
                                        });
                                </script>
                        </div>
					</li>
				</ul>
			</div>
		</div>
		<br class=\"clearfix\">
	</div>
</div>";
return $IPBHTML;
}

/* -- siteNavigation --*/
function siteNavigation($links=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['siteNavigation'] ) )
{
$count_ad56b5df42d97691779d0a6c443dedbb = is_array($this->functionData['siteNavigation']) ? count($this->functionData['siteNavigation']) : 0;
$this->functionData['siteNavigation'][$count_ad56b5df42d97691779d0a6c443dedbb]['links'] = $links;
}
$IPBHTML .= "<div class='ipsSideBlock'>
        <h3>{$this->lang->words['links_title']}</h3>
	<ul>
		".$this->__f__f39cc3d78231b84e5224df787936a010($links)."	</ul>
</div>";
return $IPBHTML;
}


function __f__f39cc3d78231b84e5224df787936a010($links=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $links as $link )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li>&bull; <a href=\"{$link[1]}\">{$link[2]}</a></li>		
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- skeletonTemplate --*/
function skeletonTemplate($leftBlocks, $mainBlocks, $rightBlocks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['skeletonTemplate'] ) )
{
$count_ffc764252f07d3767a3a4e2bcdfd4166 = is_array($this->functionData['skeletonTemplate']) ? count($this->functionData['skeletonTemplate']) : 0;
$this->functionData['skeletonTemplate'][$count_ffc764252f07d3767a3a4e2bcdfd4166]['leftBlocks'] = $leftBlocks;
$this->functionData['skeletonTemplate'][$count_ffc764252f07d3767a3a4e2bcdfd4166]['mainBlocks'] = $mainBlocks;
$this->functionData['skeletonTemplate'][$count_ffc764252f07d3767a3a4e2bcdfd4166]['rightBlocks'] = $rightBlocks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addToDocumentHead( 'importcss', "{$this->settings['css_base_url']}style_css/{$this->registry->output->skin['_csscacheid']}/timeline.css" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'importcss', "{$this->settings['css_base_url']}style_css/{$this->registry->output->skin['_csscacheid']}/podio.style.css" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'importcss', "https://fonts.googleapis.com/css?family=PT+Sans&subset=latin" ) . "

" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<div class='ipsLayout clearfix'>
      <!-- div class='ipsLayout_left'>
           " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'showBlocks' ) ? $this->registry->getClass('output')->getTemplate('portal')->showBlocks($leftBlocks) : '' ) . "
      </div -->
      <!--div class='ipsLayout_content clearfix'>
           " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'showBlocks' ) ? $this->registry->getClass('output')->getTemplate('portal')->showBlocks($mainBlocks) : '' ) . "
      </div-->
      <!-- div class='ipsLayout_right'>
           " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'showBlocks' ) ? $this->registry->getClass('output')->getTemplate('portal')->showBlocks($rightBlocks) : '' ) . " 
      </div -->
</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "";
return $IPBHTML;
}

/* -- statusAjax --*/
function statusAjax($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['statusAjax'] ) )
{
$count_36c38f0d5dac7d0e8a90072e5b65e17b = is_array($this->functionData['statusAjax']) ? count($this->functionData['statusAjax']) : 0;
$this->functionData['statusAjax'][$count_36c38f0d5dac7d0e8a90072e5b65e17b]['rows'] = $rows;
}
$IPBHTML .= "" . ((is_array($rows)) ? ("
    ".$this->__f__c6d4051612f9b5431c5965b82443a98d($rows)."    ") : ("
    <div class=\"ipsBox\">
        <div class=\"ipsBox_container ipsPad\">
            <h1>{$this->lang->words['noupdates']}</h1>
        </div>
    </div>
")) . "";
return $IPBHTML;
}


function __f__c6d4051612f9b5431c5965b82443a98d($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $index => $data )
	{
		
$this->templateVars['finalPage'] = "";
$this->__default__templateVars['finalPage'] = "";
if ( $index == (count($rows) - 1) )
{
	$this->templateVars['finalPage'] = " ipsBoxFinal";
}
else {$this->templateVars['finalPage'] = $this->__default__templateVars['finalPage']; }

		$__iteratorCount++;
		$_ips___x_retval .= "
                " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusIndividual' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusIndividual($data) : '' ) . "
    
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusIndividual --*/
function statusIndividual($data, $notIsUtf8 = false) {
$IPBHTML = "";
$IPBHTML .= "" . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusUpdates' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusUpdates(array(
array(
   'status_id' => $data['id'],
   'status_member_id' => $data['member_id'],
   'status_date' => $data['status_date'],
   'status_content' => $data['textStatus'],
   'status_replies' => '0',
   'status_last_ids' => 'a:0:{}',
   'status_is_latest' => '1',
   'status_is_locked' => '0',
   'status_hash' => 'c07123b4b45600e9d97f6be68d758208',
   'status_imported' => '0',
   'status_creator' => 'ipb',
   'status_author_id' => $data['member_id'],
   'status_author_ip' => '::1',
   'status_approved' => '1',
   'member_id' => $data['member_id'],
   'name' => $data['member_display_name'],
   'member_group_id' => '4',
   'email' => $data['email'],
   'joined' => $data['joined'],
   'ip_address' => '::1',
   'posts' => '1',
   'title' => 'Administrator',
   'allow_admin_mails' => '0',
   'time_offset' => '',
   'skin' => '',
   'warn_level' => '',
   'warn_lastwarn' => '0',
   'language' => '1',
   'last_post' => '',
   'restrict_post' => '0',
   'view_sigs' => '1',
   'view_img' => '1',
   'bday_day' => '0',
   'bday_month' => '0',
   'bday_year' => '0',
   'msg_count_new' => '0',
   'msg_count_total' => '0',
   'msg_count_reset' => '0',
   'msg_show_notification' => '1',
   'misc' => '',
   'last_visit' => '1337707293',
   'last_activity' => '1337712229',
   'dst_in_use' => '1',
   'coppa_user' => '0',
   'mod_posts' => '0',
   'auto_track' => '0',
   'temp_ban' => '0',
   'login_anonymous' => '0&1',
   'ignored_users' => 'a:0:{}',
   'mgroup_others' => '',
   'org_perm_id' => '',
   'member_login_key' => 'e1c43dbb884afe6da191343f632c05d0',
   'member_login_key_expire' => $data['member_login_key_expire'],
   'has_blog' => '',
   'blogs_recache' => '',
   'has_gallery' => '0',
   'members_auto_dst' => '1',
   'members_display_name' => $data['members_display_name'],
   'members_seo_name' => $data['members_seo_name'],
   'members_created_remote' => '0',
   'members_disable_pm' => '0',
   'members_l_display_name' => $data['members_l_display_name'],
   'members_l_username' => $data['members_l_username'],
   'failed_logins' => '',
   'failed_login_count' => '0',
   'members_profile_views' => '0',
   'members_pass_hash' => '98fdc8bdd1352c66649071b0fb5b248e',
   'members_pass_salt' => ',CUT;',
   'member_banned' => '0',
   'member_uploader' => 'flash',
   'members_bitoptions' => '0',
   'fb_uid' => '0',
   'fb_emailhash' => '',
   'fb_lastsync' => '0',
   'members_day_posts' => '0,0',
   'live_id' => '',
   'twitter_id' => '',
   'twitter_token' => '',
   'twitter_secret' => '',
   'notification_cnt' => '0',
   'tc_lastsync' => '0',
   'fb_session' => '',
   'fb_token' => '',
   'ips_mobile_token' => '',
   'unacknowledged_warnings' => '',
   'gallery_perms' => '1:1:1',
   'pp_member_id' => '1',
    'pp_last_visitors' => '',
   'pp_rating_hits' => '0',
   'pp_rating_value' => '0',
   'pp_rating_real' => '0',
   'pp_main_photo' => $data['pp_main_photo'],
   'pp_main_width' => $data['pp_main_width'],
   'pp_main_height' => $data['pp_main_height'],
   'pp_thumb_photo' => $data['pp_thumb_photo'],
   'pp_thumb_width' => '100',
   'pp_thumb_height' => '100',
   'pp_setting_moderate_comments' => '0',
   'pp_setting_moderate_friends' => '0',
   'pp_setting_count_friends' => '1',
   'pp_setting_count_comments' => '1',
   'pp_setting_count_visitors' => '1',
   'pp_about_me' => '',
   'pp_reputation_points' => '1',
   'pp_gravatar' => '',
   'pp_photo_type' => '',
   'signature' => '',
   'avatar_location' => '',
   'avatar_size' => '0',
   'avatar_type' => '',
   'pconversation_filters' => '',
   'fb_photo' => '',
   'fb_photo_thumb' => '',
   'fb_bwoptions' => '0',
   'tc_last_sid_import' => '0',
   'tc_photo' => '',
   'tc_bwoptions' => '0',
   'pp_customization' => '',
   'pp_profile_update' => '0',
   'status_date_formatted_short' => $data['date_name'],
   '_isLocked' => '0',
   '_userCanReply' => '1',
   '_canDelete' => '1',
   '_canLock' => '1',
   '_canUnlock' => '',
   '_creatorImg' => '{style_images_url}/ipb.png',
   '_creatorText' => 'Board',
   'bw_is_spammer' => '0',
   'bw_from_sfs' => '0',
   'bw_vnc_type' => '0',
   'bw_forum_result_type' => '0',
   'bw_no_status_update' => '0',
   'bw_status_email_mine' => '0',
   'bw_status_email_all' => '0',
   'bw_disable_customization' => '0',
   'bw_local_password_set' => '0',
   'bw_disable_tagging' => '0',
   'bw_disable_prefixes' => '0',
   'bw_using_skin_gen' => '0',
   'bw_disable_gravatar' => '0',
   'member_rank_img' => 'http://localhost/nsocial/developer/public/style_extra/team_icons/admin.png',
   'member_rank_img_i' => 'img',
   'show_warn' => '',
   'custom_fields' =>  '',
   '_has_photo' => '0',
   'pp_small_photo' => $data['pp_small_photo'],
   'pp_small_width' => $data['pp_small_width'],
   'pp_small_height' => $data['pp_small_height'],
   'pp_mini_photo' => $data['pp_mini_photo'],
   'pp_mini_width' => $data['pp_mini_width'],
   'pp_mini_height' => $data['pp_mini_height'],
   '_online' => '1',
   '_last_active' => 'Today, 07:43 PM',
   '_pp_rating_real' => '0',
   'members_display_name_short' => $data['members_display_name_short'],
   'member_title' => 'Administrator',
   'status_replies' => $data['status_replies'],
   'like' => $data['like'],
   'replies' => $data['replies'],
   'notIsUtf8' => $notIsUtf8,
)), 0, 0, false) : '' ) . "";
return $IPBHTML;
}

/* -- statusReplies --*/
function statusReplies($replies=array(), $no_wrapper=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['statusReplies'] ) )
{
$count_2e8089e589e9b2d346985d21cf832b98 = is_array($this->functionData['statusReplies']) ? count($this->functionData['statusReplies']) : 0;
$this->functionData['statusReplies'][$count_2e8089e589e9b2d346985d21cf832b98]['replies'] = $replies;
$this->functionData['statusReplies'][$count_2e8089e589e9b2d346985d21cf832b98]['no_wrapper'] = $no_wrapper;
}
$IPBHTML .= "" . ((!$no_wrapper) ? ("
	<ul class='ipsList_withtinyphoto clear'>
") : ("")) . "".$this->__f__1b63d0f65a274735688aa960581439ba($replies,$no_wrapper)."" . ((!$no_wrapper) ? ("
	</ul>
") : ("")) . "";
return $IPBHTML;
}


function __f__1b63d0f65a274735688aa960581439ba($replies=array(), $no_wrapper=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $replies as $reply )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<li class='ipsPad comment'>
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$reply['member_id']}", "public",'' ), "{$reply['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$reply['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$reply['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_tiny' /></a>	
		<div class=\"status_mini_content list_content\">
			" . sprintf("%s", html_entity_decode(utf8_encode($reply['log_content']))) . "
			<br />
			<span class='desc lighter'>" . $this->registry->getClass('class_localization')->getDate($reply['reply_date_formatted'],"short", 0) . "</span>
			<span class='desc mod_links'>
				<!--" . (($reply['_canDelete']) ? (" &middot; <a href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=deleteReply&amp;status_id={$reply['reply_status_id']}&amp;reply_id={$reply['reply_id']}&amp;k={$this->member->form_hash}\" id=\"statusReplyDelete-{$reply['reply_status_id']}-{$reply['reply_id']}\" class=\"__sDR __dr{$reply['reply_status_id']}-{$reply['reply_id']}\">{$this->lang->words['status_delete_link']}</a>") : ("")) . "-->
                <span>" . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('portal')->repButtons($this->memberData, array_merge( array( 'primaryId' => $reply['log_id'], 'domLikeStripId' => 'like_status_' . $reply['log_id'], 'domCountId' => 'rep_status_' . $reply['log_id'], 'app' => 'portal', 'type' => 'log_id', 'likeFormatted' => $reply['like']['formatted'], 'has_given_rep' => $reply['like']['iLike'], 'isReply' => 'reply',$reply) )) : '' ) . "</span>&nbsp;
                <span style=\"" . (((int)$reply['like']['totalCount'] == 0) ? ("display:none;") : ("")) . "\">
                	<span class=\"icon-like\"></span>
                	<span id=\"likes-count-{$reply['log_id']}\" style=\"color:#820024;position:relative;left:-7px;\">" . (((int)$reply['like']['totalCount']>100) ? ("+100") : ("{$reply['like']['totalCount']}")) . "</span>
                </span>
			</span>
		</div>
	</li>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusUpdates --*/
function statusUpdates($updates=array(), $smallSpace=0, $latestOnly=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['statusUpdates'] ) )
{
$count_0e5c1c0c5304d280a0a7093ae7826f50 = is_array($this->functionData['statusUpdates']) ? count($this->functionData['statusUpdates']) : 0;
$this->functionData['statusUpdates'][$count_0e5c1c0c5304d280a0a7093ae7826f50]['updates'] = $updates;
$this->functionData['statusUpdates'][$count_0e5c1c0c5304d280a0a7093ae7826f50]['smallSpace'] = $smallSpace;
$this->functionData['statusUpdates'][$count_0e5c1c0c5304d280a0a7093ae7826f50]['latestOnly'] = $latestOnly;
}
$IPBHTML .= "<script type=\"text/javascript\">
//ipb.status.maxReplies = " . intval($this->settings['su_max_replies']) . ";
//ipb.status.smallSpace = " . intval($smallSpace) . ";
</script>".$this->__f__6504aa1e1fff0bc9eda98037bda39325($updates,$smallSpace,$latestOnly)."";
return $IPBHTML;
}


function __f__6504aa1e1fff0bc9eda98037bda39325($updates=array(), $smallSpace=0, $latestOnly=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $updates as $id => $status )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
    " . ((isset($status['member_id'])) ? ("<div  data-id=\"{$status['status_id']}\">
                " . (($this->memberData['member_id'] AND $latestOnly AND $status['member_id'] == $this->memberData['member_id']) ? ("
                <script type=\"text/javascript\">
                        ipb.status.myLatest = {$status['status_id']};
                </script>
                ") : ("")) . "
                <div class='ipsPad' id='statusWrap-{$status['status_id']}'>
                        <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$status['member_id']}", "public",'' ), "{$status['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'>
                                <img src='{$status['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$status['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' />
                        </a>	
                        <div class=\"ipsBox_withphoto status_content\">
                                <div id=\"statusContent-{$status['status_id']}\">
                                        <h4>
                                                " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($status) : '' ) . "
                                                " . (($status['status_member_id'] != $status['status_author_id']) ? ("
                                                        &rarr;
                                                        " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($status['owner']) : '' ) . "
                                                ") : ("")) . "
                                        </h4>
                                        <div class='status_status'>
                                            " . (((int)$this->request['id'] == 0 && mb_strlen(html_entity_decode($status['status_content']))>550) ? ("
		                                        " . mb_substr(html_entity_decode($status['status_content']), 0, 550).'&hellip;' . "
		                                    ") : ("" . (((bool)$status['notIsUtf8'] == true) ? ("
			                                        " . html_entity_decode($status['status_content']) . "
		                                        ") : ("
			                                        " . html_entity_decode($status['status_content']) . "
		                                        ")) . "")) . "
	                                        " . ((mb_strlen(html_entity_decode($status['status_content']))>550 && (int)$this->request['id'] == 0) ? ("
	                                           <br />
		                                       <a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=portal&amp;module=portal&amp;section=status&amp;id={$status['status_id']}", "public",'' ), "", "" ) . "\">Ver m&aacute;s</a>
	                                        ") : ("")) . "
                                        </div>
                                        <div class='streamFooter'>
						                    " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('portal')->repButtons($this->memberData, array_merge( array( 'primaryId' => $status['status_id'], 'domLikeStripId' => 'like_status_' . $status['status_id'], 'domCountId' => 'rep_status_' . $status['status_id'], 'app' => 'portal', 'type' => 'id', 'likeFormatted' => $status['like']['formatted'], 'has_given_rep' => $status['like']['iLike'],$status) )) : '' ) . " &#183; 
						                    <a href=\"#\" id=\"statusReplyShow-{$status['status_id']}\"  class='__showform'>{$this->lang->words['status__addcomment']}</a> &#183; 
						                    <a href=\"#\">Compartir</a> &#183; 
						                    <a class=\"timeAgo\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=portal&amp;module=portal&amp;section=status&amp;id={$status['status_id']}", "public",'' ), "", "" ) . "'>" . $this->registry->getClass('class_localization')->getDate($status['status_date_formatted_short'],"short", 0) . "</a>
                                        </div>
                                </div>
                                <div id=\"statusFeedback-{$status['status_id']}\" class='status_feedback commentlist'>
			                                <div class=\"status_mini_wrap altrow likes-{$status['status_id']}\" style=\"display:" . (($status['like']['formatted'] != '') ? ("block") : ("none")) . ";border-bottom:1px solid #C2C2C2;\">
			                                     <span class=\"icon-like\"></span>
			                                     <span class=\"data-likes\">&nbsp;{$status['like']['formatted']}</span>
			                                </div>") : ("")) . "
                                        " . (($status['status_replies'] AND count( $status['replies'] )) ? ("" . (($status['status_replies'] > 3) ? ("
                                                        <div class='status_mini_wrap altrow' id='statusMoreWrap-{$status['status_id']}'>
                                                        		<span class=\"iconComments\"></span> &nbsp;<a href=\"#\" id=\"statusMore-{$status['status_id']}\" class='___showAll __x{$status['status_id']}'>" . sprintf( $this->lang->words['status_show_all_x'], $status['status_replies'] ) . "</a>
                                                        </div>
                                                ") : ("")) . "
                                                <ul id='statusReplies-{$status['status_id']}' class='ipsList_withtinyphoto clear'>
                                                        " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusReplies' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusReplies($status['replies'], 1) : '' ) . "
                                                </ul>") : ("")) . "
                                        <div id='statusReplyBlank-{$status['status_id']}'></div>
                                        <div id='statusReply-{$status['status_id']}'>
                                        " . (($status['_userCanReply']) ? ("
                                                <ul class='ipsList_withtinyphoto reply ipsPad'>
                                                        <li>
                                                                <form id='statusReplyForm-{$status['status_id']}' action='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=status&amp;do=reply&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}&amp;md5check={$this->member->form_hash}' method='post'>
                                                                                <div class=\"status_mini_content\">
                                                                                        <textarea class='status_textarea input_text mention reply' rows='1' style=\"resize: none;\" cols='50' name='comment-{$status['status_id']}' id='statusText-{$status['status_id']}'></textarea>
                                                                                        <div class=\"status_submit\"><input type='submit' class='___submit input_submit' id='statusSubmit-{$status['status_id']}' value='Comentar' /></div>
                                                                                </div>
                                                                </form>
                                                        </li>
                                                </ul>
                                                <script type='text/javascript'>
                                                        if( $('statusReply-{$status['status_id']}') )
                                                        {
                                                                jQuery('div#statusReply-{$status['status_id']}').hide();
                                                        }
                                                        jQuery('#statusReplyShow-{$status['status_id']}').click(function() {
                                                                jQuery('#statusReply-{$status['status_id']}').show();
                                                                jQuery('#statusText-{$status['status_id']}').focus();
                                                        });
                                                </script>
                                        ") : ("")) . "
                                        </div>
                                        <div class='status_mini_wrap altrow' id='statusMaxWrap-{$status['status_id']}' " . (($status['status_replies'] < $this->settings['su_max_replies']) ? ("style='display:none'") : ("")) . ">
                                                <img src=\"{$this->settings['img_url']}/locked_replies.png\" title=\"{$this->lang->words['status_too_many_replies']}\" alt='x' /> {$this->lang->words['status_too_many_replies']}
                                        </div>
                                </div>
                        </div>
                </div>
        </div>
    </if>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- uploadForm --*/
function uploadForm($sessionKey='', $album=array(), $stats=array(), $allowed_file_types) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['uploadForm'] ) )
{
$count_061f3c3badacbda5e58b321cbdb8c822 = is_array($this->functionData['uploadForm']) ? count($this->functionData['uploadForm']) : 0;
$this->functionData['uploadForm'][$count_061f3c3badacbda5e58b321cbdb8c822]['sessionKey'] = $sessionKey;
$this->functionData['uploadForm'][$count_061f3c3badacbda5e58b321cbdb8c822]['album'] = $album;
$this->functionData['uploadForm'][$count_061f3c3badacbda5e58b321cbdb8c822]['stats'] = $stats;
$this->functionData['uploadForm'][$count_061f3c3badacbda5e58b321cbdb8c822]['allowed_file_types'] = $allowed_file_types;
}
$IPBHTML .= "<script type='text/javascript' src='{$this->settings['public_dir']}js/3rd_party/swfupload/swfupload.js'></script>
<script type='text/javascript' src='{$this->settings['public_dir']}js/3rd_party/swfupload/plugins/swfupload.swfobject.js'></script>
<script type='text/javascript' src='{$this->settings['public_dir']}js/3rd_party/swfupload/plugins/swfupload.cookies.js'></script>
<script type='text/javascript' src='{$this->settings['public_dir']}js/3rd_party/swfupload/plugins/swfupload.queue.js'></script>
<script type='text/javascript'>
//<![CDATA[
	ipb.lang['used_space'] = \"" . sprintf( $this->lang->words['used_space_js'], "{$stats['maxItemHuman']}" ) . "\";
//]]>
</script>
" . $this->registry->getClass('output')->addJSModule("gallery_uploader", "0" ) . "
" . $this->registry->getClass('output')->addJSModule("gallery_albumchooser", "0" ) . "

<h1 class='ipsType_pagetitle'>{$this->lang->words['upload_ucfirst']}</h1>
" . (($album['album_g_approve_img'] AND ! $this->registry->gallery->helper('albums')->canModerate( $album )) ? ("
<div class='message unspecific'>
<h3>{$this->lang->words['image_approval_required']}</h3>
<p>{$this->lang->words['image_approval_required_text']}</p>
</div>
<br />
") : ("")) . "
<div id='albumBoxWrap' class='ipsBox' style='display:none;'>
	<div class='ipsBox_container ipsPad'>
		<div id='albumWrap'></div>
		<div id='albumWrapNone' style='display: none'>
			<div class='ipsLayout ipsLayout_withleft'>
			</div>
			<br class='clear' />
		</div>
	</div>
</div>
<div class='' id='uploadBoxWrapParent'>
	<div id='uploadBoxWrap' class='ipsBox_container ipsPad' style='display:none'>
		<div id='attachWrap'>
			<ul id='attachments'><li style='display: none'></li></ul>
		</div>
	</div>
	<div id='attach_error_box' class='message error forum_rules' style='display:none'></div>
	<!--SKINNOTE: traditional uploader needs this. -->
	<input type='file' id='nojs_attach_{$sessionKey}_1' class='input_upload' name='FILE_UPLOAD' tabindex='1' />
	<input type='file' id='nojs_attach_{$sessionKey}_2' class='input_upload' name='FILE_UPLOAD' tabindex='1' />
	<div id='uploadFieldWrap' style='display:none'>
		<div class=''>
			<div class=''>
				<span id='buttonPlaceholder'></span>
				<input type='button' id='add_files_attach_{$sessionKey}' class='input_submit ipsType_small clear' value='Subir' style='display: none;background:#fff;' tabindex='1' />
				&nbsp;<span class='desc ipsType_smaller' id='space_info_attach_{$sessionKey}'>" . sprintf( $this->lang->words['upload_used_txt'], '<strong>'.IPSLib::sizeFormat( $stats['used'] ).'</strong>', "<strong>{$stats['maxTotalHuman']}</strong>", '<strong>'.IPSLib::sizeFormat( $stats['maxItem'] ).'</strong>') . "</span> <span class='desc ipsType_smaller'><a href='javascript:void(0);' id='showFileTypes'>{$this->lang->words['upload_types']}</a></span>
				" . ((!IN_ACP AND $this->settings['uploadFormType']) ? ("<span class='desc lighter ipsType_smaller' id='help_msg'>
					" . (($this->memberData['member_uploader'] == 'flash') ? ("
						 {$this->lang->words['trouble_uploading']} <a href='#' data-switch='default' title='{$this->lang->words['switch']}' tabindex='1'>{$this->lang->words['switch_to_basic']}</a>
					") : ("
						<a href='#' data-switch='flash' title='{$this->lang->words['switch']}' tabindex='-1'>{$this->lang->words['switch_to_advanced']}</a>
					")) . "
				</span>") : ("")) . "
			</div>
		</div>
	</div>
</div>
<div id='showFileTypesContent' style='display:none'>
	<div class='ipsPad_double'>
		<strong>{$this->lang->words['upload_allowed']}</strong>: {$allowed_file_types}
	</div>
</div>
<script type='text/javascript'>
//<![CDATA[
	// Show the button and info
	$('add_files_attach_{$sessionKey}').show();
	$('space_info_attach_{$sessionKey}').show();
	
	ipb.delegate.register(\"[data-switch]\", function(e, elem){
		ipb.uploader.switchUploadType( elem.readAttribute('data-switch') );
	});
	
	var useType       = 'simple';
	var uploadURL     = ipb.vars['base_url'] + \"app=gallery&module=post&section=image&do=upload&type=album&sessionKey={$sessionKey}&album_id={$album['album_id']}&fetch_all=1&s={$this->member->session_id}&_nsc=1\";
	var albumTemplate = new Template( \"<div id='albumWrap_#{album_id}' style='display:none;'><div class='ipsLayout ipsLayout_withleft' style='display:none;'><div class='ipsLayout_left'>#{thumb}</div><div class='ipsLayout_content'></div></div><br class='clear' /></div>\" );
	
	if ( ipb.vars['use_swf_upload'] && ipb.vars['swfupload_enabled'] && jaaulde.utils.flashsniffer.meetsMinVersion( 9 ) )
	{
		useType = 'swf';
		var uploadURL = \"{$this->settings['base_url']}app=gallery&module=post&section=image&do=process&sessionKey={$sessionKey}&album_id={$album['album_id']}&s={$this->member->session_id}&_nsc=1\";
		
		$('add_files_attach_{$sessionKey}').observe('mouseover', function(e){  } );
	}
	
	ipb.uploader.template = \"<li id='ali_[id]' class='attach_row' style='display: none'><div><h4 class='attach_name'>[name]</h4><p class='info'>[info]</p><span class='img_holder'></span><p class='progress_bar'><span style='width: 0%'>0%</span></p><p class='links'> <a href='javascript:void(0);' class='cancel delete' title='{$this->lang->words['attach_delete_title']}'>{$this->lang->words['attach_delete']}</a></p></div></li>\"; 
	
	document.observe('dom:loaded', function(){
		/* Load album box */
		ipb.uploader.setCurrentAlbumId( " . intval($album['album_id']) . " );
		ipb.uploader.buildAlbumBox( " . intval($album['album_id']) . ", albumTemplate, 'albumWrap' );
		
		/* Load up uploaders */
		ipb.uploader.registerUploader( 'attach_{$sessionKey}', useType, 'attachments', {
			'upload_url': uploadURL,
			'album_id': \"" . intval($album['album_id']) . "\",
			'sessionKey': \"{$sessionKey}\",
			'file_size_limit': \"{$stats['maxItem']}\"
		} )});
//]]>
</script>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>