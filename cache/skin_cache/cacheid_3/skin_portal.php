<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 3               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:03 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_portal_3 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['articles'] = array('entryLastPoster','entryHasPosts','articles');
$this->_funcHooks['globalTimeline'] = array('recentLoop','isArray');
$this->_funcHooks['hookSuggest'] = array('suggestMember','isArraySuggest');
$this->_funcHooks['latestPosts'] = array('topics_hook');
$this->_funcHooks['pluginInvite'] = array('pluginInvite');
$this->_funcHooks['pluginSuggest'] = array('pluginSuggest');
$this->_funcHooks['pluginTimeline'] = array('pluginTimeline');
$this->_funcHooks['pluginUpdateStatus'] = array('pluginUpdateStatus');
$this->_funcHooks['poststatus'] = array('updateTwitter','updateFacebook','update','canUpdateStatus');
$this->_funcHooks['repButtons'] = array('hasNoLikes','giveRepUp','giveRepDown','canGiveRep','pos','giveRepUp','giveRepDown','canGiveRep','hasNoRep','hasPosRep','hasNegRep','isNotLike','isLike','canRep','reputationBox');
$this->_funcHooks['showBlocks'] = array('templateHeader','templateFooter','showBlockCode','showBlocks');
$this->_funcHooks['siteNavigation'] = array('links');
$this->_funcHooks['skeletonTemplate'] = array('disablelightbox','setupLeftBlockSide','setupRightBlockSide');
$this->_funcHooks['statusAjax'] = array('recentLoop','isArray');
$this->_funcHooks['statusReplies'] = array('canDelete','innerLoop');
$this->_funcHooks['statusUpdates'] = array('forSomeoneElse','noLocked','cImg','creatorText','canDelete','isLocked','canLock','hasMore','maxReplies','isValid','outerLoop');


}

/* -- affiliates --*/
function affiliates($links="") {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsSideBlock'>
    <h3>{$this->lang->words['aff_title']}</h3>
    {$this->settings['portal_fav']}
</div>";
return $IPBHTML;
}

/* -- articles --*/
function articles($articles) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['articles'] ) )
{
$count_5a8aa4df2fd38d85f7894be7f8e084ac = is_array($this->functionData['articles']) ? count($this->functionData['articles']) : 0;
$this->functionData['articles'][$count_5a8aa4df2fd38d85f7894be7f8e084ac]['articles'] = $articles;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
<div class='ipsBox clear'>
    ".$this->__f__b3a5242de7e978a8a23e50e1d9163d8c($articles)."</div><br class='clearfix' />";
return $IPBHTML;
}


function __f__b3a5242de7e978a8a23e50e1d9163d8c($articles)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $articles as $topic )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
        <div class='ipsBox_container ipsPad'>        
		
            <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$topic['member_id']}", "public",'' ), "{$topic['members_seo_name']}", "showuser" ) . "' class='ipsUserPhotoLink left ipsPad_half'><img src='{$topic['pp_small_photo']}' alt='{$r['members_display_name']} {$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_medium' /></a>
		
            <h2 class='ipsType_pagetitle'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "'>{$topic['title']}</a></h2>
            <div class='desc'>" . $this->registry->getClass('class_localization')->getDate($topic['start_date'],"DATE", 0) . "</div><br class='clear' />
        
            <div class='desc ipsType_smaller ipsPad_half'>		
                {$this->lang->words['posted_by']} " . (($topic['members_display_name']) ? ("" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($topic) : '' ) . "") : ("{$this->settings['guest_name_pre']}{$topic['starter_name']}{$this->settings['guest_name_suf']}")) . "
                {$this->lang->words['in']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$topic['id']}", "public",'' ), "{$topic['name_seo']}", "showforum" ) . "'>{$topic['name']}</a>
            </div>
            <div class='ipsType_textblock ipsPad'>
                {$topic['post']}
                <!--IBF.ATTACHMENT_{$topic['pid']}-->
            </div>
            
        </div>
        <div class='general_box'>
            <h3 class='ipsType_smaller'>
            
                <span class='right'>{$topic['share_links']}</span>
                " . $this->registry->getClass('class_localization')->formatNumber( $topic['views'] ) . " {$this->lang->words['views']} &middot;
                " . $this->registry->getClass('class_localization')->formatNumber( $topic['posts'] ) . " {$this->lang->words['replies']}
	
                " . (($topic['posts']) ? ("( {$this->lang->words['last_reply_by']} " . (($topic['last_poster_id']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$topic['last_poster_id']}", "public",'' ), "{$topic['seo_last_name']}", "showuser" ) . "'>{$topic['last_poster_name']}</a>") : ("{$this->settings['guest_name_pre']}{$topic['last_poster_name']}{$this->settings['guest_name_suf']}")) . " )") : ("")) . "
                	
            </h3>
                        
	</div>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- blog_cblocks --*/
function blog_cblocks($content, $position, $hidden) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- globalTimeline --*/
function globalTimeline($rows, $pages) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['globalTimeline'] ) )
{
$count_187cf97070a593326314410b6fe16fb0 = is_array($this->functionData['globalTimeline']) ? count($this->functionData['globalTimeline']) : 0;
$this->functionData['globalTimeline'][$count_187cf97070a593326314410b6fe16fb0]['rows'] = $rows;
$this->functionData['globalTimeline'][$count_187cf97070a593326314410b6fe16fb0]['pages'] = $pages;
}
$IPBHTML .= "<div>
    " . ( method_exists( $this->registry->getClass('output')->getTemplate('timeline'), 'header' ) ? $this->registry->getClass('output')->getTemplate('timeline')->header() : '' ) . "
    <div style=\"clear:both\"></div>
    <br />
    <div class=\"stream-item\" id=\"stream-load\">
        <div class=\"new-tweets-bar js-new-tweets-bar\">
                <span id='news-bar-item' data-count-id='0'>0</span> {$this->lang->words['news_pub']}
        </div>
    </div>
    <div id=\"statuses\">
    " . ((is_array($rows)) ? ("
        ".$this->__f__879101fa4086fbcf99d6cc51e6496ac1($rows,$pages)."        ") : ("
        <div class=\"ipsBox\">
            <div class=\"ipsBox_container ipsPad\">
                <h1>{$this->lang->words['noupdates']}</h1>
            </div>
        </div>
    ")) . "
    </div>
    <div id=\"container\"></div>
</div>
<div id=\"pages\">
    {$pages}
</div>";
return $IPBHTML;
}


function __f__879101fa4086fbcf99d6cc51e6496ac1($rows, $pages)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $index => $data )
	{
		
$this->templateVars['finalPage'] = "";
$this->__default__templateVars['finalPage'] = "";
if ( $index == (count($rows) - 1) )
{
	$this->templateVars['finalPage'] = " ipsBoxFinal";
}
else {$this->templateVars['finalPage'] = $this->__default__templateVars['finalPage']; }

		$__iteratorCount++;
		$_ips___x_retval .= "
                        " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusIndividual' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusIndividual($data) : '' ) . "
        
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- hookinvitefriend --*/
function hookinvitefriend($invitations = 10) {
$IPBHTML = "";
$IPBHTML .= "" . (((int)$this->memberData['member_id'] && $invitations > 0) ? ("
    <div class='ipsSideBlock clearfix'>
        <h3><span>" . sprintf($this->lang->words['invitations'], $invitations) . "</span></h3>
        <div class='_sbcollapsable'>
            <form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=ajax&amp;section=ajaxmember&md5check={$this->member->form_hash}&do=process_form&login=", "public",'' ), "", "" ) . "\" method=\"post\" name=\"REG\" id='send_invite'>
                <fieldset>
                    <ul class='ipsForm ipsForm_horizontal'>
                        <li class='ipsField'>
                            <label for='EmailAddress' class='ipsField_title' style=\"width: auto;\">Correo <span class='ipsForm_required'>*</span></label>
                            <p class=''>
                                <input type='text' placeholder=\"correo@dominio.com\" class='input_text' id='email' size='30' value='{$this->request['EmailAddress']}' name='EmailAddress' /><br />
                                <span class='desc primary lighter'>
                                    <div id=\"showErrors\"><span class='error'></span></div>
                                </span>
                            </p>
                            <br />
                            <p>
                                <input type=\"submit\" value=\"Enviar\" class=\"ipsButton\" style=\"float:right;\" />
                            </p>
                        </li>
                    </ul>
                </fieldset>
        </form>
        </div>
    </div>
") : ("")) . "";
return $IPBHTML;
}

/* -- hookLeftMessages --*/
function hookLeftMessages($jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- hookLeftSearch --*/
function hookLeftSearch() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- hookprofileuser --*/
function hookprofileuser() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- hookSuggest --*/
function hookSuggest($members) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['hookSuggest'] ) )
{
$count_5d62c5b12032e749996f042b92dc879c = is_array($this->functionData['hookSuggest']) ? count($this->functionData['hookSuggest']) : 0;
$this->functionData['hookSuggest'][$count_5d62c5b12032e749996f042b92dc879c]['members'] = $members;
}
$IPBHTML .= "" . ((is_array($members) && count($members) > 0) ? ("
    <div class=\"ipsSideBlock clearfix\">
        <h3>
            <a href=\"#\" class=\"ipsSidebar_trigger ipsType_smaller right desc mod_links\">x</a>
            {$this->lang->words['mightknow']}
        </h3>
        ".$this->__f__29f838a84f3821fd4c69ea31a315acee($members)."    </div>
") : ("")) . "";
return $IPBHTML;
}


function __f__29f838a84f3821fd4c69ea31a315acee($members)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $members as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
            <div class=\"_sbcollapsable\" style=\"overflow: visible;\">
                <ul class=\"ipsList_withminiphoto\">
                    <li class=\"clearfix\">
                        <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink'>
                           <img src='{$member['pp_thumb_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini' />
                        </a>
                        <div class=\"list_content\" style=\"margin-left: 4px !important; display:inline-block;\">
                            " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "
                        </div>
                    </li>
                </ul>
            </div>
        
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- latestPosts --*/
function latestPosts($topics=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['latestPosts'] ) )
{
$count_0c92326cd558e103d4824386322888ef = is_array($this->functionData['latestPosts']) ? count($this->functionData['latestPosts']) : 0;
$this->functionData['latestPosts'][$count_0c92326cd558e103d4824386322888ef]['topics'] = $topics;
}
$IPBHTML .= "<div class='ipsSideBlock'>
     <h3>{$this->lang->words['discuss_title']}</h3>
		<ul class='ipsList_withminiphoto'>
		".$this->__f__799f16bc1666f93ead5be8180f1e4b37($topics)."		</ul>
</div>";
return $IPBHTML;
}


function __f__799f16bc1666f93ead5be8180f1e4b37($topics=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $topics as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<li class='clearfix'>
			<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$r['member_id']}", "public",'' ), "{$r['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$r['pp_mini_photo']}' alt=\"{$r['members_display_name']}{$this->lang->words['photo']}\" class='ipsUserPhoto ipsUserPhoto_mini' /></a>
			<div class='list_content'>
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$r['tid']}", "public",'' ), "{$r['title_seo']}", "showtopic" ) . "' rel='bookmark' class='ipsType_small' title='{$this->lang->words['view_topic']}'>{$r['topic_title']}</a>
				<p class='desc ipsType_smaller'>
					" . (($r['members_display_name']) ? ("" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r) : '' ) . "") : ("{$this->settings['guest_name_pre']}{$r['starter_name']}{$this->settings['guest_name_suf']}")) . "
					- " . $this->registry->getClass('class_localization')->getDate($r['start_date'],"short", 0) . "
				</p>
			</div>
		</li>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- onlineUsers --*/
function onlineUsers($active) {
$IPBHTML = "";
$IPBHTML .= "<div class='ipsSideBlock'>
    <h3><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=online&amp;section=online", "public",'' ), "", "" ) . "\">{$this->lang->words['online_title']}</a></h3>
		<span class='desc'>" . sprintf( $this->lang->words['online_split'], intval($active['MEMBERS']), intval($active['visitors']), intval($active['ANON']) ) . "</span>
		<br /><br />
		<p>
			<span class='name'>" . implode( ",</span> <span class='name'>", $active['NAMES'] ) . "</span>					
		</p>
</div>";
return $IPBHTML;
}

/* -- pluginBlogs --*/
function pluginBlogs($active = false) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- pluginInvite --*/
function pluginInvite($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginInvite'] ) )
{
$count_71c60a17990f16dd86461a9d6637df40 = is_array($this->functionData['pluginInvite']) ? count($this->functionData['pluginInvite']) : 0;
$this->functionData['pluginInvite'][$count_71c60a17990f16dd86461a9d6637df40]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginInvite.pluginInvite.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginMessages --*/
function pluginMessages($active = false) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- pluginProfileUser --*/
function pluginProfileUser() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- pluginSearch --*/
function pluginSearch($active = false) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- pluginSuggest --*/
function pluginSuggest($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginSuggest'] ) )
{
$count_129dd6c3312249dabd9b0d76d2b6b54d = is_array($this->functionData['pluginSuggest']) ? count($this->functionData['pluginSuggest']) : 0;
$this->functionData['pluginSuggest'][$count_129dd6c3312249dabd9b0d76d2b6b54d]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginSuggest.pluginSuggest.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginTimeline --*/
function pluginTimeline($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginTimeline'] ) )
{
$count_c07ec8cffd03761d285d0120066a42ed = is_array($this->functionData['pluginTimeline']) ? count($this->functionData['pluginTimeline']) : 0;
$this->functionData['pluginTimeline'][$count_c07ec8cffd03761d285d0120066a42ed]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginTimeline.pluginTimeline.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pluginUpdateStatus --*/
function pluginUpdateStatus($active = false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['pluginUpdateStatus'] ) )
{
$count_5fdeb1845086f6f27f48a70d582fb2ca = is_array($this->functionData['pluginUpdateStatus']) ? count($this->functionData['pluginUpdateStatus']) : 0;
$this->functionData['pluginUpdateStatus'][$count_5fdeb1845086f6f27f48a70d582fb2ca]['active'] = $active;
}
$IPBHTML .= "" . (($active) ? ("<!--hook.if.skin_portal.pluginUpdateStatus.pluginUpdateStatus.post.startif-->
") : ("")) . "";
return $IPBHTML;
}

/* -- pollWrapper --*/
function pollWrapper($content='',$topic=array()) {
$IPBHTML = "";
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
<div class='ipsSideBlock'>
    <h3><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['tid']}", "public",'' ), "{$topic['title_seo']}", "showtopic" ) . "'>{$this->lang->words['poll_title']}</a></h3>
<div class='ipsPad'>
    {$content['html']}</div>
</div>";
return $IPBHTML;
}

/* -- poststatus --*/
function poststatus() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['poststatus'] ) )
{
$count_c920009f2b6b67e5a164a75d7862cb7a = is_array($this->functionData['poststatus']) ? count($this->functionData['poststatus']) : 0;
}
$IPBHTML .= "" . (($this->registry->getClass('memberStatus')->canCreate( $this->memberData ) && !($this->settings['board_offline'] && !$this->memberData['g_access_offline'])) ? ("<form id='statusFormAjax' action='{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=new&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}' method='post'><!-- jb -->
            <div style=\"\" class=\"mentions-input-box\">
            <textarea class='mention' id=\"status_update\" name='content'  style='width:100%;' placeholder='{$this->lang->words['use_mentions']}'></textarea>
            <br />
            <span id=\"media_attachments\">
            </span>
            <a href=\"{$this->settings['base_url']}app=portal&module=ajax&section=metauris&md5check={$this->member->form_hash}\" id=\"attach_link\">{$this->lang->words['attach_link']}</a>
            <br />
            <input type='submit' id='status_submit_global' class='ipsButton_secondary' value='{$this->lang->words['global_update_status']}' />
            " . (((IPSLib::twitter_enabled() OR IPSLib::fbc_enabled() ) AND ( $this->memberData['fb_uid'] OR $this->memberData['twitter_id'] )) ? ("" . ((IPSLib::twitter_enabled() AND ( $this->memberData['twitter_id'] )) ? ("<input type='checkbox' id='su_Twitter' value='1' name='su_TwitterGlobal' /> <label for='su_Twitter' class='desc ipsType_smaller'>{$this->lang->words['twitter']}</label>") : ("")) . " &nbsp; 
            " . ((IPSLib::fbc_enabled() AND ( $this->memberData['fb_uid'] )) ? ("&nbsp;<input type='checkbox' id='su_Facebook' value='1' name='su_FacebookGlobal' /> <label for='su_Facebook' class='desc ipsType_smaller'>{$this->lang->words['facebook']}</label>") : ("")) . "") : ("")) . "
            </div>
            </form>") : ("")) . "
            <br />
            <hr />";
return $IPBHTML;
}

/* -- repButtons --*/
function repButtons($member, $data=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['repButtons'] ) )
{
$count_845c2b5846e09b4ff85e1d4af652d2df = is_array($this->functionData['repButtons']) ? count($this->functionData['repButtons']) : 0;
$this->functionData['repButtons'][$count_845c2b5846e09b4ff85e1d4af652d2df]['member'] = $member;
$this->functionData['repButtons'][$count_845c2b5846e09b4ff85e1d4af652d2df]['data'] = $data;
}

// Apps can set the key empty to disable, but this will allow all apps to use the popup to show who repped
    if( !isset($data['jsCallback']) )
    {
        $data['jsCallback'] = "ipb.global.repPopUp( this, {$data['primaryId']}, '{$data['app']}', '{$data['type']}' );";
    }
    $repClickable   = ( $this->memberData['gbw_view_reps'] AND $data['jsCallback'] ) ? 'onclick="' . $data['jsCallback'] . '"' : '';

$this->templateVars['repClickable'] = "";
$this->__default__templateVars['repClickable'] = "";
if ( $this->memberData['gbw_view_reps'] )
{
	$this->templateVars['repClickable'] = " clickable";
}
else {$this->templateVars['repClickable'] = $this->__default__templateVars['repClickable']; }
$IPBHTML .= "<div style=\"display:inline-block; width: 100%;\">
" . (($this->settings['reputation_enabled']) ? ("" . ((!( $this->settings['reputation_protected_groups'] && in_array( $member['member_group_id'], explode( ',', $this->settings['reputation_protected_groups'] ) ) ) and $this->memberData['member_id']) ? ("" . (($this->settings['reputation_point_types'] == 'like') ? ("<div class='ipsLikeBar right clearfix' id='{$data['domCountId']}' style=\"margin: 0px;\">
                <ul class='ipsList_inline'>
                    " . ((!isset($data['hide_text']) OR !$data['hide_text']) ? ("<li id=\"{$data['domLikeStripId']}\" class='ipsLikeBar_info' " . ((!$data['likeFormatted']) ? ("style=\"display:none\"") : ("")) . ">
                            {$data['likeFormatted']}
                        </li>") : ("")) . "
                    " . ((IPSMember::canGiveRep( $data, $member ) !== false) ? ("<li " . ((IPSMember::canRepUp( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a class='ipsLikeButton ipsLikeButton_enabled rep_up' href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_up']}'>{$this->lang->words['like_this']}</a>
                        </li>
                        <li " . ((IPSMember::canRepDown( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a class='ipsLikeButton ipsLikeButton_disabled rep_down' href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' title='{$this->lang->words['do_like_down']}'>{$this->lang->words['unlike_this']}</a>
                        </li>") : ("")) . "
                </ul>
            </div>") : ("<div class='rep_bar clearfix " . ((!$data['position'] || $data['position'] == 'right') ? ("right") : ("")) . "' id='{$data['domCountId']}'>
                                <ul class='ipsList_inline'>
                    " . ((IPSMember::canGiveRep( $data, $member ) !== false) ? ("<li " . ((IPSMember::canRepUp( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' class='rep_up' title='{$this->lang->words['reputation_up']}'>" . $this->registry->getClass('output')->getReplacement("rep_up") . "</a>
                        </li>
                        <li " . ((IPSMember::canRepDown( $data, $member ) === false) ? ("style=\"display:none\"") : ("")) . ">
                            <a href='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=reputation&amp;do=add_rating&amp;app_rate={$data['app']}&amp;type={$data['type']}&amp;type_id={$data['primaryId']}&amp;rating=-1&amp;secure_key={$this->member->form_hash}&amp;post_return={$data['primaryId']}' class='rep_down' title='{$this->lang->words['reputation_down']}'>" . $this->registry->getClass('output')->getReplacement("rep_down") . "</a>
                        </li>") : ("")) . "
                    " . (($this->settings['reputation_point_types'] != 'like') ? ("" . (($data['rep_points'] == 0) ? ("
                            <li><span class='reputation zero rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
                        ") : ("")) . "
                        " . (($data['rep_points'] > 0) ? ("
                            <li><span class='reputation positive rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
                        ") : ("")) . "
                        " . (($data['rep_points'] < 0) ? ("
                            <li><span class='reputation negative rep_show" . $this->templateVars["repClickable"] . "' title='{$this->lang->words['reputation']}' {$repClickable}>
                        ") : ("")) . "
                            " . intval($data['rep_points']) . "
                            </span>
                        </li>") : ("")) . "
                </ul>
            </div>")) . "") : ("")) . "") : ("")) . "
</div>
<script type='text/javascript'>
    ipb.global.registerReputation( '{$data['domCountId']}', { domLikeStripId: '{$data['domLikeStripId']}', app: '{$data['app']}', type: '{$data['type']}', typeid: '{$data['primaryId']}' }, parseInt('{$data['rep_points']}') );
</script>";
return $IPBHTML;
}

/* -- showBlocks --*/
function showBlocks($blocks=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['showBlocks'] ) )
{
$count_ad2e40784c6b75efc6dd4309e059dfdf = is_array($this->functionData['showBlocks']) ? count($this->functionData['showBlocks']) : 0;
$this->functionData['showBlocks'][$count_ad2e40784c6b75efc6dd4309e059dfdf]['blocks'] = $blocks;
}
$IPBHTML .= "" . ((is_array( $blocks ) AND count( $blocks )) ? ("
     ".$this->__f__075ad115b39191cb7ff1124654f981f2($blocks)."") : ("")) . "";
return $IPBHTML;
}


function __f__075ad115b39191cb7ff1124654f981f2($blocks=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $blocks as $block )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
          " . (($block['template']) ? ("<div class='ipsSideBlock clearfix'><h3>{$block['title']}</h3>") : ("")) . "
              {$block['block_code']}
          " . (($block['template']) ? ("</div>") : ("")) . "
     
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- siteNavigation --*/
function siteNavigation($links=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['siteNavigation'] ) )
{
$count_5d5c37d01e908755429838f60e3ab84d = is_array($this->functionData['siteNavigation']) ? count($this->functionData['siteNavigation']) : 0;
$this->functionData['siteNavigation'][$count_5d5c37d01e908755429838f60e3ab84d]['links'] = $links;
}
$IPBHTML .= "<div class='ipsSideBlock'>
        <h3>{$this->lang->words['links_title']}</h3>
	<ul>
		".$this->__f__c47b108d369600ca0fd2274846856a6a($links)."	</ul>
</div>";
return $IPBHTML;
}


function __f__c47b108d369600ca0fd2274846856a6a($links=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $links as $link )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<li>&bull; <a href=\"{$link[1]}\">{$link[2]}</a></li>		
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- skeletonTemplate --*/
function skeletonTemplate($leftBlocks, $mainBlocks, $rightBlocks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['skeletonTemplate'] ) )
{
$count_00b84830288da7b72eb430adc89181af = is_array($this->functionData['skeletonTemplate']) ? count($this->functionData['skeletonTemplate']) : 0;
$this->functionData['skeletonTemplate'][$count_00b84830288da7b72eb430adc89181af]['leftBlocks'] = $leftBlocks;
$this->functionData['skeletonTemplate'][$count_00b84830288da7b72eb430adc89181af]['mainBlocks'] = $mainBlocks;
$this->functionData['skeletonTemplate'][$count_00b84830288da7b72eb430adc89181af]['rightBlocks'] = $rightBlocks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addToDocumentHead( 'importcss', "{$this->settings['css_base_url']}style_css/{$this->registry->output->skin['_csscacheid']}/timeline.css" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'importcss', "{$this->settings['css_base_url']}style_css/{$this->registry->output->skin['_csscacheid']}/podio.style.css" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'importcss', "https://fonts.googleapis.com/css?family=PT+Sans&subset=latin" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/ips.like.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/ips.status.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/3rd_party/jquery.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "http://documentcloud.github.com/underscore/underscore-min.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/3rd_party/waypoints.min.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/3rd_party/mentions/jquery.events.input.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/3rd_party/mentions/jquery.mentionsInput.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/3rd_party/mentions/jquery.elastic.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/3rd_party/timeline.js" ) . "
" . $this->registry->getClass('output')->addToDocumentHead( 'javascript', "{$this->settings['js_base_url']}js/3rd_party/ips.portal.js" ) . "
" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<div class='ipsLayout " . ((is_array( $leftBlocks ) AND count( $leftBlocks )) ? ("ipsLayout_withleft ipsLayout_largeleft") : ("")) . " " . ((is_array( $rightBlocks ) AND count( $rightBlocks )) ? ("ipsLayout_withright ipsLayout_largeright") : ("")) . " clearfix'>
      <div class='ipsLayout_left'>
           " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'showBlocks' ) ? $this->registry->getClass('output')->getTemplate('portal')->showBlocks($leftBlocks) : '' ) . "
      </div>
      <div class='ipsLayout_content clearfix'>
           " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'showBlocks' ) ? $this->registry->getClass('output')->getTemplate('portal')->showBlocks($mainBlocks) : '' ) . "
      </div>
      <div class='ipsLayout_right'>
           " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'showBlocks' ) ? $this->registry->getClass('output')->getTemplate('portal')->showBlocks($rightBlocks) : '' ) . " 
      </div>
</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_highlighter' ) ? $this->registry->getClass('output')->getTemplate('global')->include_highlighter(1) : '' ) . "";
return $IPBHTML;
}

/* -- statusAjax --*/
function statusAjax($rows) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['statusAjax'] ) )
{
$count_a71279bf3d9b28e5f636723253f3734f = is_array($this->functionData['statusAjax']) ? count($this->functionData['statusAjax']) : 0;
$this->functionData['statusAjax'][$count_a71279bf3d9b28e5f636723253f3734f]['rows'] = $rows;
}
$IPBHTML .= "" . ((is_array($rows)) ? ("
    ".$this->__f__69c2825970bd352dadf7b7f7bff8dcff($rows)."    ") : ("
    <div class=\"ipsBox\">
        <div class=\"ipsBox_container ipsPad\">
            <h1>{$this->lang->words['noupdates']}</h1>
        </div>
    </div>
")) . "";
return $IPBHTML;
}


function __f__69c2825970bd352dadf7b7f7bff8dcff($rows)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $rows as $index => $data )
	{
		
$this->templateVars['finalPage'] = "";
$this->__default__templateVars['finalPage'] = "";
if ( $index == (count($rows) - 1) )
{
	$this->templateVars['finalPage'] = " ipsBoxFinal";
}
else {$this->templateVars['finalPage'] = $this->__default__templateVars['finalPage']; }

		$__iteratorCount++;
		$_ips___x_retval .= "
                " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusIndividual' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusIndividual($data) : '' ) . "
    
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusIndividual --*/
function statusIndividual($data) {
$IPBHTML = "";
$IPBHTML .= "" . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusUpdates' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusUpdates(array(
array(
   'status_id' => $data['id'],
   'status_member_id' => $data['member_id'],
   'status_date' => $data['status_date'],
   'status_content' => $data['textStatus'],
   'status_replies' => '0',
   'status_last_ids' => 'a:0:{}',
   'status_is_latest' => '1',
   'status_is_locked' => '0',
   'status_hash' => 'c07123b4b45600e9d97f6be68d758208',
   'status_imported' => '0',
   'status_creator' => 'ipb',
   'status_author_id' => $data['member_id'],
   'status_author_ip' => '::1',
   'status_approved' => '1',
   'member_id' => $data['member_id'],
   'name' => $data['member_display_name'],
   'member_group_id' => '4',
   'email' => $data['email'],
   'joined' => $data['joined'],
   'ip_address' => '::1',
   'posts' => '1',
   'title' => 'Administrator',
   'allow_admin_mails' => '0',
   'time_offset' => '',
   'skin' => '',
   'warn_level' => '',
   'warn_lastwarn' => '0',
   'language' => '1',
   'last_post' => '',
   'restrict_post' => '0',
   'view_sigs' => '1',
   'view_img' => '1',
   'bday_day' => '0',
   'bday_month' => '0',
   'bday_year' => '0',
   'msg_count_new' => '0',
   'msg_count_total' => '0',
   'msg_count_reset' => '0',
   'msg_show_notification' => '1',
   'misc' => '',
   'last_visit' => '1337707293',
   'last_activity' => '1337712229',
   'dst_in_use' => '1',
   'coppa_user' => '0',
   'mod_posts' => '0',
   'auto_track' => '0',
   'temp_ban' => '0',
   'login_anonymous' => '0&1',
   'ignored_users' => 'a:0:{}',
   'mgroup_others' => '',
   'org_perm_id' => '',
   'member_login_key' => 'e1c43dbb884afe6da191343f632c05d0',
   'member_login_key_expire' => $data['member_login_key_expire'],
   'has_blog' => '',
   'blogs_recache' => '',
   'has_gallery' => '0',
   'members_auto_dst' => '1',
   'members_display_name' => $data['members_display_name'],
   'members_seo_name' => $data['members_seo_name'],
   'members_created_remote' => '0',
   'members_disable_pm' => '0',
   'members_l_display_name' => $data['members_l_display_name'],
   'members_l_username' => $data['members_l_username'],
   'failed_logins' => '',
   'failed_login_count' => '0',
   'members_profile_views' => '0',
   'members_pass_hash' => '98fdc8bdd1352c66649071b0fb5b248e',
   'members_pass_salt' => ',CUT;',
   'member_banned' => '0',
   'member_uploader' => 'flash',
   'members_bitoptions' => '0',
   'fb_uid' => '0',
   'fb_emailhash' => '',
   'fb_lastsync' => '0',
   'members_day_posts' => '0,0',
   'live_id' => '',
   'twitter_id' => '',
   'twitter_token' => '',
   'twitter_secret' => '',
   'notification_cnt' => '0',
   'tc_lastsync' => '0',
   'fb_session' => '',
   'fb_token' => '',
   'ips_mobile_token' => '',
   'unacknowledged_warnings' => '',
   'gallery_perms' => '1:1:1',
   'pp_member_id' => '1',
    'pp_last_visitors' => '',
   'pp_rating_hits' => '0',
   'pp_rating_value' => '0',
   'pp_rating_real' => '0',
   'pp_main_photo' => $data['pp_main_photo'],
   'pp_main_width' => $data['pp_main_width'],
   'pp_main_height' => $data['pp_main_height'],
   'pp_thumb_photo' => $data['pp_thumb_photo'],
   'pp_thumb_width' => '100',
   'pp_thumb_height' => '100',
   'pp_setting_moderate_comments' => '0',
   'pp_setting_moderate_friends' => '0',
   'pp_setting_count_friends' => '1',
   'pp_setting_count_comments' => '1',
   'pp_setting_count_visitors' => '1',
   'pp_about_me' => '',
   'pp_reputation_points' => '1',
   'pp_gravatar' => '',
   'pp_photo_type' => '',
   'signature' => '',
   'avatar_location' => '',
   'avatar_size' => '0',
   'avatar_type' => '',
   'pconversation_filters' => '',
   'fb_photo' => '',
   'fb_photo_thumb' => '',
   'fb_bwoptions' => '0',
   'tc_last_sid_import' => '0',
   'tc_photo' => '',
   'tc_bwoptions' => '0',
   'pp_customization' => '',
   'pp_profile_update' => '0',
   'status_date_formatted_short' => 'Today, 07:32 PM',
   '_isLocked' => '0',
   '_userCanReply' => '1',
   '_canDelete' => '1',
   '_canLock' => '1',
   '_canUnlock' => '',
   '_creatorImg' => 'http://localhost/nsocial/developer/public/style_status/ipb.png',
   '_creatorText' => 'Board',
   'bw_is_spammer' => '0',
   'bw_from_sfs' => '0',
   'bw_vnc_type' => '0',
   'bw_forum_result_type' => '0',
   'bw_no_status_update' => '0',
   'bw_status_email_mine' => '0',
   'bw_status_email_all' => '0',
   'bw_disable_customization' => '0',
   'bw_local_password_set' => '0',
   'bw_disable_tagging' => '0',
   'bw_disable_prefixes' => '0',
   'bw_using_skin_gen' => '0',
   'bw_disable_gravatar' => '0',
   'member_rank_img' => 'http://localhost/nsocial/developer/public/style_extra/team_icons/admin.png',
   'member_rank_img_i' => 'img',
   'show_warn' => '',
   'custom_fields' =>  '',
   '_has_photo' => '0',
   'pp_small_photo' => $data['pp_small_photo'],
   'pp_small_width' => $data['pp_small_width'],
   'pp_small_height' => $data['pp_small_height'],
   'pp_mini_photo' => $data['pp_mini_photo'],
   'pp_mini_width' => $data['pp_mini_width'],
   'pp_mini_height' => $data['pp_mini_height'],
   '_online' => '1',
   '_last_active' => 'Today, 07:43 PM',
   '_pp_rating_real' => '0',
   'members_display_name_short' => $data['members_display_name_short'],
   'member_title' => 'Administrator',
   'status_replies' => $data['status_replies'],
   'like' => $data['like'],
   'replies' => $data['replies'],
))) : '' ) . "";
return $IPBHTML;
}

/* -- statusReplies --*/
function statusReplies($replies=array(), $no_wrapper=false) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['statusReplies'] ) )
{
$count_9887910be624b4a0691e5d0cc8769b71 = is_array($this->functionData['statusReplies']) ? count($this->functionData['statusReplies']) : 0;
$this->functionData['statusReplies'][$count_9887910be624b4a0691e5d0cc8769b71]['replies'] = $replies;
$this->functionData['statusReplies'][$count_9887910be624b4a0691e5d0cc8769b71]['no_wrapper'] = $no_wrapper;
}
$IPBHTML .= "" . ((!$no_wrapper) ? ("
	<ul class='ipsList_withtinyphoto clear'>
") : ("")) . "".$this->__f__9b09ae2e42454db932a9fe65103e2fc8($replies,$no_wrapper)."" . ((!$no_wrapper) ? ("
	</ul>
") : ("")) . "";
return $IPBHTML;
}


function __f__9b09ae2e42454db932a9fe65103e2fc8($replies=array(), $no_wrapper=false)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $replies as $reply )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<li id='statusReply-{$reply['reply_id']}' class='ipsPad row2'>
		<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$reply['member_id']}", "public",'' ), "{$reply['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$reply['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$reply['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_tiny' /></a>	
		<div class=\"status_mini_content list_content\">
			<h5><strong>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($reply) : '' ) . "</strong></h5>
			{$reply['reply_content']}
			<br />
			<span class='desc lighter'>{$reply['reply_date_formatted']}</span>
			<span class='desc mod_links'>
				" . (($reply['_canDelete']) ? (" &middot; <a href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=deleteReply&amp;status_id={$reply['reply_status_id']}&amp;reply_id={$reply['reply_id']}&amp;k={$this->member->form_hash}\" id=\"statusReplyDelete-{$reply['reply_status_id']}-{$reply['reply_id']}\" class=\"__sDR __dr{$reply['reply_status_id']}-{$reply['reply_id']}\">{$this->lang->words['status_delete_link']}</a>") : ("")) . "
                <span class=\"right\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('portal')->repButtons($this->memberData, array_merge( array( 'primaryId' => $reply['reply_id'], 'domLikeStripId' => 'like_status_' . $reply['reply_id'], 'domCountId' => 'rep_status_' . $reply['reply_id'], 'app' => 'portal', 'type' => 'log_id', 'likeFormatted' => $reply['like']['formatted'], 'has_given_rep' => $reply['like']['iLike'],$reply) )) : '' ) . "</span>
			</span>
		</div>
	</li>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- statusUpdates --*/
function statusUpdates($updates=array(), $smallSpace=0, $latestOnly=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_portal', $this->_funcHooks['statusUpdates'] ) )
{
$count_b5ea3b5063b6d68829bd1adafb15713d = is_array($this->functionData['statusUpdates']) ? count($this->functionData['statusUpdates']) : 0;
$this->functionData['statusUpdates'][$count_b5ea3b5063b6d68829bd1adafb15713d]['updates'] = $updates;
$this->functionData['statusUpdates'][$count_b5ea3b5063b6d68829bd1adafb15713d]['smallSpace'] = $smallSpace;
$this->functionData['statusUpdates'][$count_b5ea3b5063b6d68829bd1adafb15713d]['latestOnly'] = $latestOnly;
}
$IPBHTML .= "<script type=\"text/javascript\">
//ipb.status.maxReplies = " . intval($this->settings['su_max_replies']) . ";
//ipb.status.smallSpace = " . intval($smallSpace) . ";
</script>".$this->__f__69856154087a1dd06665fade58276823($updates,$smallSpace,$latestOnly)."";
return $IPBHTML;
}


function __f__69856154087a1dd06665fade58276823($updates=array(), $smallSpace=0, $latestOnly=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $updates as $id => $status )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
    " . ((isset($status['member_id'])) ? ("<div  data-id=\"{$status['status_id']}\">
                " . (($this->memberData['member_id'] AND $latestOnly AND $status['member_id'] == $this->memberData['member_id']) ? ("
                <script type=\"text/javascript\">
                        ipb.status.myLatest = {$status['status_id']};
                </script>
                ") : ("")) . "
                <div class='ipsBox_container ipsPad' id='statusWrap-{$status['status_id']}'>
                        <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$status['member_id']}", "public",'' ), "{$status['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'>
                                <img src='{$status['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$status['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' />
                        </a>	
                        <div class=\"ipsBox_withphoto status_content\">
                                <div id=\"statusContent-{$status['status_id']}\">
                                        <h4>
                                                " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($status) : '' ) . "
                                                " . (($status['status_member_id'] != $status['status_author_id']) ? ("
                                                        &rarr;
                                                        " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($status['owner']) : '' ) . "
                                                ") : ("")) . "
                                        </h4>
                                        <div class='status_status'>
                                                " . html_entity_decode($status['status_content']) . "
                                        </div>
                                        <span class='desc lighter blend_links'>
                                                <img src=\"{$this->settings['img_url']}/icon_lock.png\" id='statusLockImg-{$status['status_id']}' alt=\"{$this->lang->words['status__locked']}\" " . ((!$status['status_is_locked']) ? ("style='display: none'") : ("")) . " />
                                                " . ((! $smallSpace AND $status['_creatorImg']) ? ("<img src=\"{$status['_creatorImg']}\" alt='' />") : ("")) . "
                                                <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=status&amp;type=single&amp;status_id={$status['status_id']}", "public",'' ), "true", "members_status_single" ) . "'>{$status['status_date_formatted_short']}</a>" . (($smallSpace AND $status['_creatorText'] AND $status['status_creator'] AND $status['status_creator'] != 'ipb') ? (" {$this->lang->words['su_via']} {$status['_creatorText']}") : ("")) . "
                                        </span>
                                        <span class='mod_links'>
                                                " . (($status['_canDelete']) ? (" &middot; <a rel=\"nofollow\" href=\"{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=status&amp;do=deleteStatus&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}\" id=\"statusDelete-{$status['status_id']}\" class=\"___sD __d{$status['status_id']}\">{$this->lang->words['status_delete_link']}</a>") : ("")) . "
                                                <span id='statusUnlock-{$status['status_id']}' " . (($status['_isLocked'] AND $status['_canUnlock']) ? ("style='display:inline'") : ("style='display:none'")) . "> &middot; <a rel=\"nofollow\"  href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=unlockStatus&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}\" id=\"statusUnlockLink-{$status['status_id']}\" class=\"__sU __u{$status['status_id']}\">{$this->lang->words['status_unlock_link']}</a></span>
                                                <span id='statusLock-{$status['status_id']}' " . (($status['_canLock'] AND ! $status['_isLocked']) ? ("style='display:inline'") : ("style='display:none'")) . "> &middot; <a rel=\"nofollow\"  href=\"{$this->settings['base_url']}app=members&amp;module=profile&amp;section=status&amp;do=lockStatus&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}\" id=\"statusLockLink-{$status['status_id']}\" class=\"__sL __l{$status['status_id']}\">{$this->lang->words['status_lock_link']}</a></span>
                                                <span class=\"right\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'repButtons' ) ? $this->registry->getClass('output')->getTemplate('portal')->repButtons($this->memberData, array_merge( array( 'primaryId' => $status['status_id'], 'domLikeStripId' => 'like_status_' . $status['status_id'], 'domCountId' => 'rep_status_' . $status['status_id'], 'app' => 'portal', 'type' => 'id', 'likeFormatted' => $status['like']['formatted'], 'has_given_rep' => $status['like']['iLike'],$status) )) : '' ) . "</span>
                                        </span>
                                </div>
                                <div id=\"statusFeedback-{$status['status_id']}\" class='status_feedback'>
                                        " . (($status['status_replies'] AND count( $status['replies'] )) ? ("" . (($status['status_replies'] > 3) ? ("
                                                        <div class='status_mini_wrap row2 altrow' id='statusMoreWrap-{$status['status_id']}'>
                                                                <img src=\"{$this->settings['img_url']}/comments.png\" alt=\"\" /> &nbsp;<a href=\"#\" id=\"statusMore-{$status['status_id']}\" class='__showAll __x{$status['status_id']}'>" . sprintf( $this->lang->words['status_show_all_x'], $status['status_replies'] ) . "</a>
                                                        </div>
                                                ") : ("")) . "
                                                <ul id='statusReplies-{$status['status_id']}' class='ipsList_withtinyphoto clear'>
                                                        " . ( method_exists( $this->registry->getClass('output')->getTemplate('portal'), 'statusReplies' ) ? $this->registry->getClass('output')->getTemplate('portal')->statusReplies($status['replies'], 1) : '' ) . "
                                                </ul>") : ("")) . "
                                        <div id='statusReplyBlank-{$status['status_id']}'></div>
                                        <div id='statusReply-{$status['status_id']}'>
                                        " . (($status['_userCanReply']) ? ("
                                                <ul class='ipsList_withtinyphoto reply row2 ipsPad'>
                                                        <li>
                                                                <form id='statusReplyForm-{$status['status_id']}' action='{$this->settings['base_url']}app=portal&amp;module=ajax&amp;section=status&amp;do=reply&amp;status_id={$status['status_id']}&amp;k={$this->member->form_hash}&amp;id={$this->memberData['member_id']}' method='post'>
                                                                        <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$this->memberData['member_id']}", "public",'' ), "{$this->memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$this->memberData['pp_mini_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$this->memberData['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_tiny' /></a>
                                                                        <div class='list_content'>
                                                                                <div class=\"status_mini_content\">
                                                                                        <textarea class='status_textarea input_text' rows='3' cols='50' name='comment-{$status['status_id']}' id='statusText-{$status['status_id']}'></textarea>
                                                                                        <div class=\"status_submit\"><input type='submit' class='__submit input_submit' id='statusSubmit-{$status['status_id']}' value='{$this->lang->words['status__dfcomment']}' /></div>
                                                                                </div>									
                                                                        </div>
                                                                </form>
                                                                <a href='#' class='__showform' id='statusReplyFormShow-{$status['status_id']}' style='display: none'>{$this->lang->words['status__addcomment']}</a>
                                                        </li>
                                                </ul>
                                                <script type='text/javascript'>
                                                        if( $('statusReplyForm-{$status['status_id']}') )
                                                        {
                                                                $('statusReplyForm-{$status['status_id']}').hide();
                                                        }
                                                        if( $('statusReplyFormShow-{$status['status_id']}') )
                                                        {
                                                                $('statusReplyFormShow-{$status['status_id']}').show();
                                                        }
                                                </script>
                                        ") : ("")) . "
                                        </div>
                                        <div class='status_mini_wrap row2 altrow' id='statusMaxWrap-{$status['status_id']}' " . (($status['status_replies'] < $this->settings['su_max_replies']) ? ("style='display:none'") : ("")) . ">
                                                <img src=\"{$this->settings['img_url']}/locked_replies.png\" title=\"{$this->lang->words['status_too_many_replies']}\" alt='x' /> {$this->lang->words['status_too_many_replies']}
                                        </div>
                                </div>
                        </div>
                </div>
        </div>") : ("")) . "

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>