<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:15:00 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_modcp_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['deletedPosts'] = array('post_data','disablelightbox','hasPosts');
$this->_funcHooks['deletedTopics'] = array('hastopics');
$this->_funcHooks['editUserForm'] = array('editusercfielddesc','custom_fields','displaynamehistory','editusercfields');
$this->_funcHooks['latestWarnLogs'] = array('warningloop','haswarnings');
$this->_funcHooks['memberLookup'] = array('canEditMember');
$this->_funcHooks['membersList'] = array('weAreSupmod','memberwarn','sendpm','blog','gallery','norep','posrep','negrep','repson','isnotbanned','isnotbanned2','members','showmembers');
$this->_funcHooks['membersModIPForm'] = array('modIpIe');
$this->_funcHooks['membersModIPFormMembers'] = array('ipMembers','modIPMembers');
$this->_funcHooks['membersModIPFormPosts'] = array('ipPosts','modFindMemberPosts');
$this->_funcHooks['modAnnounceForm'] = array('buttonlang','announceMessage','buttonlang');
$this->_funcHooks['modAnnouncements'] = array('announce_forums','notactive','notactive','announceHasForums','announceForum','announcements','hasAnnouncements');
$this->_funcHooks['modCPpost'] = array('reputation','noRep','posRep','negRep','repIgnored','postMid','postMember','postAdmin','postIp','postIsHardDeleted','hasDeletedReasonRow','hasDeletedReason','showReason','postDeletedReason','isDeleted','canEdit','approveUnapprove','approvePost','canDelete','reportedPostData','isUnapproved','postEditByReason','postEditBy','reportedPostData');
$this->_funcHooks['modCPtopic'] = array('haslastpage','pages','isLink','isLinkEnd','multipages','hasStarterId','isntLink','hasDeletedReason','showReason','topicDeletedReason','replylang','isntLink3','tidRestore','topicIsHardDeleted','tidRestore','isntLink4','topics');
$this->_funcHooks['portalPage'] = array('tabs','accessRC');
$this->_funcHooks['subTabLoop'] = array('subTabs','isMainTab','findTab');
$this->_funcHooks['unapprovedPosts'] = array('post_data','disablelightbox','hasPosts');
$this->_funcHooks['unapprovedTopics'] = array('hastopics');


}

/* -- deletedPosts --*/
function deletedPosts($posts, $other_data=array(), $pagelinks='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['deletedPosts'] ) )
{
$count_79daef456dfcf8ba581312a6f01d30a1 = is_array($this->functionData['deletedPosts']) ? count($this->functionData['deletedPosts']) : 0;
$this->functionData['deletedPosts'][$count_79daef456dfcf8ba581312a6f01d30a1]['posts'] = $posts;
$this->functionData['deletedPosts'][$count_79daef456dfcf8ba581312a6f01d30a1]['other_data'] = $other_data;
$this->functionData['deletedPosts'][$count_79daef456dfcf8ba581312a6f01d30a1]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<script type='text/javascript'>
	ipb.topic.inSection	= 'topicview';
</script>
<style type='text/css'>
	.post_mod, .post_id { display: none; }
</style>
{$this->templateVars['test']}
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	" . ((is_array( $posts ) AND count( $posts )) ? ("
		<div id='ips_Posts'>
			".$this->__f__58b9873e12b3838764ccb6e1c0d865bd($posts,$other_data,$pagelinks)."		</div>
	") : ("
		<div class='no_messages'>
			{$this->lang->words['no_deleted_posts']}
		</div>
	")) . "
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}


function __f__58b9873e12b3838764ccb6e1c0d865bd($posts, $other_data=array(), $pagelinks='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $posts as $post )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPpost' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPpost($post, array( 'sdData' => $other_data ), $post, 'deleted') : '' ) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- deletedTopics --*/
function deletedTopics($topics, $sdelete=array(), $pagelinks='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['deletedTopics'] ) )
{
$count_23e12040c556f0c1133151d1ff901dc6 = is_array($this->functionData['deletedTopics']) ? count($this->functionData['deletedTopics']) : 0;
$this->functionData['deletedTopics'][$count_23e12040c556f0c1133151d1ff901dc6]['topics'] = $topics;
$this->functionData['deletedTopics'][$count_23e12040c556f0c1133151d1ff901dc6]['sdelete'] = $sdelete;
$this->functionData['deletedTopics'][$count_23e12040c556f0c1133151d1ff901dc6]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("forums", "0" ) . "
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<table class='ipb_table topic_list' id='forum_table'>
		" . ((is_array( $topics ) AND count( $topics )) ? ("
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPtopic' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPtopic($topics, $pagelinks, 'deleted', $sdelete) : '' ) . "
		") : ("
			<tr> 
				<td colspan='3' class='no_messages'>{$this->lang->words['no_deleted_topics']}</td>
			</tr>
		")) . "
	</table>
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}

/* -- editUserForm --*/
function editUserForm($profile, $custom_fields=null) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['editUserForm'] ) )
{
$count_864a405dfa86a27175fd1b3939450a6e = is_array($this->functionData['editUserForm']) ? count($this->functionData['editUserForm']) : 0;
$this->functionData['editUserForm'][$count_864a405dfa86a27175fd1b3939450a6e]['profile'] = $profile;
$this->functionData['editUserForm'][$count_864a405dfa86a27175fd1b3939450a6e]['custom_fields'] = $custom_fields;
}
$IPBHTML .= "<form action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;do=doeditmember", "public",'' ), "", "" ) . "' method='post'>
<input type='hidden' name='auth_key' value='{$this->member->form_hash}' />
<input type='hidden' name='mid' value='{$profile['member_id']}' />
<input type=\"hidden\" name=\"_st\" value=\"{$this->request['_st']}\" />
<input type=\"hidden\" name=\"t\" value=\"{$this->request['t']}\" />
<input type=\"hidden\" name=\"pf\" value=\"{$this->request['pf']}\" />
<h2 class='maintitle'>{$this->lang->words['cp_em_title']}: <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$profile['_parsedMember']['member_id']}", "public",'' ), "{$profile['_parsedMember']['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'>{$profile['_parsedMember']['members_display_name']}</a></h2>
<div class=''>
	
	<fieldset class='with_subhead'>
		<h3 class='bar'>{$this->lang->words['warn_member_details']}</h3>
		<h4>
			<img class=\"ipsUserPhoto ipsUserPhoto_large\" src='{$profile['_parsedMember']['pp_thumb_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$profile['_parsedMember']['members_display_name']) . "\" />
		</h4>
		<ul>
			<li class='field'>
				" . $this->registry->getClass('output')->getReplacement("find_topics_link") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$profile['_parsedMember']['member_id']}", "public",'' ), "", "" ) . "'>{$this->lang->words['gbl_find_my_content']}</a>
			</li>
			" . (($this->memberData['g_mem_info'] && $this->settings['auth_allow_dnames']) ? ("
				<li class='field' id='dname_history'>
					" . $this->registry->getClass('output')->getReplacement("display_name") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=dname&amp;id={$profile['_parsedMember']['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_dname_history']}'>{$this->lang->words['display_history']}</a>
				</li>
			") : ("")) . "
			<li class='field'>
				<img src='{$this->settings['img_url']}/warn.png' /> <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;member={$profile['_parsedMember']['member_id']}&amp;from_app=members", "public",'' ), "", "" ) . "' id='warn_link_xxx_{$profile['_parsedMember']['member_id']}' title='{$this->lang->words['warn_view_history']}'>" . sprintf( $this->lang->words['warn_status'], $profile['_parsedMember']['warn_level'] ) . "</a>
			</li>
		</ul>
	</fieldset>
	<fieldset>
		<h3 class='bar'>{$this->lang->words['edit_user_images']}</h3>
		<ul class='ipsForm ipsForm_horizontal'>
			<li class='ipsField clearfix ipsPad_top'>
				<label for='photo' class='ipsField_title'>{$this->lang->words['cp_remove_photo']}</label>
				<p class='ipsForm_content'>
					<select name=\"photo\" id='photo' class='input_select'>
						<option value=\"0\">{$this->lang->words['no']}</option>
						<option value=\"1\">{$this->lang->words['yes']}</option>
					</select>
				</p>
			</li>
		</ul>
		<h3 class='bar'>{$this->lang->words['edit_user_permissions']}</h3>
		<ul class='ipsForm ipsForm_horizontal'>
			<li class='ipsField clearfix ipsPad_top'>
				<label for='photo' class='ipsField_title'>{$this->lang->words['cp_can_post_status_updates']}</label>
				<p class='ipsForm_content'>
					<select name=\"status_updates\" class='input_select'>
						<option value=\"0\" " . (($profile['_parsedMember']['bw_no_status_update'] == 1) ? ("selected='selected'") : ("")) . ">{$this->lang->words['no']}</option>
						<option value=\"1\" " . (($profile['_parsedMember']['bw_no_status_update'] == 0) ? ("selected='selected'") : ("")) . ">{$this->lang->words['yes']}</option>
					</select>
				</p>
			</li>
		</ul>
		" . ((count($custom_fields->out_fields)) ? ("
			<h3 class='bar'>{$this->lang->words['edit_user_profile']}</h3>
			<ul class='ipsForm ipsForm_horizontal'>
				<li class='ipsField clearfix ipsPad_top'>
					<label for='title' class='ipsField_title'>{$this->lang->words['edit_user_title']}</label>
					<p class='ipsField_content'>
						<input type='text' class=\"input_text\" name='title' size='50' value='{$profile['title']}' />
					</p>
				</li>
				".$this->__f__2adcecb741645b3f638055b8e828bfd8($profile,$custom_fields)."			</ul>
		") : ("")) . "
		<h3 class='bar'>{$this->lang->words['cp_edit_signature']}</h3>
		<div class='ipsPad'>
			{$profile['signature']}
		</div>
		<h3 class='bar'>{$this->lang->words['cp_edit_aboutme']}</h3>
		<div class='ipsPad'>
			{$profile['aboutme']}
		</div>
	</fieldset>
	<fieldset class='submit'>
		<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['cp_em_submit']}\" />
	</fieldset>
</div>
</form>";
return $IPBHTML;
}


function __f__2adcecb741645b3f638055b8e828bfd8($profile, $custom_fields=null)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $custom_fields->out_fields as $id => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li class='ipsField clearfix ipsPad_top'>
						<label for='field_{$id}' class='ipsField_title'>{$custom_fields->field_names[ $id ]}</label>
						<div class='ipsField_content'>
							{$data}
							" . (($custom_fields->field_desc[ $id ]) ? ("
								<br /><span class='desc'>{$custom_fields->field_desc[ $id ]}</span>
							") : ("")) . "
						</div>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- inlineModIPMessage --*/
function inlineModIPMessage($msg='') {
$IPBHTML = "";
$IPBHTML .= "<p class='message unspecific'>{$msg}</p>";
return $IPBHTML;
}

/* -- latestWarnLogs --*/
function latestWarnLogs($warnings, $pagelinks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['latestWarnLogs'] ) )
{
$count_4389c2a08e943560121fe22c4e38c160 = is_array($this->functionData['latestWarnLogs']) ? count($this->functionData['latestWarnLogs']) : 0;
$this->functionData['latestWarnLogs'][$count_4389c2a08e943560121fe22c4e38c160]['warnings'] = $warnings;
$this->functionData['latestWarnLogs'][$count_4389c2a08e943560121fe22c4e38c160]['pagelinks'] = $pagelinks;
}

if ( ! isset( $this->registry->templateStriping['warnings'] ) ) {
$this->registry->templateStriping['warnings'] = array( FALSE, "row1","row2 altrow");
}
$IPBHTML .= "<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<table class='ipb_table'>
		<tr class='header'>
			<th scope='col'>{$this->lang->words['w_v_warnto']}</th>
			<th scope='col'>{$this->lang->words['w_v_warnby']}</th>
			<th scope='col'>{$this->lang->words['w_v_reason']}</th>
			<th scope='col'>&nbsp;</th>
		</tr>
		" . ((is_array( $warnings ) AND count( $warnings )) ? ("
						".$this->__f__f6de80927828fe6d31564fc920a1cef9($warnings,$pagelinks)."		") : ("
			<tr>
				<td class=\"no_messages\" colspan=\"3\">{$this->lang->words['warn__no_recent']}</td>
			</tr>
		")) . "
	</table>
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}


function __f__f6de80927828fe6d31564fc920a1cef9($warnings, $pagelinks)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $warnings as $r )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<tr class='" .  IPSLib::next( $this->registry->templateStriping["warnings"] ) . "'>
					<td><img src='{$r['pp_mini_photo']}' class='ipsUserPhoto ipsUserPhoto_mini' alt='' /> " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r) : '' ) . "</td>
					<td>{$r['punisher_photo']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($r['punisherMember']) : '' ) . "</td>
					<td>{$r['wl_reason']}</td>
					<td><span class='ipsButton_secondary clickable' onclick='warningPopup( this, {$r['wl_id']} )'>{$this->lang->words['w_v_moreinfo']}</span></td>
				</tr>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- memberLookup --*/
function memberLookup() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['memberLookup'] ) )
{
$count_d1c26b9544aa070bf4722c5b8cab7df7 = is_array($this->functionData['memberLookup']) ? count($this->functionData['memberLookup']) : 0;
}
$IPBHTML .= "" . (($this->memberData['g_is_supmod']) ? ("
" . $this->registry->getClass('output')->addJSModule("modcp", "0" ) . "
<script type='text/javascript'>
ipb.modcp.initialtext = \"{$this->lang->words['start_typing_lup']}\";
</script>
<h2 class='maintitle'>{$this->lang->words['memberlookup_title']}</h2>
<div class='clearfix ipsBox'>
	<div class='ipsBox_container ipsPad'>
		<h3 class='ipsType_subtitle'>{$this->lang->words['memberlookup_desc']}</h3>
		<p class='desc'>{$this->lang->words['starttypeingmember']}</p>
		<form action='#' method='post' style='margin-top: 10px'>
			<input type='text' name='memberlookup' id='memberlookup' class='input_text' size='50' />
		</form>
	</div>
	<script type='text/javascript'>
		$('memberlookup').defaultize( \"{$this->lang->words['start_typing_lup']}\" );
	</script>
</div>
") : ("
<div class='clearfix '>
	<div class='ipsBox_container ipsPad'>
		<p>{$this->lang->words['intro_blurb']}</p>
	</div>
</div>
")) . "";
return $IPBHTML;
}

/* -- membersList --*/
function membersList($type, $members, $pagelinks='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersList'] ) )
{
$count_aa8feecc0296fcd96c9cae4157288606 = is_array($this->functionData['membersList']) ? count($this->functionData['membersList']) : 0;
$this->functionData['membersList'][$count_aa8feecc0296fcd96c9cae4157288606]['type'] = $type;
$this->functionData['membersList'][$count_aa8feecc0296fcd96c9cae4157288606]['members'] = $members;
$this->functionData['membersList'][$count_aa8feecc0296fcd96c9cae4157288606]['pagelinks'] = $pagelinks;
}

if ( ! isset( $this->registry->templateStriping['memberStripe'] ) ) {
$this->registry->templateStriping['memberStripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<div id='member_list' class='clear block_wrap'>
		<div id='member_wrap'>
			<ul class='ipsMemberList'>
				" . ((is_array( $members ) and count( $members )) ? ("
										".$this->__f__d1b4fa453891171279b55cc5b8fe1831($type,$members,$pagelinks)."				") : ("
					<p class='no_messages'>{$this->lang->words['no_results']}</p>
				")) . "
			</ul>
		</div>
	</div>
</div>
	<div>{$pagelinks}</div>";
return $IPBHTML;
}


function __f__d1b4fa453891171279b55cc5b8fe1831($type, $members, $pagelinks='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $members as $member )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li id='member_id_{$member['member_id']}' class='ipsPad clearfix member_entry " .  IPSLib::next( $this->registry->templateStriping["memberStripe"] ) . "'>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'><img src='{$member['pp_small_photo']}' alt=\"" . sprintf($this->lang->words['users_photo'],$member['members_display_name']) . "\" class='ipsUserPhoto ipsUserPhoto_medium' /></a>
							<div class='ipsBox_withphoto'>
								<ul class='ipsList_inline right'>
									" . (($this->memberData['g_is_supmod'] == 1 && $member['member_id'] != $this->memberData['member_id']) ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;do=editmember&amp;auth_key={$this->member->form_hash}&amp;mid={$member['member_id']}&amp;pf={$member['member_id']}", "public",'' ), "", "" ) . "' class='ipsButton_secondary'>{$this->lang->words['edit_member']}</a></li>
									") : ("")) . "
									" . (($member['show_warn']) ? ("
										<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;member={$member['member_id']}", "public",'' ), "", "" ) . "' id='warn_link_modcp_{$member['member_id']}' title='{$this->lang->words['warn_view_history']}' class='ipsButton_secondary'>{$this->lang->words['warn_view_history']}</a>
									") : ("")) . "
									" . (($this->memberData['g_use_pm'] AND $this->memberData['members_disable_pm'] == 0 AND IPSLib::moduleIsEnabled( 'messaging', 'members' ) && $member['member_id'] != $this->memberData['member_id']) ? ("
										<li class='pm_button' id='pm_xxx_{$member['pp_member_id']}'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=list&amp;module=messaging&amp;section=send&amp;do=form&amp;fromMemberID={$member['pp_member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['pm_member']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("send_msg") . "</a></li>
									") : ("")) . "
									<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=search&amp;do=user_activity&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['gbl_find_my_content']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("find_topics_link") . "</a></li>
									" . (($member['has_blog'] AND IPSLib::appIsInstalled( 'blog' )) ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=blog&amp;module=display&amp;section=blog&amp;mid={$member['member_id']}", "public",'' ), "", "" ) . "' title='{$this->lang->words['view_blog']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("blog_link") . "</a></li>
									") : ("")) . "
									" . (($member['has_gallery'] AND IPSLib::appIsInstalled( 'gallery' )) ? ("
										<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;user={$member['member_id']}", "public",'' ), "{$member['members_seo_name']}", "useralbum" ) . "' title='{$this->lang->words['view_gallery']}' class='ipsButton_secondary'>" . $this->registry->getClass('output')->getReplacement("gallery_link") . "</a></li>
									") : ("")) . "
								</ul>
								
								<h3 class='ipsType_subtitle'>
									<strong>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($member) : '' ) . "</strong>
								</h3>
								" . (($this->settings['reputation_enabled'] && $this->settings['reputation_show_profile']) ? ("" . (($member['pp_reputation_points'] == 0 || !$member['pp_reputation_points']) ? ("
										<p class='reputation zero ipsType_small left'>
									") : ("")) . "
									" . (($member['pp_reputation_points'] > 0) ? ("
										<p class='reputation positive ipsType_small left'>
									") : ("")) . "
									" . (($member['pp_reputation_points'] < 0) ? ("
										<p class='reputation negative ipsType_small left'>
									") : ("")) . "							
											<span class='number'>{$member['pp_reputation_points']}</span>
										</p>") : ("")) . "
								<span class='desc'>
									{$this->lang->words['member_joined']} " . $this->registry->getClass('class_localization')->getDate($member['joined'],"joined", 0) . "<br />
									" . IPSMember::makeNameFormatted( $member['group'], $member['member_group_id'] ) . " &middot; <strong>{$this->lang->words['modqueued_til']}: " . ((in_array( $type, array( 'modposts', 'suspended', 'restrictposts' ) )) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=profile&amp;section=warnings&amp;member={$member['member_id']}&amp;_tab=warn&amp;type=minus", "public",'' ), "", "" ) . "'>") : ("")) . "<em>{$member['_language']}</em>" . ((in_array( $type, array( 'modposts', 'suspended', 'restrictposts' ) )) ? ("</a>") : ("")) . "</strong>
								</span>
							</div>
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- membersModIPForm --*/
function membersModIPForm($ip="", $inlineMsg='') {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersModIPForm'] ) )
{
$count_2700324514eafb82ffa1f4f734875184 = is_array($this->functionData['membersModIPForm']) ? count($this->functionData['membersModIPForm']) : 0;
$this->functionData['membersModIPForm'][$count_2700324514eafb82ffa1f4f734875184]['ip'] = $ip;
$this->functionData['membersModIPForm'][$count_2700324514eafb82ffa1f4f734875184]['inlineMsg'] = $inlineMsg;
}
$IPBHTML .= "<h2 class='maintitle'>{$this->lang->words['menu_ipsearch']}</h2>
<div class='ipsBox clearfix'>
	<form id=\"userCPForm\" action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=iplookup&amp;fromapp=members&amp;_do=submit", "public",'' ), "", "" ) . "\" method=\"post\">
	<fieldset class=\"ipsBox_container ipsPad\">
		" . (($inlineMsg) ? ("
			{$inlineMsg}
		") : ("")) . "
		<br />
		
		<ul class='ipsForm ipsForm_horizontal'>
			<li class='ipsField'>
				<label for='ipsearch' class='ipsField_title'>{$this->lang->words['ip_enter']}</label>
				<p class='ipsField_content'>
					<input type=\"text\" size=\"40\" maxlength=\"24\" class='input_text' name=\"ip\" value=\"" . (($ip) ? ("{$ip}") : ("{$this->request['ip']}")) . "\" />
					<select name=\"iptool\" class='input_select'>
						<option value=\"resolve\">{$this->lang->words['ip_resolve']}</option>
						<option value=\"posts\">{$this->lang->words['ip_posts']}</option>
						<option value=\"members\">{$this->lang->words['ip_members']}</option>
					</select>&nbsp;
					<input type=\"submit\" class='input_submit' value=\"{$this->lang->words['ip_submit']}\" />
				</p>
			</li>
		</ul>
		<p class='message unspecific'>
			{$this->lang->words['ip_desc_text']}
		</p>
		<p class='desc'>
			{$this->lang->words['ip_warn_text']}
		</p>
	</fieldset>
	</form>
</div>";
return $IPBHTML;
}

/* -- membersModIPFormMembers --*/
function membersModIPFormMembers($pages="",$members) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersModIPFormMembers'] ) )
{
$count_325824ebec04c6b2413f08ca265190f5 = is_array($this->functionData['membersModIPFormMembers']) ? count($this->functionData['membersModIPFormMembers']) : 0;
$this->functionData['membersModIPFormMembers'][$count_325824ebec04c6b2413f08ca265190f5]['pages'] = $pages;
$this->functionData['membersModIPFormMembers'][$count_325824ebec04c6b2413f08ca265190f5]['members'] = $members;
}

if ( ! isset( $this->registry->templateStriping['members'] ) ) {
$this->registry->templateStriping['members'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<div class='topic_controls'>
	{$pages}
</div>
<br />
<table class='ipb_table'>
	<tr class='header'>
		<th style='width: 20%'>{$this->lang->words['ipm_name']}</th>
		<th style='width: 15%'>{$this->lang->words['ipm_ip']}</th>
		<th style='width: 10%' class='short'>{$this->lang->words['ipm_posts']}</th>
		<th style='width: 20%' class='short'>{$this->lang->words['ipm_reg']}</th>
		<th style='width: 15%'>{$this->lang->words['ipm_group']}</th>
		<th style='width: 10%'>&nbsp;</th>
	</tr>
	" . ((is_array( $members ) AND count( $members )) ? ("
				".$this->__f__2d8a82c34371d9b8df98fd2f98480ab6($pages,$members)."	") : ("")) . "
</table>
<br />
<div class='topic_controls'>
	{$pages}
</div>";
return $IPBHTML;
}


function __f__2d8a82c34371d9b8df98fd2f98480ab6($pages="",$members)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $members as $id => $row )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["members"] ) . "'>
				<td>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($row) : '' ) . "</td>
				<td class='altrow'>{$row['ip_address']}</td>
				<td class='short'>{$row['posts']}</td>
				<td class=\"altrow short\">{$row['joined']}</td>
				<td>{$row['groupname']}</td>
				<td class=\"altrow short\">
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;do=editmember&amp;mid={$row['member_id']}&amp;auth_key={$this->member->form_hash}", "public",'' ), "", "" ) . "\" title=\"{$this->lang->words['ipm_edit']}\" class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['ipm_edit']}</a>
				</td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- membersModIPFormPosts --*/
function membersModIPFormPosts($count=0, $pageLinks='', $results) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['membersModIPFormPosts'] ) )
{
$count_e033b9a551b3d6e134aea2046813caae = is_array($this->functionData['membersModIPFormPosts']) ? count($this->functionData['membersModIPFormPosts']) : 0;
$this->functionData['membersModIPFormPosts'][$count_e033b9a551b3d6e134aea2046813caae]['count'] = $count;
$this->functionData['membersModIPFormPosts'][$count_e033b9a551b3d6e134aea2046813caae]['pageLinks'] = $pageLinks;
$this->functionData['membersModIPFormPosts'][$count_e033b9a551b3d6e134aea2046813caae]['results'] = $results;
}

if ( ! isset( $this->registry->templateStriping['posts'] ) ) {
$this->registry->templateStriping['posts'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<p class='message'>
	{$this->lang->words['ipp_found']} {$count}
</p>
<br />
<div class='topic_controls'>
	{$pageLinks}
</div>
<br />
" . ((count($results)) ? ("
		".$this->__f__6cd1b2bba6396d0d78fb4f78ae1f2ac5($count,$pageLinks,$results)."") : ("")) . "
<br />
<div class='topic_controls'>
	{$pageLinks}
</div>";
return $IPBHTML;
}


function __f__6cd1b2bba6396d0d78fb4f78ae1f2ac5($count=0, $pageLinks='', $results)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $results as $result )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<div class='post_block ucp no_sidebar " .  IPSLib::next( $this->registry->templateStriping["posts"] ) . "'>
			<h3>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($result) : '' ) . " | <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$result['topic_id']}&amp;findpost={$result['pid']}", "public",'' ), "{$result['title_seo']}", "showtopic" ) . "' title='{$this->lang->words['modip_viewposts']}'>" . $this->registry->getClass('class_localization')->getDate($result['post_date'],"long", 0) . "</a></h3>
			<div class='post_body'>
				<div class='post'>{$result['post']}<br /></div>
			</div>
		</div>
		<hr />
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- modAnnounceForm --*/
function modAnnounceForm($announce,$forum_html,$type,$editor_html,$msg="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modAnnounceForm'] ) )
{
$count_a4c8b2a905739aec2d4a4c45fb31c6b2 = is_array($this->functionData['modAnnounceForm']) ? count($this->functionData['modAnnounceForm']) : 0;
$this->functionData['modAnnounceForm'][$count_a4c8b2a905739aec2d4a4c45fb31c6b2]['announce'] = $announce;
$this->functionData['modAnnounceForm'][$count_a4c8b2a905739aec2d4a4c45fb31c6b2]['forum_html'] = $forum_html;
$this->functionData['modAnnounceForm'][$count_a4c8b2a905739aec2d4a4c45fb31c6b2]['type'] = $type;
$this->functionData['modAnnounceForm'][$count_a4c8b2a905739aec2d4a4c45fb31c6b2]['editor_html'] = $editor_html;
$this->functionData['modAnnounceForm'][$count_a4c8b2a905739aec2d4a4c45fb31c6b2]['msg'] = $msg;
}
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=save&amp;announce_id={$announce['announce_id']}&amp;type={$type}", "public",'' ), "", "" ) . "\" method=\"post\" id='postingform'>
<fieldset class='row1'>
	<h3 class='ipsType_subtitle'>" . (($type=='add') ? ("{$this->lang->words['announce_add']}") : ("{$this->lang->words['announce_button_edit']}")) . "</h3>
	<br />
	" . (($msg) ? ("
		<p class='message unspecific'>{$msg}</p>
	") : ("")) . "
	<ul class='ipsForm ipsForm_horizontal'>
		<li class='ipsField clearfix'>
			<label for='announce_title' class='ipsField_title'>{$this->lang->words['announce_form_title']}</label>
			<p class='ipsField_content'>
				<input class='input_text' type=\"text\" size=\"50\" name=\"announce_title\" id='announce_title' value=\"{$announce['announce_title']}\" tabindex=\"1\" />
			</p>
		</li>
		<li class='ipsField clearfix'>
			<label for='announce_start' class='ipsField_title'>{$this->lang->words['announce_form_start']}</label>
			<p class='ipsField_content'>
				<input class='input_text' type=\"text\" size=\"10\" name=\"announce_start\" id='announce_start' value=\"{$announce['announce_start']}\" tabindex=\"2\" /><br />
				<span class=\"desc lighter\">{$this->lang->words['announce_form_date']} {$this->lang->words['announce_form_startdesc']}</span>
			</p>
		</li>
		<li class='ipsField clearfix'>
			<label for='announce_end' class='ipsField_title'>{$this->lang->words['announce_form_end']}</label>
			<p class='ipsField_content'>
				<input class='input_text' type=\"text\" size=\"10\" name=\"announce_end\" id='announce_end' value=\"{$announce['announce_end']}\" tabindex=\"2\" /><br />
				<span class=\"desc lighter\">{$this->lang->words['announce_form_date']} {$this->lang->words['announce_form_enddesc']}</span>
			</p>				
		</li>
		<li class='ipsField clearfix'>
			<label for='announce_forum' class='ipsField_title'>{$this->lang->words['announce_form_forums']}</label>
			<p class='ipsField_content'>
				<select class=\"input_select\" multiple=\"multiple\" size=\"10\" id='announce_forum' name=\"announce_forum[]\" tabindex=\"4\">{$forum_html}</select><br />
				<span class=\"desc lighter\">{$this->lang->words['announce_form_forums2']}</span>
			</p>
		</li>
		<li class='ipsField clearfix'>
			<label for='' class='ipsField_title'>{$this->lang->words['announce_form_announce']}</label>
			<div class='ipsField_content'>
				{$editor_html}
			</div>
		</li>
		<li class='ipsField ipsField_checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_active\" id='announce_active' value=\"1\" {$announce['announce_active_checked']} />
			<p class='ipsField_content'>
				<label for='announce_active'>{$this->lang->words['announce_form_enable']}</label>
			</p>
		</li>
		<li class='ipsField ipsField_checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_html_enabled\" id='announce_html_enabled' value=\"1\" {$announce['html_checkbox']} />
			<p class='ipsField_content'>
				<label for='announce_html_enabled'>{$this->lang->words['announce_use_html']}</label>
			</p>
		</li>
		<li class='ipsField ipsField_checkbox'>
			<input type=\"checkbox\" class=\"checkbox\" name=\"announce_nlbr_enabled\" id='announce_nlbr_enabled' value=\"1\" {$announce['nlbr_checkbox']} />
			<p class='ipsField_content'>
				<label for='announce_nlbr_enabled'>{$this->lang->words['announce_use_nlbr']}</label>
			</p>
		</li>
	</ul>
</fieldset>
<br />
<fieldset class='submit'>
	<input type=\"submit\" value=\"" . (($type=='add') ? ("{$this->lang->words['announce_add']}") : ("{$this->lang->words['announce_button_edit']}")) . "\" class=\"input_submit\" tabindex=\"7\" /> {$this->lang->words['or']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums", "public",'' ), "", "" ) . "' title='{$this->lang->words['cancel_edit']}' class='cancel'>{$this->lang->words['cancel']}</a>
</fieldset>
</form>";
return $IPBHTML;
}

/* -- modAnnouncements --*/
function modAnnouncements($announcements) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modAnnouncements'] ) )
{
$count_89600a76a05c550cf34a28b0ad49d6f6 = is_array($this->functionData['modAnnouncements']) ? count($this->functionData['modAnnouncements']) : 0;
$this->functionData['modAnnouncements'][$count_89600a76a05c550cf34a28b0ad49d6f6]['announcements'] = $announcements;
}

if ( ! isset( $this->registry->templateStriping['announcements'] ) ) {
$this->registry->templateStriping['announcements'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("ucp", "0" ) . "
<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=save", "public",'' ), "", "" ) . "\" id=\"mutliact\" method=\"post\">
<div class='topic_buttons'>
	<ul class='topic_controls'>
		<li>
			<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=add", "public",'' ), "", "" ) . "\" class='ipsButton'>{$this->lang->words['announce_add']}</a>
		</li>
	</ul>
</div>
	<h3 class='maintitle clear'>{$this->lang->words['announce_current']}</h3>
	<table class='ipb_table' summary=\"{$this->lang->words['ucp_announcements']}\">
		<tr class='header'>
			<th scope='col' style=\"width: 40%\">{$this->lang->words['announce_title']}</th>
			<th scope='col' class='short' style=\"width: 10%\">{$this->lang->words['announce_form_starts']}</th>
			<th scope='col' class='short' style=\"width: 10%\">{$this->lang->words['announce_form_end']}</th>
			<th scope='col' style=\"width: 25%\">{$this->lang->words['announce_forums']}</th>
			<th scope='col' style=\"width: 15%\">&nbsp;</th>
		</tr>
		" . ((is_array( $announcements ) AND count( $announcements )) ? ("
						".$this->__f__25f825ca0d214faa9993c538f4e0cf2a($announcements)."		") : ("
			<tr>
				<td class='no_messages' colspan=\"5\">{$this->lang->words['announce_none']}</td>
			</tr>
		")) . "
	</table>
</form>";
return $IPBHTML;
}


function __f__96c31b181a1ab226f4cee0d714b34917($announcements,$announce='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $announce['_forums'] as $forum )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
										<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$forum[0]}", "public",'' ), "", "" ) . "\">{$forum[1]}</a></li>
									
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__25f825ca0d214faa9993c538f4e0cf2a($announcements)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $announcements as $announce )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				<tr class=\"" .  IPSLib::next( $this->registry->templateStriping["announcements"] ) . " " . ((!$announce['announce_active']) ? ("moderated") : ("")) . "\">
					<td>
						<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showannouncement={$announce['announce_id']}&amp;f=0", "public",'' ), "{$announce['announce_seo_title']}", "showannouncement" ) . "\">{$announce['announce_title']}</a></strong> " . ((!$announce['announce_active']) ? ("<span class='desc'>{$this->lang->words['announce_page_disabled']}</span>") : ("")) . "<br /><span class=\"desc\">{$this->lang->words['by_ucfirst']} " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($announce) : '' ) . "</span>
					</td>
					<td class=\"short\">
						" . $this->registry->getClass('class_localization')->getDate($announce['announce_start'],"DATE", 1) . "
					</td>
					<td class=\"short\">
						" . $this->registry->getClass('class_localization')->getDate($announce['announce_end'],"DATE", 1) . "
					</td>
					<td>
						<div class=\"forumdesc\">
							" . (($announce['announce_forum'] == '*') ? ("
								{$this->lang->words['announce_page_allforums']}
							") : ("" . ((is_array( $announce['_forums'] ) and count( $announce['_forums'] )) ? ("
									<ul>
									".$this->__f__96c31b181a1ab226f4cee0d714b34917($announcements,$announce)."									</ul>
								") : ("
									{$announce['announce_forum_show']}
								")) . "")) . "
						</div>
					</td>
					<td class=\"short\">
						<ul class='ipsList_inline ipsList_nowrap'>
							<li>
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=edit&amp;announce_id={$announce['announce_id']}", "public",'' ), "", "" ) . "\" class='ipsButton_secondary'>{$this->lang->words['announce_edit']}</a>
							</li>
							<li>
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=announcements&amp;fromapp=forums&amp;_do=delete&amp;announce_id={$announce['announce_id']}", "public",'' ), "", "" ) . "\" id=\"del_{$announce['announce_id']}\" class='ipsButton_secondary'>{$this->lang->words['announce_delete']}</a>
							</li>
						</ul>
						<script type='text/javascript'>
							$('del_{$announce['announce_id']}').observe('click', ipb.ucp.deleteAnnouncement.bindAsEventListener( this, {$announce['announce_id']} ) );
						</script>
					</td>
				</tr>
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- modcpMessage --*/
function modcpMessage($message='') {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- modCPpost --*/
function modCPpost($post, $displayData, $topic, $type) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modCPpost'] ) )
{
$count_b28713801dbcc71b2056898417cbe67b = is_array($this->functionData['modCPpost']) ? count($this->functionData['modCPpost']) : 0;
$this->functionData['modCPpost'][$count_b28713801dbcc71b2056898417cbe67b]['post'] = $post;
$this->functionData['modCPpost'][$count_b28713801dbcc71b2056898417cbe67b]['displayData'] = $displayData;
$this->functionData['modCPpost'][$count_b28713801dbcc71b2056898417cbe67b]['topic'] = $topic;
$this->functionData['modCPpost'][$count_b28713801dbcc71b2056898417cbe67b]['type'] = $type;
}
$IPBHTML .= "<!--post:{$post['post']['pid']}-->
<script type=\"text/javascript\">
var pid = parseInt({$post['post']['pid']});
if ( pid > ipb.topic.topPid ){
	ipb.topic.topPid = pid;
}
</script>
<div class='post_block hentry clear no_sidebar " . (($this->settings['reputation_enabled']) ? ("with_rep") : ("")) . "' id='post_id_{$post['post']['pid']}'>
	<a id='entry{$post['post']['pid']}'></a>
	" . ((!empty( $post['post']['_repignored'] ) AND $post['post']['_repignored'] == 1 && $post['post']['_ignored'] != 1) ? ("<div class='post_ignore'>
			" . (($post['post']['rep_points'] == 0) ? ("
				<span class='reputation zero' title='{$this->lang->words['top_rep']}'>
			") : ("")) . "
			" . (($post['post']['rep_points'] > 0) ? ("
				<span class='reputation positive' title='{$this->lang->words['top_rep']}'>
			") : ("")) . "
			" . (($post['post']['rep_points'] < 0) ? ("
				<span class='reputation negative' title='{$this->lang->words['top_rep']}' >
			") : ("")) . "
					{$post['post']['rep_points']}</span> {$this->lang->words['top_this_post_by']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$post['author']['member_id']}", "public",'' ), "", "" ) . "'>{$post['author']['members_display_name']}</a> {$this->lang->words['top_below_thresh']}. <a href='#' title='{$this->lang->words['ignore_view_post']}' id='unhide_post_{$post['post']['pid']}'>{$this->lang->words['rep_view_anyway']}</a>
		</div>") : ("")) . "
	
	<div class='post_wrap'>
		<h3 class='" . ((empty($post['author']['member_id'])) ? ("guest ") : ("")) . "row2'>
			<img src='{$post['author']['pp_small_photo']}' class='ipsUserPhoto ipsUserPhoto_tiny' />&nbsp;
			" . (($post['author']['member_id']) ? ("
				<span class=\"author vcard\">" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . "</span>
			") : ("
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($post['author']) : '' ) . "
			")) . "
			
			" . (($post['post']['_show_ip']) ? ("<span class='ip right ipsType_small'>({$this->lang->words['ip']}:
				" . (($post['author']['g_access_cp']) ? ("
					<em>{$this->lang->words['ip_private']}</em>
				") : ("
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;tab=iplookup&amp;fromapp=members&amp;_do=submit&amp;ip={$post['post']['ip_address']}", "public",'' ), "", "" ) . "\" title='{$this->lang->words['info_about_this_ip']}'>{$post['post']['ip_address']}</a>
				")) . ")
				</span>") : ("")) . "
		</h3>
		
		<div class='post_body'>
			" . (($type == 'deleted') ? ("<ul class='ipsList_inline modcp_post_controls right'>
					" . ((!$post['post']['_isDeleted']) ? ("
						<li>
							<img data-tooltip=\"{$this->lang->words['hard_delete_warn_post']}\" src='{$this->settings['img_url']}/icon_timewarning.png' />
						</li>
					") : ("")) . "
					<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=p_hrestore&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;pid[]={$post['post']['pid']}&amp;st={$this->request['st']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller' title='{$this->lang->words['restore_post_desc']}'>{$this->lang->words['restore_post']}</a>
					</li>
					<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=p_hdelete&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;pid[]={$post['post']['pid']}&amp;st={$this->request['st']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller important' title='{$this->lang->words['perm_delete_post']}'>{$this->lang->words['perm_delete_post']}</a>
					</li>
				</ul>
				<ul class='ipsList_inline" . ((empty($displayData['sdData'][ $post['post']['pid'] ])) ? (" modcp_post_controls") : ("")) . "'>
					<li class='desc'>
						<strong>{$this->lang->words['posted']}</strong> <span class='desc lighter'>" . $this->registry->getClass('class_localization')->getDate($post['post']['post_date'],"short", 0) . "</span>
					</li>
					<li class='desc'>
						<strong>{$this->lang->words['deleted_post_date']}</strong> <span class='desc lighter'>" . $this->registry->getClass('class_localization')->getDate($topic['post']['pdelete_time'],"short", 0) . "</span>
					</li>
					<li class='desc'>
						<strong>{$this->lang->words['delete_from_topic']}</strong> <a class='desc lighter' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['post']['tid']}", "public",'' ), "{$topic['post']['title_seo']}", "showtopic" ) . "' title='{$this->lang->words['go_to_topic']}'>" . IPSText::truncate( $topic['post']['title'], 25 ) . "</a>
					</li>
				</ul>
				" . ((! empty($displayData['sdData'][ $post['post']['pid'] ])) ? ("<ul class='ipsList_inline modcp_post_controls'>
						<li class='desc'>
							<strong>{$this->lang->words['dlt_topic_deletedby']}</strong> <span class='desc lighter blend_links'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($displayData['sdData'][ $post['post']['pid'] ]) : '' ) . "</span>
						</li>
						" . (($post['post']['_softDeleteReason']) ? ("<li class='desc'>
								<strong>{$this->lang->words['dlt_topic_reason']}</strong> <span class='desc lighter'><em>" . (($displayData['sdData'][ $post['post']['pid'] ]['sdl_obj_reason']) ? ("{$displayData['sdData'][ $post['post']['pid'] ]['sdl_obj_reason']}") : ("{$this->lang->words['tdb__noreasongi']}")) . "</em></span>
							</li>") : ("")) . "
					</ul>") : ("")) . "") : ("")) . "
			" . (($type == 'unapproved') ? ("<ul class='ipsList_inline modcp_post_controls'>
					" . (($post['post']['_can_edit'] === TRUE) ? ("
						<li class='post_edit'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=post&amp;section=post&amp;do=edit_post&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;p={$post['post']['pid']}&amp;st={$this->request['st']}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' title='{$this->lang->words['post_edit_title']}' class='ipsButton_secondary ipsType_smaller' id='edit_post_{$post['post']['pid']}'>{$this->lang->words['post_edit']}</a></li>
					") : ("")) . "
					<!-- Matt: Approve / unapprove post button -->
					" . (($this->memberData['is_mod']) ? ("<li id='toggle_post_{$post['post']['pid']}'>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=postchoice&amp;tact=approve&amp;selectedpids[{$post['post']['pid']}]={$post['post']['pid']}&amp;t={$post['post']['topic_id']}&amp;f={$post['post']['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' title='{$this->lang->words['post_toggle_visible']}' class='ipsButton_secondary ipsType_smaller'><span id='toggletext_post_{$post['post']['pid']}'>" . (($post['post']['queued']==1) ? ("{$this->lang->words['post_approve']}") : ("{$this->lang->words['post_unapprove']}")) . "</span></a>
						</li>") : ("")) . "
					" . (($post['post']['_can_delete'] === TRUE OR $post['post']['_softDelete']) ? ("
						<li class='post_del' id='del_post_{$post['post']['pid']}'>
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=04&amp;f={$post['post']['forum_id']}&amp;t={$post['post']['topic_id']}&amp;p={$post['post']['pid']}&amp;st={$this->request['st']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' title='{$this->lang->words['post_delete_title']}' class='delete_post ipsButton_secondary important ipsType_smaller'>{$this->lang->words['post_delete']}</a>
						</li>
					") : ("")) . "
					" . (($this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid'] ]['gfx'] > 0) ? ("
						<img src=\"{$this->settings['img_url']}/reports/post_alert_{$this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid']]['gfx']}.png\" alt=\"\" class='ipbmenu clickable' id='post-report-{$post['post']['pid']}' />
					") : ("")) . "
					<li class='desc'>
						<strong>{$this->lang->words['posted']}</strong> <span class='desc lighter'>" . $this->registry->getClass('class_localization')->getDate($post['post']['post_date'],"short", 0) . "</span>
					</li>
					<li class='desc'>
						<strong>{$this->lang->words['in_topic']}</strong> <a class='desc lighter' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$topic['post']['tid']}", "public",'' ), "{$topic['post']['title_seo']}", "showtopic" ) . "'>" . IPSText::truncate( $topic['post']['title'], 35 ) . "</a>
					</li>
				</ul>") : ("")) . "
			<div class='post entry-content " . (($post['post']['_repignored'] == 1) ? ("imgsize_ignore") : ("")) . "'>
				{$post['post']['post']}
				{$post['post']['attachmentHtml']}
				<br />
				" . (($post['post']['edit_by']) ? ("<p class='edit'>
						{$post['post']['edit_by']}
						" . (($post['post']['post_edit_reason'] != '') ? ("
							<br />
							<span class='reason'>{$this->lang->words['reason_for_edit']} {$post['post']['post_edit_reason']}</span>
						") : ("")) . "
					</p>") : ("")) . "
			</div>
			<br />
		</div>
		
		<script type='text/javascript'>
			if( $('toggle_post_{$post['post']['pid']}') ){
				$('toggle_post_{$post['post']['pid']}').show();
			}
			
			// Add perm data
			ipb.topic.deletePerms[{$post['post']['pid']}] = { 'canDelete' : " . intval($post['post']['_can_delete']) . ", 'canSoftDelete' : " . intval($post['post']['_softDelete']) . " };
		</script>
		" . (($this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid'] ]['gfx'] > 0) ? ("
			<ul id='post-report-{$post['post']['pid']}_menucontent' class='ipbmenu_content report_menu' style='display: none'>
				<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;do=show_report&amp;rid={$this->memberData['_cache']['report_temp']['post_marker']['post'][ $post['post']['pid'] ]['info']['id']}", "public",'' ), "", "" ) . "\" id='report_mark_{$post['post']['pid']}'><img src='{$this->settings['img_url']}/reports/mark_complete.png' alt='' /> {$this->lang->words['report_menu_mark_complete']}</a></li>
				<li><a href=\"{$this->settings['base_url']}app=core&amp;module=reports&amp;section=reports&amp;do=show_report&amp;rid={$this->memberData['_cache']['report_temp']['post_marker']['post'][$post['post']['pid']]['info']['id']}\"><img src='{$this->settings['img_url']}/reports/view_report.png' alt='' /> {$this->lang->words['report_menu_view_report']}</a></li>
			</ul>
			<script type=\"text/javascript\">
				$('report_mark_{$post['post']['pid']}').observe('click',
				 	ipb.global.updateReportStatus.bindAsEventListener( 	
						this, {$this->memberData['_cache']['report_temp']['post_marker']['post'][$post['post']['pid']]['info']['id']},2,2
					)
				);
			</script>
		") : ("")) . "
	</div>
</div>";
return $IPBHTML;
}

/* -- modCPtopic --*/
function modCPtopic($topics, $pagelinks, $type, $sdelete=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['modCPtopic'] ) )
{
$count_e1a6c151a659b8a750e925f31c3778d9 = is_array($this->functionData['modCPtopic']) ? count($this->functionData['modCPtopic']) : 0;
$this->functionData['modCPtopic'][$count_e1a6c151a659b8a750e925f31c3778d9]['topics'] = $topics;
$this->functionData['modCPtopic'][$count_e1a6c151a659b8a750e925f31c3778d9]['pagelinks'] = $pagelinks;
$this->functionData['modCPtopic'][$count_e1a6c151a659b8a750e925f31c3778d9]['type'] = $type;
$this->functionData['modCPtopic'][$count_e1a6c151a659b8a750e925f31c3778d9]['sdelete'] = $sdelete;
}
$IPBHTML .= "".$this->__f__5a53068d1d0fa9d0aec3a4545826a103($topics,$pagelinks,$type,$sdelete)."";
return $IPBHTML;
}


function __f__ea4001412fd355de78e3606a4d302708($topics, $pagelinks, $type, $sdelete=array(),$tid='',$data='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $data['pages'] as $page )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						" . (($page['last']) ? ("
							<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}&amp;st={$page['st']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\" title='{$this->lang->words['topic_goto_page']} {$page['page']}'>{$page['page']} {$this->lang->words['_rarr']}</a></li>
						") : ("
							<li><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}&amp;st={$page['st']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\" title='{$this->lang->words['topic_goto_page']} {$page['page']}'>{$page['page']}</a></li>
						")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__5a53068d1d0fa9d0aec3a4545826a103($topics, $pagelinks, $type, $sdelete=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $topics as $tid => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<tr class='__topic' id='trow_{$data['tid']}' data-tid=\"{$data['tid']}\">
		<td class='__tid{$data['tid']} with_mod_links'>	
			" . (($data['state'] == 'link') ? ("
				{$this->lang->words['moved_topic_link']}
				<em>
			") : ("")) . "
			<a id=\"tid-link-{$data['tid']}\" href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showtopic={$data['tid']}", "public",'' ), "{$data['title_seo']}", "showtopic" ) . "\" title='{$data['title']} {$this->lang->words['topic_started_on']} " . $this->registry->getClass('class_localization')->getDate($data['start_date'],"LONG", 0) . "' class='topic_title'>{$data['title']}</a>
			" . (($data['state'] == 'link') ? ("
				</em>
			") : ("")) . "
			" . ((isset( $data['pages'] ) AND is_array( $data['pages'] ) AND count( $data['pages'] )) ? ("
				<ul class='mini_pagination'>
				".$this->__f__ea4001412fd355de78e3606a4d302708($topics,$pagelinks,$type,$sdelete,$tid,$data)."				</ul>
			") : ("")) . "
			<br />
			" . (($data['state'] != 'link') ? ("<ul class='ipsList_inline'>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_startedby']}</strong> <span class='desc lighter blend_links'>" . (($data['starter_id']) ? ("" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($data) : '' ) . "") : ("{$data['starter']}")) . "</span>
					</li>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_posted']}</strong> <span class='desc lighter'>" . $this->registry->getClass('class_localization')->getDate($data['start_date'],"short", 0) . "</span>
					</li>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_inforum']}</strong> <span class='desc lighter'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['forum']['id']}", "public",'' ), "{$data['forum']['name_seo']}", "showforum" ) . "'>{$data['forum']['name']}</a></span>
					</li>
				</ul>") : ("
				<ul class='ipsList_inline'>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_link_from']}</strong>
						<span class='desc lighter'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['_toForum']['id']}", "public",'' ), "{$data['_toForum']['name_seo']}", "showforum" ) . "'>{$data['_toForum']['name']}</a></span>
					</li>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_link_to']}</strong>
						<span class='desc lighter'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showforum={$data['forum']['id']}", "public",'' ), "{$data['forum']['name_seo']}", "showforum" ) . "'>{$data['forum']['name']}</a></span>
					</li>
				</ul>
			")) . "
			" . (($data['_isDeleted']) ? ("<ul class='ipsList_inline'>
					<li class='desc lighter'>
						<strong>{$this->lang->words['dlt_topic_deletedby']}</strong> <span class='desc lighter blend_links'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($sdelete[ $data['tid'] ]) : '' ) . "</span>
					</li>
					" . (($data['permissions']['SoftDeleteReason']) ? ("<li class='desc lighter'>
							<strong>{$this->lang->words['dlt_topic_reason']}</strong> <span class='desc lighter'><em>" . (($sdelete[ $data['tid'] ]['sdl_obj_reason']) ? ("{$sdelete[ $data['tid'] ]['sdl_obj_reason']}") : ("{$this->lang->words['tdb__noreasongi']}")) . "</em></span>
						</li>") : ("")) . "
				</span>") : ("")) . "
		</td>
		<td>
			" . (($data['state'] == 'link') ? ("<span class='desc'>" . $this->registry->getClass('class_localization')->formatNumber( $data['posts'] ) . " " . ((intval($data['posts']) == 1) ? ("{$this->lang->words['reply']}") : ("{$this->lang->words['replies']}")) . "</span>") : ("")) . "
		</td>
		<td>
			<ul class='ipsList_inline right'>
				" . (($type == 'deleted') ? ("" . (($data['state'] == 'link') ? ("" . (($data['permissions']['TopicSoftDeleteRestore']) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=topic_restore&amp;t={$data['real_tid']}&amp;f={$data['_toForum']['id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['restore_topic_desc']}' class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['restore_topic']}</a></li>
						") : ("")) . "
						" . (($this->memberData['g_is_supmod'] == 1 || $this->memberData['forumsModeratorData'][ $data['forum_id'] ]['delete_topic']) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=09&amp;t={$data['real_tid']}&amp;f={$data['_toForum']['id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['dlt_delete_topic']}' class='ipsButton_secondary ipsType_smaller important'>{$this->lang->words['perm_delete_topic']}</a></li>
						") : ("")) . "") : ("" . ((!$data['_isDeleted']) ? ("
							<li>
								<img data-tooltip=\"{$this->lang->words['hard_delete_warn_topic']}\" src='{$this->settings['img_url']}/icon_timewarning.png' />
							</li>
						") : ("")) . "
						" . (($data['permissions']['TopicSoftDeleteRestore']) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=topic_restore&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['restore_topic_desc']}' class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['restore_topic']}</a></li>
						") : ("")) . "
						" . (($this->memberData['g_is_supmod'] == 1 || $this->memberData['forumsModeratorData'][ $data['forum_id'] ]['delete_topic']) ? ("
							<li><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=09&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:deleted", "public",'' ), "", "" ) . "' title='{$this->lang->words['dlt_delete_topic']}' class='ipsButton_secondary ipsType_smaller important'>{$this->lang->words['perm_delete_topic']}</a></li>
						") : ("")) . "")) . "") : ("")) . "
				" . (($type == 'unapproved') ? ("
					<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=topic_approve&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller'>{$this->lang->words['modcp_approvelink']}</a>
					</li>
					<li>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=forums&amp;module=moderate&amp;section=moderate&amp;do=03&amp;t={$data['real_tid']}&amp;f={$data['forum_id']}&amp;auth_key={$this->member->form_hash}&amp;return=modcp:unapproved", "public",'' ), "", "" ) . "' class='ipsButton_secondary ipsType_smaller important'>{$this->lang->words['modcp_deletelink']}</a>
					</li>
				") : ("")) . "
			</ul>
		</td>
	</tr>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- portalPage --*/
function portalPage($output, $tabs=array(), $_activeNav=array()) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['portalPage'] ) )
{
$count_eda5eb1b20be53de78b383ae86e22ad0 = is_array($this->functionData['portalPage']) ? count($this->functionData['portalPage']) : 0;
$this->functionData['portalPage'][$count_eda5eb1b20be53de78b383ae86e22ad0]['output'] = $output;
$this->functionData['portalPage'][$count_eda5eb1b20be53de78b383ae86e22ad0]['tabs'] = $tabs;
$this->functionData['portalPage'][$count_eda5eb1b20be53de78b383ae86e22ad0]['_activeNav'] = $_activeNav;
}
$IPBHTML .= "<h1 class='ipsType_pagetitle'>{$this->lang->words['modcp_page_title']}</h1>
<br />
<div class='ipsBox'>
	<div class='ipsVerticalTabbed ipsLayout ipsLayout_withleft ipsLayout_smallleft clearfix'>
		<div class='ipsVerticalTabbed_tabs ipsLayout_left' id='modcp_tabs'>
			<ul class='clear'>
				<li id='index' class='" . (($_activeNav['primary'] == 'index' && $_activeNav['secondary'] == 'index') ? ("active ") : ("")) . "tab_toggle'>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp", "public",'' ), "", "" ) . "'>{$this->lang->words['modcp_tab_index']}</a>
				</li>
				" . ((IPSMember::isInGroup( $this->memberData, explode( ',', IPSText::cleanPermString( $this->settings['report_mod_group_access'] ) ) )) ? ("<li id='reported_content' class='" . (($_activeNav['primary'] == 'reported_content' && $_activeNav['secondary'] == 'reports') ? ("active ") : ("")) . "tab_toggle'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=reports&amp;do=index", "public",'' ), "", "" ) . "'>{$this->lang->words['modcp_tab_reports']}</a>
					</li>") : ("")) . "
				".$this->__f__16380ea5b25c30416ad7acd3bd52f2b7($output,$tabs,$_activeNav)."			</ul>
		</div>
		<div class='ipsVerticalTabbed_content ipsLayout_content ipsBox_container' id='modcp_content'>
			<div class='ipsPad'>
				{$output}
			</div>
		</div>
	</div>
</div>
<script type='text/javascript'>
	$(\"modcp_content\").setStyle( { minHeight: $('modcp_tabs').measure('margin-box-height') + 5 + \"px\" } );
</script>";
return $IPBHTML;
}


function __f__16380ea5b25c30416ad7acd3bd52f2b7($output, $tabs=array(), $_activeNav=array())
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $tabs as $mainTabKey => $subTabs )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li id='{$mainTabKey}' class='" . (($_activeNav['primary'] == $mainTabKey) ? ("active ") : ("")) . "tab_toggle' data-tabid='{$mainTabKey}'>
						<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;fromapp={$subTabs[0][1]}&amp;tab={$subTabs[0][0]}", "public",'' ), "", "" ) . "'>{$this->lang->words['modcp_mtab_' . $mainTabKey ]}</a>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- subTabLoop --*/
function subTabLoop() {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['subTabLoop'] ) )
{
$count_80fceb926880723efba78567c95f2748 = is_array($this->functionData['subTabLoop']) ? count($this->functionData['subTabLoop']) : 0;
}
$IPBHTML .= "".$this->__f__d8a9e6052f526d668e5a8855a39fe6d3()."";
return $IPBHTML;
}


function __f__b09cd352db626a57399e506fbe22adb7($mainTabKey='',$subTabs='')
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $subTabs as $sub )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
						<li" . (($this->templateVars['activeNav']['secondary'] == $sub[0]) ? (" class='active'") : ("")) . ">
							<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=core&amp;module=modcp&amp;fromapp={$sub[1]}&amp;tab={$sub[0]}", "public",'' ), "", "" ) . "'>
							{$this->lang->words['modcp_tab_' . $sub[0] ]}</a>
						</li>
					
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__d8a9e6052f526d668e5a8855a39fe6d3()
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $this->templateVars['tabs'] as $mainTabKey => $subTabs )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	" . (($mainTabKey == $this->templateVars['activeNav']['primary']) ? ("" . ((count( $subTabs ) > 1) ? ("
			<div class='maintitle ipsFilterbar clear'>
				<ul class='ipsList_inline'>									
					".$this->__f__b09cd352db626a57399e506fbe22adb7($mainTabKey,$subTabs)."				</ul>
			</div>
		") : ("")) . "") : ("")) . "

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- unapprovedPosts --*/
function unapprovedPosts($posts, $pagelinks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['unapprovedPosts'] ) )
{
$count_be12f93d9d1c93102548d37f9274f4e1 = is_array($this->functionData['unapprovedPosts']) ? count($this->functionData['unapprovedPosts']) : 0;
$this->functionData['unapprovedPosts'][$count_be12f93d9d1c93102548d37f9274f4e1]['posts'] = $posts;
$this->functionData['unapprovedPosts'][$count_be12f93d9d1c93102548d37f9274f4e1]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("topic", "0" ) . "
" . ((!$this->settings['disable_lightbox']) ? ("
" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'include_lightbox' ) ? $this->registry->getClass('output')->getTemplate('global')->include_lightbox() : '' ) . "
") : ("")) . "
<script type='text/javascript'>
	ipb.topic.inSection	= 'topicview';
</script>
<style type='text/css'>
	.post_mod { display: none; }
</style>
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	" . ((is_array( $posts ) AND count( $posts )) ? ("
		<div id='ips_Posts2'>
			".$this->__f__0829dacd768d7d0b4eb0a86672db6a56($posts,$pagelinks)."		</div>
	") : ("
		<div class='no_messages'>
			{$this->lang->words['no_unapproved_posts']}
		</div>
	")) . "
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}


function __f__0829dacd768d7d0b4eb0a86672db6a56($posts, $pagelinks)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $posts as $post )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
				" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPpost' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPpost($post, array(), $post, 'unapproved') : '' ) . "
			
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- unapprovedTopics --*/
function unapprovedTopics($topics, $pagelinks) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_modcp', $this->_funcHooks['unapprovedTopics'] ) )
{
$count_6ea98e1c48f8af43de35d141da2a510c = is_array($this->functionData['unapprovedTopics']) ? count($this->functionData['unapprovedTopics']) : 0;
$this->functionData['unapprovedTopics'][$count_6ea98e1c48f8af43de35d141da2a510c]['topics'] = $topics;
$this->functionData['unapprovedTopics'][$count_6ea98e1c48f8af43de35d141da2a510c]['pagelinks'] = $pagelinks;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("forums", "0" ) . "
<div>{$pagelinks}</div>
" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'subTabLoop' ) ? $this->registry->getClass('output')->getTemplate('modcp')->subTabLoop() : '' ) . "
<div class='clearfix'>
	<table class='ipb_table topic_list' id='forum_table'>
		" . ((is_array( $topics ) AND count( $topics )) ? ("
			" . ( method_exists( $this->registry->getClass('output')->getTemplate('modcp'), 'modCPtopic' ) ? $this->registry->getClass('output')->getTemplate('modcp')->modCPtopic($topics, $pagelinks, 'unapproved') : '' ) . "
		") : ("
			<tr> 
				<td colspan='3' class='no_messages'>{$this->lang->words['no_unapproved_topics']}</td>
			</tr>
		")) . "
	</table>
	<div>{$pagelinks}</div>
</div>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>