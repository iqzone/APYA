<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:14:59 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_messaging_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['messengerTemplate'] = array('isMemberPartOpen','isMemberPartFloat','isMemberPartClose','userIsStarter','lastReadTime','messageIsDeleted','notification','blockUserLink','unbanUserLink','systemMessage','topicUnavailable','userIsBanned','userIsActive','participants','protectedFolder','allFolder','unprotectedFolder','dirs','PMDisabled','changeNotifications','unlimitedInvites','inviteMoreParticipants','hasParticipants','myDirectories','almostFull','storageBar','inlineError');
$this->_funcHooks['sendNewPersonalTopicForm'] = array('newTopicError','formReloadInvite','formReloadCopy','newTopicInvite');
$this->_funcHooks['sendReplyForm'] = array('replyForm','formErrors','formHeaderText','replyOptions');
$this->_funcHooks['showConversation'] = array('quickReply','canEdit','canDelete','replies','canReply','canReply');
$this->_funcHooks['showFolder'] = array('folderUnread','folderDeleted','folderDrafts','folderStarter','folderBannedIndicator','folderMessages','folderMessages');
$this->_funcHooks['showSearchResults'] = array('searchHasUnread','searchEndHasUnread','searchFixPlural','searchInvitedCount','searchToMember','messages','searchError','searchMessages');


}

/* -- messengerDisabled --*/
function messengerDisabled() {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- messengerTemplate --*/
function messengerTemplate($html, $jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['messengerTemplate'] ) )
{
$count_5b090a82cfb2a15a2ed2fbfdf28de9e5 = is_array($this->functionData['messengerTemplate']) ? count($this->functionData['messengerTemplate']) : 0;
$this->functionData['messengerTemplate'][$count_5b090a82cfb2a15a2ed2fbfdf28de9e5]['html'] = $html;
$this->functionData['messengerTemplate'][$count_5b090a82cfb2a15a2ed2fbfdf28de9e5]['jumpmenu'] = $jumpmenu;
$this->functionData['messengerTemplate'][$count_5b090a82cfb2a15a2ed2fbfdf28de9e5]['dirData'] = $dirData;
$this->functionData['messengerTemplate'][$count_5b090a82cfb2a15a2ed2fbfdf28de9e5]['totalData'] = $totalData;
$this->functionData['messengerTemplate'][$count_5b090a82cfb2a15a2ed2fbfdf28de9e5]['topicParticipants'] = $topicParticipants;
$this->functionData['messengerTemplate'][$count_5b090a82cfb2a15a2ed2fbfdf28de9e5]['inlineError'] = $inlineError;
$this->functionData['messengerTemplate'][$count_5b090a82cfb2a15a2ed2fbfdf28de9e5]['deletedTopic'] = $deletedTopic;
}
$IPBHTML .= "" . $this->registry->getClass('output')->addJSModule("messenger", "0" ) . "
<script type=\"text/javascript\">
	ipb.messenger.disabled  = " . intval($this->memberData['members_disable_pm']) . ";
</script>
" . (($this->memberData['members_disable_pm']) ? ("
<noscript>
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('messaging'), 'messengerDisabled' ) ? $this->registry->getClass('output')->getTemplate('messaging')->messengerDisabled() : '' ) . "
</noscript>
") : ("")) . "
<div id='messenger_utilities' class='left'>
	<!-- Show topic participants -->
	" . ((is_array( $topicParticipants ) and count( $topicParticipants )) ? ("<div class='ipsSideBlock' id='participants'>
			<h3 class='bar'>{$this->lang->words['participants']}</h3>
			<ul id='participants_list' class='ipsList_withminiphoto'>
				".$this->__f__7f4f528af4fb99581883f89d34c7409f($html,$jumpmenu,$dirData,$totalData,$topicParticipants,$inlineError,$deletedTopic)."					
			</ul>
			<ul class='post_controls'>
				<li>
					<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=toggleNotifications&amp;topicID={$this->request['topicID']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['toggle_noti_title']}'>
					" . (($topicParticipants[ $this->memberData['member_id'] ]['map_ignore_notification']) ? ("
						{$this->lang->words['turn_noti_on']}
					") : ("
						{$this->lang->words['turn_noti_off']}
					")) . "
					</a>
				</li>
			</ul>
		</div>
		" . (($this->memberData['g_max_mass_pm'] && count( $topicParticipants ) < $this->memberData['g_max_mass_pm'] && ! $deletedTopic) ? ("<div id='invite_more' class='ipsSideBlock'>
				<h3>{$this->lang->words['invite_part']}</h3>
				<div id='invite_more_dialogue'>
					<form method='post' action='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=addParticipants", "public",'' ), "", "" ) . "'>
					<input type='hidden' name='authKey' value='{$this->member->form_hash}' />
					<input type='hidden' name='topicID' value='{$this->request['topicID']}' />
					<input type='hidden' name='st' value='{$this->request['st']}' />
					<ul><li><label for='invite_more_autocomplete'>{$this->lang->words['enter_member_names']}</label> 
					<input type='text' class='input_text' name='inviteNames' id='invite_more_autocomplete' value='{$this->request['inviteNames']}' size='38' /> 
					<br /><span class='desc'>[x]{$this->lang->words['separated_with_commas']}</span> 
					</li></ul><fieldset class='submit'><input type='submit' class='input_submit' value='{$this->lang->words['part_add']}' />  
					{$this->lang->words['or']} <a href='#' id='invite_more_cancel' class='cancel' title='{$this->lang->words['cancel']}'>{$this->lang->words['cancel']}</a></fieldset></form>
				</div>
				<div id='invite_more_default'>
					" . (($this->memberData['g_max_mass_pm'] == 0) ? ("
						<p class='desc'>{$this->lang->words['can_invite_unlimited']}</p>
						<script type='text/javascript'>
							ipb.messenger.invitesLeft = parseInt( 0 );
							ipb.messenger.nameText = ipb.lang['enter_unlimited_names'];
						</script>
					") : ("
						<p class='desc'>{$this->lang->words['may_invite_upto']} <strong>" . ( $this->memberData['g_max_mass_pm'] - count( $topicParticipants ) ) . "</strong> {$this->lang->words['more_members']}</p>
						<script type='text/javascript'>
							ipb.messenger.invitesLeft = parseInt( " . ( $this->memberData['g_max_mass_pm'] - count( $topicParticipants ) ) . " );
							ipb.messenger.nameText = ipb.lang['enter_x_names'].gsub(/\\[x\\]/, ipb.messenger.invitesLeft);
						</script>
					")) . "
					<ul class='post_controls'>
						<li id='add_participants'><a href='#' title='{$this->lang->words['add_participants']}'>{$this->lang->words['part_add']}</a></li>
					</ul>
				</div>
			</div>") : ("")) . "") : ("")) . "
	<div id='folder_list' class='ipsSideBlock'>
		<h3>{$this->lang->words['folders']}</h3>
		<ol id='folders'>
			" . ((count($dirData)) ? ("
				".$this->__f__7f04823601c170535a99757e223a9f68($html,$jumpmenu,$dirData,$totalData,$topicParticipants,$inlineError,$deletedTopic)."			") : ("")) . "
		</ol>
		<div class='clearfix post_controls'>
			<ul class='post_controls'>
				<li id='add_folder'><a href='#' title='{$this->lang->words['add_folder']}'>{$this->lang->words['folder_add']}</a></li>
				<li id='edit_folders'><a href='#' title='{$this->lang->words['edit_folders']}'>{$this->lang->words['folders_edit']}</a></li>
			</ul>
		</div>
		<script type='text/javascript'>
		//<![CDATA[
			ipb.messenger.folderTemplate = \"<li class='folder' id='f_[id]'>" . $this->registry->getClass('output')->getReplacement("folder_generic") . " <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=showFolder&amp;folderID=[id]", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['go_to_folder']}' rel='folder_name'>[name]</a> <span class='total rounded'>[total]</span><span class='edit_folders' style='display: none'><a href='#' id='delete_[id]' class='f_delete' title='{$this->lang->words['delete_folder_title']}'>" . $this->registry->getClass('output')->getReplacement("folder_delete") . "</a> <a href='#' id='empty_[id]' class='f_empty' title='{$this->lang->words['empty_folder_title']}'>" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>\";
		//]]>
		</script>
	</div>
	" . (($this->memberData['g_max_messages'] > 0) ? ("<div id='space_allowance' class='ipsSideBlock'>
			<h3>{$this->lang->words['storage']}</h3>
			<p>{$this->lang->words['your_messenger_storage']}</p>
			<p class='progress_bar' title='" . sprintf( $this->lang->words['pmpc_full_string'], $totalData['full_percent'] ) . "' " . (($totalData['full_percent'] > 80) ? ("class='limit'") : ("")) . ">
				<span style='width: {$totalData['full_percent']}%'>{$totalData['full_percent']}%</span>
			</p>
			<p>
				<span class='desc'>{$totalData['full_percent']}% {$this->lang->words['of_your_quota']} ({$this->memberData['g_max_messages']} {$this->lang->words['messages']})</span>
			</p>
		</div>") : ("")) . "
	<div id='message_search' class='ipsSideBlock'>
		<h3>{$this->lang->words['search_messages']}</h3>
		<form action='{$this->settings['base_url']}app=members&amp;module=messaging&amp;section=search' method='post'>
			<fieldset>
				<input type='text' name='searchFor' class='input_text' size='15' style='width: 60%' /> <input type='submit' class='input_submit' value='{$this->lang->words['jmp_go']}' />
			</fieldset>
		</form>
	</div>
	<br />
	
	<a class='ipsButton_secondary cancel' href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=disableMessenger&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\"'>{$this->lang->words['disable_messenger']}</a>
	<!--<ul class='topic_buttons'>
		<li class='important'></li>
	</ul>-->
</div>
<div id='messenger_content' class='right'>
	" . (($inlineError) ? ("
	<div class='message error'>
		<h4>{$inlineError}</h4>
	</div>
	<br />
	") : ("")) . "
	{$html}
</div>
<!-- end -->
<div id='pmDisabled' style='display:none'>
	" . ( method_exists( $this->registry->getClass('output')->getTemplate('messaging'), 'messengerDisabled' ) ? $this->registry->getClass('output')->getTemplate('messaging')->messengerDisabled() : '' ) . "
</div>
<br class='clear' />";
return $IPBHTML;
}


function __f__7f4f528af4fb99581883f89d34c7409f($html, $jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $topicParticipants as $memberID => $memberData )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<li class='clearfix'>
						" . (($memberData['member_id']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", "public",'' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}' class='ipsUserPhotoLink left'>") : ("")) . "<img src='{$memberData['pp_small_photo']}' alt='{$this->lang->words['photo']}' class='ipsUserPhoto ipsUserPhoto_mini" . ((!$memberData['member_id']) ? (" left") : ("")) . "' />" . (($memberData['member_id']) ? ("</a>") : ("")) . "
						<p class='list_content'>
							" . (($memberData['map_user_active']) ? ("" . (($memberData['map_is_starter']) ? ("
									<span class='name starter'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($memberData) : '' ) . "</span>
								") : ("
									<span class='name'>" . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($memberData) : '' ) . "</span>
								")) . "
								<br />
								<span class='ipsType_smaller desc'>
									" . (($memberData['_topicDeleted']) ? ("
										<em>{$this->lang->words['topic_deleted']}</em>
									") : ("{$this->lang->words['last_read']}
										" . (($memberData['map_read_time']) ? ("
											" . $this->registry->getClass('class_localization')->getDate($memberData['map_read_time'],"short", 0) . "
										") : ("
											<em>{$this->lang->words['not_yet_read']}</em>
										")) . "")) . "
									" . (($memberData['map_ignore_notification']) ? ("
										<span class='ipsBadge ipsBadge_lightgrey right'>{$this->lang->words['msg_no_notify']}</span>
									") : ("")) . "						
								</span>
								" . ((! $memberData['map_is_starter'] AND $memberData['_canBeBlocked'] AND ($topicParticipants[ $this->memberData['member_id'] ]['map_is_starter'] OR $this->memberData['g_is_supmod']) AND ( $memberData['map_user_id'] != $this->memberData['member_id'] ) AND !$memberData['_topicDeleted']) ? ("
									<br /><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=blockParticipant&amp;topicID={$this->request['topicID']}&amp;memberID={$memberData['map_user_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\" title='{$this->lang->words['block_this_user']}' class='cancel'>{$this->lang->words['block']}</a>
								") : ("")) . "") : ("" . (($memberData['map_user_banned']) ? ("<span class='name blocked'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", "public",'' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$memberData['members_display_name_short']}</strong></a></span>
									<br />
									<span class='desc'>{$this->lang->words['user_is_blocked']}</span>
									<br />
									" . (($memberData['_canBeBlocked'] AND ($topicParticipants[ $this->memberData['member_id'] ]['map_is_starter'] OR $this->memberData['g_is_supmod'])) ? ("
										<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=unblockParticipant&amp;topicID={$this->request['topicID']}&amp;memberID={$memberData['map_user_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "\" title='{$this->lang->words['unblock_this_user']}' class='cancel'>{$this->lang->words['unblock']}</a>
									") : ("")) . "") : ("<span class='name left_convo'><a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$memberData['member_id']}", "public",'' ), "{$memberData['members_seo_name']}", "showuser" ) . "' title='{$this->lang->words['view_profile']}'><strong>{$memberData['members_display_name_short']}</strong></a></span>
									<br />
									<span class='desc'>
										" . (($memberData['_topicDeleted']) ? ("
										<em>{$this->lang->words['topic_deleted']}</em>
										") : ("" . (($memberData['map_is_system']) ? ("
												{$this->lang->words['is_unable_part']}
											") : ("
												{$this->lang->words['has_left_convo']}
											")) . "")) . "
									</span>")) . "")) . "
						</p>
					</li>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

function __f__7f04823601c170535a99757e223a9f68($html, $jumpmenu, $dirData, $totalData=array(), $topicParticipants=array(), $inlineError='', $deletedTopic=0)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $dirData as $id => $data )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					" . (($data['protected']) ? ("
						<li class='folder protected' id='f_{$id}'>" . $this->registry->getClass('output')->getReplacement("folder_{$id}") . "
					") : ("
						<li class='folder' id='f_{$id}'>" . $this->registry->getClass('output')->getReplacement("folder_generic") . "
					")) . "
					<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=showFolder&amp;folderID={$id}", "publicWithApp",'' ), "", "" ) . "\" title=\"{$this->lang->words['go_to_folder']}\" rel=\"folder_name\">{$data['real']}</a>
					<span class='total rounded'>
						" . (($id == 'all') ? ("
							" . intval($this->memberData['msg_count_total']) . "
						") : ("
							" . intval($data['count']) . "
						")) . "
					</span>
					" . ((! $data['protected']) ? ("
						<span class='edit_folders' style='display: none'><a href='#' id='delete_{$id}' class='f_delete' title=\"{$this->lang->words['delete_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_delete") . "</a> <a href='#' id='empty_{$id}' class='f_empty' title=\"{$this->lang->words['empty_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>
					") : ("
						<span class='edit_folders' style='display: none'><a href='#' id='empty_{$id}' class='f_empty' title=\"{$this->lang->words['empty_folder_title']}\">" . $this->registry->getClass('output')->getReplacement("folder_empty") . "</a></span></li>
					")) . "
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- PMQuickForm --*/
function PMQuickForm($toMemberData) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- sendNewPersonalTopicForm --*/
function sendNewPersonalTopicForm($displayData) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['sendNewPersonalTopicForm'] ) )
{
$count_3e39a9165856d33b3163b8519f645820 = is_array($this->functionData['sendNewPersonalTopicForm']) ? count($this->functionData['sendNewPersonalTopicForm']) : 0;
$this->functionData['sendNewPersonalTopicForm'][$count_3e39a9165856d33b3163b8519f645820]['displayData'] = $displayData;
}
$IPBHTML .= "" . (($this->settings['_hideFolders'] = 1) ? ("") : ("")) . "
<form id='msgForm' class='ipsForm_vertical' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=send", "publicWithApp",'' ), "", "" ) . "\" method=\"post\" enctype='multipart/form-data'>
	" . (($displayData['errors']) ? ("
		<div class='message error'>
			<strong>{$this->lang->words['err_errors']}</strong><br />
			{$displayData['errors']}<br />
			{$this->lang->words['pme_none_sent']}
		</div>
	") : ("")) . "
	
	<h3>{$this->lang->words['pro_recips']}</h3>
	<div class='ipsField'>
		<label for='entered_name' class='ipsField_title'>{$this->lang->words['to_whom']}</label>
		<input type=\"text\" class='input_text' id='entered_name' name=\"entered_name\" size=\"30\" value=\"{$displayData['name']}\" tabindex=\"0\" />
	</div>
	" . ((intval($this->memberData['g_max_mass_pm'])) ? ("<div class='ipsField'>
			<label for='ipsField_title' class='ipsField_title'>{$this->lang->words['other_recipients']}</label>
			<input type='text' size=\"30\" class='input_text' name='inviteUsers' value='{$displayData['inviteUsers']}' id='more_members' tabindex='0' /><br />
			<span class='desc'>{$this->lang->words['youmay_add_to']} <strong>{$this->memberData['g_max_mass_pm']}</strong> {$this->lang->words['youmay_suffix']}</span>
		</div>
		
		<div class='ipsField'>
			<strong>{$this->lang->words['send_to_as']} </strong>
			<select name='sendType' id='send_type' tabindex='0'>
				<option value='invite'" . (($this->request['sendType']=='invite') ? (" selected='selected'") : ("")) . ">{$this->lang->words['send__invite']}</option>
				<option value='copy'" . (($this->request['sendType']=='copy') ? (" selected='selected'") : ("")) . ">{$this->lang->words['send__copy']}</option>
			</select><br />
			<span class='desc'>
				<strong>{$this->lang->words['send__invite']}</strong> {$this->lang->words['invite__desc']}<br />
				<strong>{$this->lang->words['send__copy']}</strong> {$this->lang->words['copy__desc']}
			</span>
		</div>") : ("")) . "
	
	<h3>{$this->lang->words['pro_message']}</h3>
	<div class='ipsField'>
		<label for='message_subject' class='ipsField_title'>{$this->lang->words['message_subject_send']}</label>
		<input type=\"text\" name=\"msg_title\" id='message_subject' class='input_text' size=\"30\" tabindex=\"0\" maxlength=\"40\" value=\"{$displayData['title']}\" />
	</div>
	<div class='ipsField'>
		{$displayData['editor']}
	</div>
	<input type='hidden' name='topicID' value=\"{$displayData['topicID']}\" />
	<input type='hidden' name=\"postKey\" value=\"{$displayData['postKey']}\" />
	<input type=\"hidden\" name=\"auth_key\" value=\"{$this->member->form_hash}\" />
	<div class='submit'>
		<input class='button' name=\"dosubmit\" type=\"submit\" value=\"{$this->lang->words['submit_send']}\" tabindex=\"0\" accesskey=\"s\" />
	</div>
		
</form>";
return $IPBHTML;
}

/* -- sendReplyForm --*/
function sendReplyForm($displayData) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['sendReplyForm'] ) )
{
$count_eb3bf60be4da098cbd7d8d73848d8198 = is_array($this->functionData['sendReplyForm']) ? count($this->functionData['sendReplyForm']) : 0;
$this->functionData['sendReplyForm'][$count_eb3bf60be4da098cbd7d8d73848d8198]['displayData'] = $displayData;
}
$IPBHTML .= "" . (($this->settings['_hideFolders'] = 1) ? ("") : ("")) . "
" . (($displayData['type'] == 'reply') ? ("
	<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=sendReply", "publicWithApp",'' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\">
") : ("
	<form id='msgForm' style='display:block' action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=sendEdit", "publicWithApp",'' ), "", "" ) . "\" method=\"post\" name=\"REPLIER\">
")) . "
<input type=\"hidden\" name=\"msgID\" value=\"{$displayData['msgID']}\" />
<input type='hidden' name='topicID' value=\"{$displayData['topicID']}\" />
<input type='hidden' name=\"postKey\" value=\"{$displayData['postKey']}\" />
<input type=\"hidden\" name=\"authKey\" value=\"{$this->member->form_hash}\" />
" . (($displayData['errors']) ? ("
	<div class='message error'>
		<strong>{$this->lang->words['err_errors']}</strong><br />
		{$displayData['errors']}<br />
		{$this->lang->words['pme_none_sent']}
	</div>
") : ("")) . "
" . (($displayData['type'] == 'reply') ? ("
	<h3>{$this->lang->words['compose_reply']}</h3>
") : ("
	<h3>{$this->lang->words['editing_message']}</h3>
")) . "
<div class='row'>
	{$displayData['editor']}
</div>
<div class='submit'>
	" . (($displayData['type'] == 'reply') ? ("
		<input class='button' type=\"submit\" value=\"{$this->lang->words['submit_send']}\" tabindex=\"0\" accesskey=\"s\" />
	") : ("
		<input class='button' type=\"submit\" value=\"{$this->lang->words['save_message_button']}\" tabindex=\"0\" accesskey=\"s\" />
	")) . "
</div>";
return $IPBHTML;
}

/* -- showConversation --*/
function showConversation($topic, $replies, $members, $jump="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['showConversation'] ) )
{
$count_90ae2cb94a77252cfc48d8087e4b216b = is_array($this->functionData['showConversation']) ? count($this->functionData['showConversation']) : 0;
$this->functionData['showConversation'][$count_90ae2cb94a77252cfc48d8087e4b216b]['topic'] = $topic;
$this->functionData['showConversation'][$count_90ae2cb94a77252cfc48d8087e4b216b]['replies'] = $replies;
$this->functionData['showConversation'][$count_90ae2cb94a77252cfc48d8087e4b216b]['members'] = $members;
$this->functionData['showConversation'][$count_90ae2cb94a77252cfc48d8087e4b216b]['jump'] = $jump;
}
$IPBHTML .= "<div class='controls'>
	<div class='buttons'>
		" . (($topic['_canReply']) ? ("
			<a class='button' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=replyForm&amp;topicID={$topic['mt_id']}", "publicWithApp",'' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("reply_icon") . " {$this->lang->words['add_reply']}</a>
		") : ("")) . "
		<!--<a class='button delete' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=deleteConversation&amp;topicID={$topic['mt_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "'>{$this->lang->words['option__delete']}</a>-->
	</div>
	{$topic['_pages']}
</div>".$this->__f__7bd6952285cb2d50af3d67d385e1a0ae($topic,$replies,$members,$jump)."<div class='controls'>
	<div class='buttons'>
	" . (($topic['_canReply']) ? ("
		<a class='button' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=replyForm&amp;topicID={$topic['mt_id']}", "publicWithApp",'' ), "", "" ) . "'>" . $this->registry->getClass('output')->getReplacement("reply_icon") . " {$this->lang->words['add_reply']}</a>
	") : ("")) . "
	<!--<a class='button delete' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=view&amp;do=deleteConversation&amp;topicID={$topic['mt_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "'>{$this->lang->words['option__delete']}</a>-->
	</div>
	{$topic['_pages']}
</div>";
return $IPBHTML;
}


function __f__7bd6952285cb2d50af3d67d385e1a0ae($topic, $replies, $members, $jump="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $replies as $msg_id => $msg )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
	<a id='msg{$msg['msg_id']}'></a>
	<div class='topic_reply'>
		<h2 class='secondary'>
			<img src='{$members[ $msg['msg_author_id'] ]['pp_thumb_photo']}' class='photo' />
			<a class=\"url fn\" href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$members[ $msg['msg_author_id'] ]['member_id']}", "public",'' ), "{$members[ $msg['msg_author_id'] ]['members_seo_name']}", "showuser" ) . "'>{$members[ $msg['msg_author_id'] ]['members_display_name']}</a>
			<span class='subtext'>{$this->lang->words['pc_sent']} " . $this->registry->getClass('class_localization')->getDate($msg['msg_date'],"long", 0) . "</span>
		</h2>
		<div class='post line_spacing' id='msg_{$msg['msg_id']}'>
			{$msg['msg_post']}
			{$msg['attachmentHtml']}
		</div>
		<div class='post_controls' id='msg_{$msg['msg_id']}-controls'>
			" . (($topic['_canReply']) ? ("
				<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=replyForm&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}", "publicWithApp",'' ), "", "" ) . "\" title=\"{$this->lang->words['tt_reply_to_post']}\">{$this->lang->words['pc_reply']}</a>
			") : ("")) . "
			" . (($msg['_canEdit'] === TRUE) ? ("
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=editMessage&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['edit_this_post']}'>{$this->lang->words['pc_edit']}</a>
			") : ("")) . "
			" . (($msg['_canDelete'] === TRUE && $msg['msg_is_first_post'] != 1) ? ("
				<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=deleteReply&amp;topicID={$topic['mt_id']}&amp;msgID={$msg['msg_id']}&amp;authKey={$this->member->form_hash}", "publicWithApp",'' ), "", "" ) . "' title='{$this->lang->words['delete_this_post']}' class='delete_post'>{$this->lang->words['pc_delete']}</a>
			") : ("")) . "
		</div>
	</div>

";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showConversationForArchive --*/
function showConversationForArchive($topic, $replies, $members) {
$IPBHTML = "";
$IPBHTML .= "<!--no data in this master skin-->";
return $IPBHTML;
}

/* -- showFolder --*/
function showFolder($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['showFolder'] ) )
{
$count_97f86e8f72d8722a591f1f1015101cef = is_array($this->functionData['showFolder']) ? count($this->functionData['showFolder']) : 0;
$this->functionData['showFolder'][$count_97f86e8f72d8722a591f1f1015101cef]['messages'] = $messages;
$this->functionData['showFolder'][$count_97f86e8f72d8722a591f1f1015101cef]['dirname'] = $dirname;
$this->functionData['showFolder'][$count_97f86e8f72d8722a591f1f1015101cef]['pages'] = $pages;
$this->functionData['showFolder'][$count_97f86e8f72d8722a591f1f1015101cef]['currentFolderID'] = $currentFolderID;
$this->functionData['showFolder'][$count_97f86e8f72d8722a591f1f1015101cef]['jumpFolderHTML'] = $jumpFolderHTML;
}

if( !$this->request['folderID'] )
	{
		$this->settings['_mobile_nav_home'] = true;
	}

if ( ! isset( $this->registry->templateStriping['msg_stripe'] ) ) {
$this->registry->templateStriping['msg_stripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<h2>{$dirname}</h2>
<div class='controls'><div class=\"buttons\">
	<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", "publicWithApp",'' ), "", "" ) . "' class='button' title='{$this->lang->words['go_to_compose']}'>{$this->lang->words['compose_new']}</a>
	{$pages}
</div>
</div>
" . ((count( $messages )) ? ("
		".$this->__f__a2626768d7a1ea08dcef8d759a631bca($messages,$dirname,$pages,$currentFolderID,$jumpFolderHTML)."") : ("
	<div class='row no_messages'>
		{$this->lang->words['folder_no_messages_row']}
	</div>
")) . "
<!--<div class='controls'>
<div class=\"buttons\">
	<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "module=messaging&amp;section=send&amp;do=form", "publicWithApp",'' ), "", "" ) . "' class='button' title='{$this->lang->words['go_to_compose']}'>{$this->lang->words['compose_new']}</a>
	{$pages}
</div>
</div>-->";
return $IPBHTML;
}


function __f__a2626768d7a1ea08dcef8d759a631bca($messages, $dirname, $pages, $currentFolderID, $jumpFolderHTML)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $messages as $id => $msg )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
		<div class='row touch-row' id=\"row-{$id}\">
			<div class='icon'>
				" . (($msg['mt_is_deleted'] OR $msg['map_user_banned']) ? ("
					" . $this->registry->getClass('output')->getReplacement("msg_deleted") . "
				") : ("" . (($msg['map_has_unread'] == 1) ? ("
						" . $this->registry->getClass('output')->getReplacement("msg_icon_new") . "
					") : ("
						" . $this->registry->getClass('output')->getReplacement("msg_icon") . "
					")) . "")) . "
			</div>
			<div class='row_content'>
				" . (($currentFolderID == 'drafts') ? ("
					<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=send&amp;do=form&amp;topicID={$msg['mt_id']}", "public",'' ), "", "" ) . "\" class=\"title\">{$msg['mt_title']}</a></strong>
				") : ("
					<strong><a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}", "public",'' ), "", "" ) . "\" class=\"title\">{$msg['mt_title']}</a></strong>
				")) . "
				<br />
				<span class='subtext'>
					{$this->lang->words['col_starter']}:
					" . (($msg['_starterMemberData']['members_display_name']) ? ("
						{$msg['_starterMemberData']['members_display_name']}
					") : ("
						<em>{$this->lang->words['deleted_user']}</em>
					")) . "
					" . ((!$msg['map_user_banned']) ? ("
						&middot; " . intval( $msg['mt_replies'] ) . " {$this->lang->words['col_replies']}
					") : ("")) . "			
				</span>
			</div>
		</div>
	
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- showSearchResults --*/
function showSearchResults($messages, $pages, $error) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_messaging', $this->_funcHooks['showSearchResults'] ) )
{
$count_e102d89b547e9d00ccb5f8452e8b751b = is_array($this->functionData['showSearchResults']) ? count($this->functionData['showSearchResults']) : 0;
$this->functionData['showSearchResults'][$count_e102d89b547e9d00ccb5f8452e8b751b]['messages'] = $messages;
$this->functionData['showSearchResults'][$count_e102d89b547e9d00ccb5f8452e8b751b]['pages'] = $pages;
$this->functionData['showSearchResults'][$count_e102d89b547e9d00ccb5f8452e8b751b]['error'] = $error;
}

if ( ! isset( $this->registry->templateStriping['msg_stripe'] ) ) {
$this->registry->templateStriping['msg_stripe'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<script type='text/javascript'>
//<![CDATA[
	ipb.messenger.curFolder = 'in';
//]]>
</script>
" . (($error) ? ("
	<p class='message error'>
		{$error}
	</p>
	<br />
") : ("")) . "
<div class='topic_controls'>
{$pages}
</div>
<br />
<h2 class='maintitle clear'>{$this->lang->words['your_search_results']}</h2>
<div id='message_list'>
		<table class='ipb_table' id='message_table'>
			<tr class='header'>
				<th scope='col' class='col_m_status'>&nbsp;</th>
				<th scope='col' class='col_m_subject'>{$this->lang->words['col_subject']}</th>
				<th scope='col' class='col_m_replies short'>{$this->lang->words['col_replies']}</th>
				<th scope='col' class='col_m_sender'>{$this->lang->words['col_recipient']}</th>
				<th scope='col' class='col_m_date'>{$this->lang->words['col_date']}</th>
			</tr>
		
			" . ((count( $messages )) ? ("
								".$this->__f__fdd4629d19a3d1ce5c1e9fa2289f4df7($messages,$pages,$error)."			") : ("
				<tr>
					<td colspan='5' class='no_messages row1'>
						{$this->lang->words['no_messages_row']}
					</td>
				</tr>
			")) . "
		</table>
	</form>
</div>";
return $IPBHTML;
}


function __f__fdd4629d19a3d1ce5c1e9fa2289f4df7($messages, $pages, $error)
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $messages as $id => $msg )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
					<tr id='{$msg['mt_id']}' class='" .  IPSLib::next( $this->registry->templateStriping["msg_stripe"] ) . "'>
						<td class='altrow short'>
						</td>
						<td>
							<span class='m_title'>
								" . (($msg['map_has_unread'] == 1) ? ("
									<strong>
								") : ("")) . "
								<a href=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=members&amp;module=messaging&amp;section=view&amp;do=showConversation&amp;topicID={$msg['mt_id']}", "public",'' ), "", "" ) . "\">{$msg['mt_title']}</a>
								" . (($msg['map_has_unread'] == 1) ? ("
									</strong>
								") : ("")) . "
								<p>{$this->lang->words['label_pc']} {$msg['_folderName']}</p>
							</span>
						</td>
						<td>
							<span class='desc'>" . intval( $msg['mt_replies'] ) . "</span>
						</td>
						<td class='altrow'>
							" . (($msg['_toMemberData']['member_id']) ? ("<a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "showuser={$msg['_toMemberData']['member_id']}", "public",'' ), "", "" ) . "'>{$msg['_toMemberData']['members_display_name']}</a>
								" . (($msg['mt_invited_count']) ? ("" . (($msg['mt_invited_count'] > 1) ? ("
										<p>({$this->lang->words['pc_and']} {$msg['mt_invited_count']} {$this->lang->words['pc_others']})</p>
									") : ("
										<p>({$this->lang->words['pc_and']} {$msg['mt_invited_count']} {$this->lang->words['pc_other']})</p>
									")) . "") : ("")) . "") : ("
								<span class='desc'>{$this->lang->words['deleted_user']}</span>
							")) . "
						</td>
						<td>
							" . $this->registry->getClass('class_localization')->getDate($msg['mt_last_post_time'],"long", 0) . "
						</td>
					</tr>
				
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>