<?php
/*--------------------------------------------------*/
/* FILE GENERATED BY INVISION POWER BOARD 3         */
/* CACHE FILE: Skin set id: 2               */
/* CACHE FILE: Generated: Wed, 29 Aug 2012 14:14:59 GMT */
/* DO NOT EDIT DIRECTLY - THE CHANGES WILL NOT BE   */
/* WRITTEN TO THE DATABASE AUTOMATICALLY            */
/*--------------------------------------------------*/

class skin_gallery_img_2 extends skinMaster{

/**
* Construct
*/
function __construct( ipsRegistry $registry )
{
	parent::__construct( $registry );
	

$this->_funcHooks = array();
$this->_funcHooks['meta_html'] = array('exif_data');
$this->_funcHooks['show_image'] = array('isMedia','onOffPrev','onOffNext');


}

/* -- ajaxDetail --*/
function ajaxDetail($image, $album="") {
$IPBHTML = "";
$IPBHTML .= "<h3>{$image['caption']}</h3>
<div class=\"blackPop\">
	{$image['small']}
	<p>
		{$this->lang->words['in_ucfirst']} <a href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;album={$album['album_id']}", "public",'' ), "{$album['album_name_seo']}", "viewalbum" ) . "'>{$album['album_name']}</a>
		{$this->lang->words['by_lower']}: " . ( method_exists( $this->registry->getClass('output')->getTemplate('global'), 'userHoverCard' ) ? $this->registry->getClass('output')->getTemplate('global')->userHoverCard($images) : '' ) . "
	</p>
<div>";
return $IPBHTML;
}

/* -- mediaEmbedPlayer --*/
function mediaEmbedPlayer($file, $playerOptions=array()) {
$IPBHTML = "";
$IPBHTML .= "<embed autoplay=\"true\" showcontrols=\"true\" showstatusbar=\"true\" showtracker=\"true\" src=\"{$file}\" width=\"640\" height=\"480\">";
return $IPBHTML;
}

/* -- mediaFlashPlayer --*/
function mediaFlashPlayer($file, $playerOptions=array()) {
$IPBHTML = "";
$IPBHTML .= "<script type=\"text/javascript\" src=\"{$this->settings['public_dir']}flowplayer/example/flowplayer-3.2.6.min.js\"></script>
<div id=\"player\" style=\"display:block;width:640px;height:480px;margin:0 auto\"></div>
<script language=\"JavaScript\">
	ipb.gallery.flashPlayerInit( \"$file\", \"{$this->settings['public_dir']}flowplayer/flowplayer-3.2.7.swf\" );
</script>";
return $IPBHTML;
}

/* -- meta_html --*/
function meta_html($content="") {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_gallery_img', $this->_funcHooks['meta_html'] ) )
{
$count_2086a8a2b3cb179ba0651c89789941b9 = is_array($this->functionData['meta_html']) ? count($this->functionData['meta_html']) : 0;
$this->functionData['meta_html'][$count_2086a8a2b3cb179ba0651c89789941b9]['content'] = $content;
}

if ( ! isset( $this->registry->templateStriping['meta'] ) ) {
$this->registry->templateStriping['meta'] = array( FALSE, "row1","row2");
}
$IPBHTML .= "<div id='metacontent' style='display: none'>
	<h3>{$this->lang->words['meta_table_header']}</h3>
	<table class='ipb_table'>
		".$this->__f__89e6e6996fbe0c2aa0218ab436ce09c5($content)."	</table>
</div>";
return $IPBHTML;
}


function __f__89e6e6996fbe0c2aa0218ab436ce09c5($content="")
{
	$_ips___x_retval = '';
	$__iteratorCount = 0;
	foreach( $content as $key => $value )
	{
		
		$__iteratorCount++;
		$_ips___x_retval .= "
			<tr class='" .  IPSLib::next( $this->registry->templateStriping["meta"] ) . "'>
				<td class='altrow'><strong>{$key}</strong></td>
				<td>{$value}</td>
			</tr>
		
";
	}
	$_ips___x_retval .= '';
	unset( $__iteratorCount );
	return $_ips___x_retval;
}

/* -- moveDialogue --*/
function moveDialogue($image, $options) {
$IPBHTML = "";
$IPBHTML .= "<form action=\"" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;module=images&amp;section=mod&amp;do=move&amp;imageid={$image['id']}&amp;secure_key={$this->member->form_hash}", "public",'' ), "", "" ) . "\" method=\"post\">
<h3>{$this->lang->words['img_move_title']}</h3>
<div class='row2 pad' style='text-align: center'>
 {$this->lang->words['img_move_to_album']}
 <select name='move_to_album_id' id='move_to_album_id' class='input_select'>
	{$options}
</select>
 <br /><br />
 <input type='submit' class=\"input_submit\" value=\"{$this->lang->words['img_move_submit']}\" />
</div>
</form>";
return $IPBHTML;
}

/* -- newSticker --*/
function newSticker($size=24) {
$IPBHTML = "";
$IPBHTML .= "<div class=\"img_new_sticker_{$size}\"></div>";
return $IPBHTML;
}

/* -- photostrip --*/
function photostrip($album, $images=array()) {
$IPBHTML = "";

/* Always return as UTF-8 */
	array_walk_recursive( $images, array( 'IPSText', 'arrayWalkCallbackConvert' ) );
	$jsonEncoded = json_encode( $images );
	$jsonEncoded = IPSText::convertCharsets($jsonEncoded, "UTF-8", IPS_DOC_CHAR_SET);
$IPBHTML .= "<h4>{$album['album_name']}</h4>
<div id='photostripwrap'>
	<div id='photostrip'>
		<ul id='strip'>
		</ul>
	</div>
	<div class='nav nleft' id='slide_left' style='display:none'></div>
	<div class='nav nright' id='slide_right' style='display:none'></div>
</div>
" . $this->registry->getClass('output')->addJSModule("gallery_photostrip", "0" ) . "
<script type=\"text/javascript\">
	ipb.vars['img_url'] = \"{$this->settings['img_url']}\";
	
	document.observe(\"dom:loaded\", function(){
		ipb.photostrip.setPhotoData( {$jsonEncoded} );
		ipb.photostrip.display();
	} );
</script>";
return $IPBHTML;
}

/* -- show_image --*/
function show_image($info=array(),$author=array(), $can_do_avatar=0,$photostrip,$comments, $nextPrev=array(), $faves, $album) {
$IPBHTML = "";
if( IPSLib::locationHasHooks( 'skin_gallery_img', $this->_funcHooks['show_image'] ) )
{
$count_1a05eacbcd42df1d838a7d1668573e7b = is_array($this->functionData['show_image']) ? count($this->functionData['show_image']) : 0;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['info'] = $info;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['author'] = $author;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['can_do_avatar'] = $can_do_avatar;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['photostrip'] = $photostrip;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['comments'] = $comments;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['nextPrev'] = $nextPrev;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['faves'] = $faves;
$this->functionData['show_image'][$count_1a05eacbcd42df1d838a7d1668573e7b]['album'] = $album;
}
$IPBHTML .= "<h2>{$info['caption']}</h2>
<div class='featured row2' style=\"background:black;text-align:center; padding:6px 0px\">
	" . (($info['media']) ? ("
		{$info['movie']}
	") : ("
		" . $this->registry->gallery->helper('image')->makeImageTag( $info, array('type' => 'small') ) . "
	")) . "
	<div style='color:white;padding:6px;'>{$this->lang->words['by_ucfirst']} {$author['members_display_name']}</div>
	" . (($nextPrev['prev'] !== null) ? ("
		<a class='button page-button' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;image={$nextPrev['prev']['id']}", "public",'' ), "{$nextPrev['prev']['caption_seo']}", "viewimage" ) . "'>&larr; {$this->lang->words['previous_ucfirst']}</a>
	") : ("
		<a class='button page-button disabled' href='#'>&larr; {$this->lang->words['previous_ucfirst']}</a>
	")) . "
	" . (($nextPrev['next'] !== null) ? ("
		<a class='button page-button' href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;image={$nextPrev['next']['id']}", "public",'' ), "{$nextPrev['next']['caption_seo']}", "viewimage" ) . "'>{$this->lang->words['next_ucfirst']} &rarr;</a>
	") : ("
		<a class='button page-button disabled' href='#'>{$this->lang->words['next_ucfirst']} &rarr;</a>
	")) . "	
</div>
<h3>{$this->lang->words['mobile_image_data']}</h3>
<div class='master_list'>
<ul >
	<li class='row'><strong>{$this->lang->words['uploaded_ucfirst']}:</strong> " . $this->registry->getClass('class_localization')->getDate($info['idate'],"long", 0) . "</li>
	" . (($info['_camera_model']) ? ("
		<li class='row'><strong>Camera:</strong> {$info['_camera_model']}</li>
	") : ("")) . "" . (($info['_date_taken']) ? ("
		<li class='row'><strong>{$this->lang->words['taken_ucfirst']}:</strong> " . $this->registry->getClass('class_localization')->getDate($info['_date_taken'],"short", 0) . "</li>
	") : ("")) . "
	<li class='row'><strong>{$this->lang->words['views']}</strong> {$info['views']}</li>
</ul>		
{$comments}";
return $IPBHTML;
}

/* -- sizes --*/
function sizes($image, $album="", $size="") {
$IPBHTML = "";
$IPBHTML .= "<div class='gallery_wrap'>
	<h2 class=\"gallery_title\">{$image['caption']}</h2>
	<div id=\"photo_sizes\">
		<ul class='gallery_buttons'>
			<li>
				<a " . (($size == 'square') ? ("class=\"on\"") : ("")) . " href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;image={$image['id']}&amp;size=square", "public",'' ), "{$image['caption_seo']}", "viewsizes" ) . "'>Square</a>
				<span>({$image['_data']['sizes']['thumb'][0]} x {$image['_data']['sizes']['thumb'][1]})</span>
			</li>
	 		<li>
	 			<a " . (($size == 'small') ? ("class=\"on\"") : ("")) . " href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;image={$image['id']}&amp;size=small", "public",'' ), "{$image['caption_seo']}", "viewsizes" ) . "'>Small</a>
	 			<span>({$image['_data']['sizes']['small'][0]} x {$image['_data']['sizes']['small'][1]})</span>
	 		</li>
	 		<li>
	 			<a " . (($size == 'medium') ? ("class=\"on\"") : ("")) . " href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;image={$image['id']}&amp;size=medium", "public",'' ), "{$image['caption_seo']}", "viewsizes" ) . "'>Medium</a>
	 			<span>({$image['_data']['sizes']['medium'][0]} x {$image['_data']['sizes']['medium'][1]})</span>
	 		</li>
	 		<li>
	 			<a " . (($size == 'large') ? ("class=\"on\"") : ("")) . " href='" . $this->registry->getClass('output')->formatUrl( $this->registry->getClass('output')->buildUrl( "app=gallery&amp;image={$image['id']}&amp;size=large", "public",'' ), "{$image['caption_seo']}", "viewsizes" ) . "'>Large</a>
	 			<span>({$image['_data']['sizes']['max'][0]} x {$image['_data']['sizes']['max'][1]})</span>
	 		</li>
	 	</ul>
	 	<p>
	 		{$image['tag']}
	 	</p>
	 </div>
</div>";
return $IPBHTML;
}


}


/*--------------------------------------------------*/
/* END OF FILE                                      */
/*--------------------------------------------------*/

?>